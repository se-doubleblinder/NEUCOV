{"3219": {"id": 3219, "code": "p = \"12\";q = \"4\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3220": {"id": 3220, "code": "p = \"20\";q = \"15\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3221": {"id": 3221, "code": "p = \"20\";q = \"30\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3222": {"id": 3222, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3223": {"id": 3223, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3224": {"id": 3224, "code": "A = 20;B = 30\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3225": {"id": 3225, "code": "A = \"12\";B = \"4\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3226": {"id": 3226, "code": "A = \"20\";B = \"15\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3227": {"id": 3227, "code": "A = \"20\";B = \"30\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3228": {"id": 3228, "code": "a = 12;b = 4\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3229": {"id": 3229, "code": "a = 20;b = 15\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3230": {"id": 3230, "code": "a = 20;b = 30\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3231": {"id": 3231, "code": "icase=0\nif icase==0:\n    a = 12;b = 4\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3232": {"id": 3232, "code": "icase=0\nif icase==0:\n    a = 20;b = 15\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3233": {"id": 3233, "code": "icase=0\nif icase==0:\n    a = 20;b = 30\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3234": {"id": 3234, "code": "def q1():\n    A = 12;B = 4\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3235": {"id": 3235, "code": "def q1():\n    A = 20;B = 15\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3236": {"id": 3236, "code": "def q1():\n    A = 20;B = 30\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3237": {"id": 3237, "code": "a = 12;b = 4\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3238": {"id": 3238, "code": "a = 20;b = 15\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3239": {"id": 3239, "code": "a = 20;b = 30\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3240": {"id": 3240, "code": "A = 12;B = 4\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3241": {"id": 3241, "code": "A = 20;B = 15\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3242": {"id": 3242, "code": "A = 20;B = 30\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3243": {"id": 3243, "code": "a = 12;b = 4\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", "!", "!", ">", ">"]}, "3244": {"id": 3244, "code": "a = 20;b = 15\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3245": {"id": 3245, "code": "a = 20;b = 30\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3246": {"id": 3246, "code": "a = 12;b = 4\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "3247": {"id": 3247, "code": "a = 20;b = 15\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3248": {"id": 3248, "code": "a = 20;b = 30\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3249": {"id": 3249, "code": "a = 12;b = 4\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3250": {"id": 3250, "code": "a = 20;b = 15\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3251": {"id": 3251, "code": "a = 20;b = 30\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3252": {"id": 3252, "code": "a = 12;b = 4\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "3253": {"id": 3253, "code": "a = 20;b = 15\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "3254": {"id": 3254, "code": "a = 20;b = 30\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3255": {"id": 3255, "code": "a = 12;b = 4\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3256": {"id": 3256, "code": "a = 20;b = 15\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3257": {"id": 3257, "code": "a = 20;b = 30\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3258": {"id": 3258, "code": "x = \"12 4\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3259": {"id": 3259, "code": "x = \"20 15\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3260": {"id": 3260, "code": "x = \"20 30\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3261": {"id": 3261, "code": "a = 12;b = 4\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3262": {"id": 3262, "code": "a = 20;b = 15\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3263": {"id": 3263, "code": "a = 20;b = 30\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3267": {"id": 3267, "code": "x = 12;y = 4\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3268": {"id": 3268, "code": "x = 20;y = 15\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3269": {"id": 3269, "code": "x = 20;y = 30\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3270": {"id": 3270, "code": "a = 12;b = 4\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3271": {"id": 3271, "code": "a = 20;b = 15\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3272": {"id": 3272, "code": "a = 20;b = 30\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3273": {"id": 3273, "code": "a = 12;b = 4\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", "!", "!", ">"]}, "3274": {"id": 3274, "code": "a = 20;b = 15\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3275": {"id": 3275, "code": "a = 20;b = 30\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3276": {"id": 3276, "code": "A = 12;B = 4\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3277": {"id": 3277, "code": "A = 20;B = 15\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3278": {"id": 3278, "code": "A = 20;B = 30\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3279": {"id": 3279, "code": "a = 12;b = 4\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3280": {"id": 3280, "code": "a = 20;b = 15\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3281": {"id": 3281, "code": "a = 20;b = 30\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3282": {"id": 3282, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3283": {"id": 3283, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3284": {"id": 3284, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3285": {"id": 3285, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 12;B = 4\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3286": {"id": 3286, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 15\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3287": {"id": 3287, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 30\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3288": {"id": 3288, "code": "a = 12;b = 4\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3289": {"id": 3289, "code": "a = 20;b = 15\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3290": {"id": 3290, "code": "a = 20;b = 30\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3291": {"id": 3291, "code": "a = 12;b = 4\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", ">", "!"]}, "3292": {"id": 3292, "code": "a = 20;b = 15\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", "!", ">"]}, "3293": {"id": 3293, "code": "a = 20;b = 30\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", "!", ">"]}, "3294": {"id": 3294, "code": "a = 12;b = 4\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "3295": {"id": 3295, "code": "a = 20;b = 15\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "3296": {"id": 3296, "code": "a = 20;b = 30\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "3297": {"id": 3297, "code": "a = 12;b = 4\nans = a - b *2\nif(ans < 0):\n  print(0)\n  exit()\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3298": {"id": 3298, "code": "a = 12;b = 4\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3299": {"id": 3299, "code": "a = 20;b = 15\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3300": {"id": 3300, "code": "a = 20;b = 30\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3301": {"id": 3301, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 12;b = 4\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3302": {"id": 3302, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 15\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3303": {"id": 3303, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 30\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3304": {"id": 3304, "code": "import sys\ninput = \"<function <lambda>>\"\na = 12;b = 4\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3305": {"id": 3305, "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 15\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3306": {"id": 3306, "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 30\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3307": {"id": 3307, "code": "a = 12;b = 4\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", ">", "!"]}, "3308": {"id": 3308, "code": "a = 20;b = 15\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", "!", ">"]}, "3309": {"id": 3309, "code": "a = 20;b = 30\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", "!", ">"]}, "3310": {"id": 3310, "code": "a = 12;b = 4\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3311": {"id": 3311, "code": "a = 20;b = 15\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3312": {"id": 3312, "code": "a = 20;b = 30\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3313": {"id": 3313, "code": "import math\na = 12;b = 4\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3314": {"id": 3314, "code": "import math\na = 20;b = 15\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3315": {"id": 3315, "code": "import math\na = 20;b = 30\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3316": {"id": 3316, "code": "a = 12;b = 4\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3317": {"id": 3317, "code": "a = 20;b = 15\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3318": {"id": 3318, "code": "a = 20;b = 30\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3319": {"id": 3319, "code": "import sys\na = 12;b = 4\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3320": {"id": 3320, "code": "import sys\na = 20;b = 15\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3321": {"id": 3321, "code": "import sys\na = 20;b = 30\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3322": {"id": 3322, "code": "a = 12;b = 4\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3323": {"id": 3323, "code": "a = 20;b = 15\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3324": {"id": 3324, "code": "a = 20;b = 30\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3325": {"id": 3325, "code": "A = 12;B = 4\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3326": {"id": 3326, "code": "A = 20;B = 15\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3327": {"id": 3327, "code": "A = 20;B = 30\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3328": {"id": 3328, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3329": {"id": 3329, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3330": {"id": 3330, "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3331": {"id": 3331, "code": "\u3042 = 12;\u3044 = 4\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3332": {"id": 3332, "code": "\u3042 = 20;\u3044 = 15\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3333": {"id": 3333, "code": "\u3042 = 20;\u3044 = 30\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3334": {"id": 3334, "code": "A = 12;B = 4\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "3335": {"id": 3335, "code": "A = 20;B = 15\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "3336": {"id": 3336, "code": "A = 20;B = 30\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "3337": {"id": 3337, "code": "import sys\ndef ISI(): return map(int, \"12 4\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", ">"]}, "3338": {"id": 3338, "code": "import sys\ndef ISI(): return map(int, \"20 15\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "3339": {"id": 3339, "code": "import sys\ndef ISI(): return map(int, \"20 30\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "3340": {"id": 3340, "code": "A = 12;B = 4\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3341": {"id": 3341, "code": "A = 20;B = 15\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3342": {"id": 3342, "code": "A = 20;B = 30\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3343": {"id": 3343, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3344": {"id": 3344, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3345": {"id": 3345, "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3346": {"id": 3346, "code": "A = 12;B = 4\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "3347": {"id": 3347, "code": "A = 20;B = 15\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3348": {"id": 3348, "code": "A = 20;B = 30\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3349": {"id": 3349, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3350": {"id": 3350, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3351": {"id": 3351, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3352": {"id": 3352, "code": "A = 12;B = 4\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3353": {"id": 3353, "code": "A = 20;B = 15\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3354": {"id": 3354, "code": "A = 20;B = 30\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3355": {"id": 3355, "code": "def main():\n    A = 12;B = 4\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3356": {"id": 3356, "code": "def main():\n    A = 20;B = 15\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3357": {"id": 3357, "code": "def main():\n    A = 20;B = 30\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3358": {"id": 3358, "code": "a = 12;b = 4\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3359": {"id": 3359, "code": "a = 20;b = 15\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3360": {"id": 3360, "code": "a = 20;b = 30\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3361": {"id": 3361, "code": "A = 12;B = 4\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3362": {"id": 3362, "code": "A = 20;B = 15\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3363": {"id": 3363, "code": "A = 20;B = 30\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3364": {"id": 3364, "code": "a = 12;b = 4\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3365": {"id": 3365, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3366": {"id": 3366, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3367": {"id": 3367, "code": "A = 12;B = 4\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3368": {"id": 3368, "code": "A = 20;B = 15\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3369": {"id": 3369, "code": "A = 20;B = 30\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3370": {"id": 3370, "code": "A = 12;B = 4\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3371": {"id": 3371, "code": "A = 20;B = 15\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3372": {"id": 3372, "code": "A = 20;B = 30\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3373": {"id": 3373, "code": "a = 12;b = 4\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "3374": {"id": 3374, "code": "a = 20;b = 15\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3375": {"id": 3375, "code": "a = 20;b = 30\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3376": {"id": 3376, "code": "def main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3377": {"id": 3377, "code": "def main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3378": {"id": 3378, "code": "def main():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3379": {"id": 3379, "code": "a = 12;b = 4\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3380": {"id": 3380, "code": "a = 20;b = 15\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3381": {"id": 3381, "code": "a = 20;b = 30\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3382": {"id": 3382, "code": "def main():\n    n = 12;k = 4\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3383": {"id": 3383, "code": "def main():\n    n = 20;k = 15\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3384": {"id": 3384, "code": "def main():\n    n = 20;k = 30\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3385": {"id": 3385, "code": "a = 12;b = 4\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3386": {"id": 3386, "code": "a = 20;b = 15\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", ">", "!", "!"]}, "3387": {"id": 3387, "code": "a = 20;b = 30\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", ">", "!", "!"]}, "3388": {"id": 3388, "code": "a = 12;b = 4\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3389": {"id": 3389, "code": "a = 20;b = 15\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3390": {"id": 3390, "code": "a = 20;b = 30\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3391": {"id": 3391, "code": "A = 12;B = 4\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3392": {"id": 3392, "code": "A = 20;B = 15\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3393": {"id": 3393, "code": "A = 20;B = 30\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3394": {"id": 3394, "code": "A = 12;B = 4\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", "!", "!", ">"]}, "3395": {"id": 3395, "code": "A = 20;B = 15\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "3396": {"id": 3396, "code": "A = 20;B = 30\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "3397": {"id": 3397, "code": "line = \"12 4\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "3398": {"id": 3398, "code": "line = \"20 15\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3399": {"id": 3399, "code": "line = \"20 30\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3400": {"id": 3400, "code": "a = 12;b = 4\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", ">"]}, "3401": {"id": 3401, "code": "a = 20;b = 15\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "3402": {"id": 3402, "code": "a = 20;b = 30\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "3403": {"id": 3403, "code": "A = 12;B = 4\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3404": {"id": 3404, "code": "A = 20;B = 15\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3405": {"id": 3405, "code": "A = 20;B = 30\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3406": {"id": 3406, "code": "A = 12;B = 4\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3407": {"id": 3407, "code": "A = 20;B = 15\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3408": {"id": 3408, "code": "A = 20;B = 30\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3409": {"id": 3409, "code": "A = 12;B = 4\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3410": {"id": 3410, "code": "A = 20;B = 15\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3411": {"id": 3411, "code": "A = 20;B = 30\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3412": {"id": 3412, "code": "A = 12;B = 4\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", "!", ">", ">"]}, "3413": {"id": 3413, "code": "A = 20;B = 15\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "3414": {"id": 3414, "code": "A = 20;B = 30\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "3415": {"id": 3415, "code": "def main():\n    a = 12;b = 4\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3416": {"id": 3416, "code": "def main():\n    a = 20;b = 15\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3417": {"id": 3417, "code": "def main():\n    a = 20;b = 30\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3418": {"id": 3418, "code": "a = 12;b = 4\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3419": {"id": 3419, "code": "a = 20;b = 15\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3420": {"id": 3420, "code": "a = 20;b = 30\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3421": {"id": 3421, "code": "from sys import stdin\ndef main():\n    A = 12;B = 4\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3422": {"id": 3422, "code": "from sys import stdin\ndef main():\n    A = 20;B = 15\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3423": {"id": 3423, "code": "from sys import stdin\ndef main():\n    A = 20;B = 30\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3424": {"id": 3424, "code": "a = 12;b = 4\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3425": {"id": 3425, "code": "a = 20;b = 15\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3426": {"id": 3426, "code": "a = 20;b = 30\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3427": {"id": 3427, "code": "A = 12;B = 4\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3428": {"id": 3428, "code": "A = 20;B = 15\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3429": {"id": 3429, "code": "A = 20;B = 30\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3430": {"id": 3430, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 12;b = 4\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3431": {"id": 3431, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 15\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3432": {"id": 3432, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 30\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3433": {"id": 3433, "code": "x = 12;y = 4\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3434": {"id": 3434, "code": "x = 20;y = 15\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3435": {"id": 3435, "code": "x = 20;y = 30\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3436": {"id": 3436, "code": "A = 12;B = 4\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", "!"]}, "3437": {"id": 3437, "code": "A = 20;B = 15\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", ">"]}, "3438": {"id": 3438, "code": "A = 20;B = 30\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", ">"]}, "3439": {"id": 3439, "code": "def ABC_143_A():\n    A = 12;B = 4\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3440": {"id": 3440, "code": "def ABC_143_A():\n    A = 20;B = 15\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3441": {"id": 3441, "code": "def ABC_143_A():\n    A = 20;B = 30\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3442": {"id": 3442, "code": "a = 12;b = 4\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3443": {"id": 3443, "code": "a = 20;b = 15\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3444": {"id": 3444, "code": "a = 20;b = 30\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3445": {"id": 3445, "code": "a = 12;b = 4\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3446": {"id": 3446, "code": "a = 20;b = 15\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3447": {"id": 3447, "code": "a = 20;b = 30\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3448": {"id": 3448, "code": "a = 12;b = 4\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3449": {"id": 3449, "code": "a = 20;b = 15\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3450": {"id": 3450, "code": "a = 20;b = 30\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3451": {"id": 3451, "code": "def main():\n a = 12;b = 4\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3452": {"id": 3452, "code": "def main():\n a = 20;b = 15\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3453": {"id": 3453, "code": "def main():\n a = 20;b = 30\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3454": {"id": 3454, "code": "a = 12;b = 4\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3455": {"id": 3455, "code": "a = 20;b = 15\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3456": {"id": 3456, "code": "a = 20;b = 30\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3457": {"id": 3457, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"12 4\".strip()\ndef resolve():\n    a = 12;b = 4\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3458": {"id": 3458, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 15\".strip()\ndef resolve():\n    a = 20;b = 15\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3459": {"id": 3459, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 30\".strip()\ndef resolve():\n    a = 20;b = 30\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3460": {"id": 3460, "code": "a = 12;b = 4\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3461": {"id": 3461, "code": "a = 20;b = 15\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3462": {"id": 3462, "code": "a = 20;b = 30\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3466": {"id": 3466, "code": "a = 12;b = 4\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "3467": {"id": 3467, "code": "a = 20;b = 15\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "3468": {"id": 3468, "code": "a = 20;b = 30\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3469": {"id": 3469, "code": "A = 12;B = 4\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3470": {"id": 3470, "code": "A = 20;B = 15\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3471": {"id": 3471, "code": "A = 20;B = 30\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3472": {"id": 3472, "code": "a = 12;b = 4\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", "!", ">", ">"]}, "3473": {"id": 3473, "code": "a = 20;b = 15\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3474": {"id": 3474, "code": "a = 20;b = 30\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3475": {"id": 3475, "code": "a = 12;b = 4\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3476": {"id": 3476, "code": "a = 20;b = 15\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3477": {"id": 3477, "code": "a = 20;b = 30\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3478": {"id": 3478, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 12;b = 4\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3479": {"id": 3479, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 20;b = 15\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3480": {"id": 3480, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 20;b = 30\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3481": {"id": 3481, "code": "a = 12;b = 4\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!"]}, "3482": {"id": 3482, "code": "a = 20;b = 15\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "3483": {"id": 3483, "code": "a = 20;b = 30\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "3484": {"id": 3484, "code": "A = 12;B = 4\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3485": {"id": 3485, "code": "A = 20;B = 15\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3486": {"id": 3486, "code": "A = 20;B = 30\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3487": {"id": 3487, "code": "a = 12;b = 4\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3488": {"id": 3488, "code": "a = 20;b = 15\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3489": {"id": 3489, "code": "a = 20;b = 30\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3490": {"id": 3490, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3491": {"id": 3491, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3492": {"id": 3492, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3493": {"id": 3493, "code": "a = 12;b = 4\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3494": {"id": 3494, "code": "a = 20;b = 15\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3495": {"id": 3495, "code": "a = 20;b = 30\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3496": {"id": 3496, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3497": {"id": 3497, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3498": {"id": 3498, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3499": {"id": 3499, "code": "A = 12;B = 4\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", "!", "!", ">"]}, "3500": {"id": 3500, "code": "A = 20;B = 15\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "3501": {"id": 3501, "code": "A = 20;B = 30\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "3502": {"id": 3502, "code": "a = 12;b = 4\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3503": {"id": 3503, "code": "a = 20;b = 15\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3504": {"id": 3504, "code": "a = 20;b = 30\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3505": {"id": 3505, "code": "if __name__ == '__main__':\n    a = 12;b = 4\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3506": {"id": 3506, "code": "if __name__ == '__main__':\n    a = 20;b = 15\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3507": {"id": 3507, "code": "if __name__ == '__main__':\n    a = 20;b = 30\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3508": {"id": 3508, "code": "A = 12;B = 4\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3509": {"id": 3509, "code": "A = 20;B = 15\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3510": {"id": 3510, "code": "A = 20;B = 30\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3511": {"id": 3511, "code": "import sys\nA = 12;B = 4\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3512": {"id": 3512, "code": "import sys\nA = 20;B = 15\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3513": {"id": 3513, "code": "import sys\nA = 20;B = 30\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3514": {"id": 3514, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3515": {"id": 3515, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3516": {"id": 3516, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3517": {"id": 3517, "code": "A = 12;B = 4\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3518": {"id": 3518, "code": "A = 20;B = 15\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3519": {"id": 3519, "code": "A = 20;B = 30\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3520": {"id": 3520, "code": "a = 12;b = 4\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3521": {"id": 3521, "code": "a = 20;b = 15\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3522": {"id": 3522, "code": "a = 20;b = 30\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3523": {"id": 3523, "code": "a = 12;b = 4\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "3524": {"id": 3524, "code": "a = 20;b = 15\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3525": {"id": 3525, "code": "a = 20;b = 30\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3529": {"id": 3529, "code": "def resolve():\n    A = 12;B = 4\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3530": {"id": 3530, "code": "def resolve():\n    A = 20;B = 15\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3531": {"id": 3531, "code": "def resolve():\n    A = 20;B = 30\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3532": {"id": 3532, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3533": {"id": 3533, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3534": {"id": 3534, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3535": {"id": 3535, "code": "import sys\ndef S(): return \"12 4\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3536": {"id": 3536, "code": "import sys\ndef S(): return \"20 15\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3537": {"id": 3537, "code": "import sys\ndef S(): return \"20 30\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3538": {"id": 3538, "code": "a = 12;b = 4\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3539": {"id": 3539, "code": "a = 20;b = 15\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3540": {"id": 3540, "code": "a = 20;b = 30\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3541": {"id": 3541, "code": "a = 12;b = 4\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3542": {"id": 3542, "code": "a = 20;b = 15\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3543": {"id": 3543, "code": "a = 20;b = 30\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3544": {"id": 3544, "code": "a = 12;b = 4\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3545": {"id": 3545, "code": "a = 20;b = 15\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3546": {"id": 3546, "code": "a = 20;b = 30\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3547": {"id": 3547, "code": "A = 12;B = 4\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3548": {"id": 3548, "code": "A = 20;B = 15\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3549": {"id": 3549, "code": "A = 20;B = 30\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3550": {"id": 3550, "code": "A = 12;B = 4\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3551": {"id": 3551, "code": "A = 20;B = 15\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3552": {"id": 3552, "code": "A = 20;B = 30\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3553": {"id": 3553, "code": "def main():\n    a = 12;b = 4\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3554": {"id": 3554, "code": "def main():\n    a = 20;b = 15\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3555": {"id": 3555, "code": "def main():\n    a = 20;b = 30\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3556": {"id": 3556, "code": "A = 12;B = 4\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3557": {"id": 3557, "code": "A = 20;B = 15\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3558": {"id": 3558, "code": "A = 20;B = 30\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3559": {"id": 3559, "code": "a = 12;b = 4\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3560": {"id": 3560, "code": "a = 20;b = 15\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3561": {"id": 3561, "code": "a = 20;b = 30\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3562": {"id": 3562, "code": "house_len = 12;curtain_len = 4\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3563": {"id": 3563, "code": "house_len = 20;curtain_len = 15\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3564": {"id": 3564, "code": "house_len = 20;curtain_len = 30\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3565": {"id": 3565, "code": "A = 12;B = 4\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3566": {"id": 3566, "code": "A = 20;B = 15\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3567": {"id": 3567, "code": "A = 20;B = 30\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3568": {"id": 3568, "code": "a = 12;b = 4\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", "!", "!", ">"]}, "3569": {"id": 3569, "code": "a = 20;b = 15\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3570": {"id": 3570, "code": "a = 20;b = 30\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3571": {"id": 3571, "code": "A = 12;B = 4\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3572": {"id": 3572, "code": "A = 20;B = 15\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3573": {"id": 3573, "code": "A = 20;B = 30\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3574": {"id": 3574, "code": "from sys import stdin\na = 12;b = 4\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3575": {"id": 3575, "code": "from sys import stdin\na = 20;b = 15\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3576": {"id": 3576, "code": "from sys import stdin\na = 20;b = 30\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3577": {"id": 3577, "code": "a = 12;b = 4\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3578": {"id": 3578, "code": "a = 20;b = 15\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3579": {"id": 3579, "code": "a = 20;b = 30\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3580": {"id": 3580, "code": "a = 12;b = 4\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "3581": {"id": 3581, "code": "a = 20;b = 15\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3582": {"id": 3582, "code": "a = 20;b = 30\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3583": {"id": 3583, "code": "A = 12;B = 4\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3584": {"id": 3584, "code": "A = 20;B = 15\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3585": {"id": 3585, "code": "A = 20;B = 30\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3586": {"id": 3586, "code": "a = 12;b = 4\nans = a-b*2\nif ans<=0:\n    print(0);exit()\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3587": {"id": 3587, "code": "n = 12;m = 4\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", "!", "!", ">"]}, "3588": {"id": 3588, "code": "n = 20;m = 15\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", ">", "!", "!"]}, "3589": {"id": 3589, "code": "n = 20;m = 30\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", ">", "!", "!"]}, "3590": {"id": 3590, "code": "a = 12;b = 4\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3591": {"id": 3591, "code": "a = 20;b = 15\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3592": {"id": 3592, "code": "a = 20;b = 30\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3593": {"id": 3593, "code": "a = 12;b = 4\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3594": {"id": 3594, "code": "a = 20;b = 15\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3595": {"id": 3595, "code": "a = 20;b = 30\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3596": {"id": 3596, "code": "A = 12;B = 4\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3597": {"id": 3597, "code": "A = 20;B = 15\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3598": {"id": 3598, "code": "A = 20;B = 30\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3599": {"id": 3599, "code": "A = 12;B = 4\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3600": {"id": 3600, "code": "A = 20;B = 15\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3601": {"id": 3601, "code": "A = 20;B = 30\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3602": {"id": 3602, "code": "A = 12;B = 4\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3603": {"id": 3603, "code": "A = 20;B = 15\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3604": {"id": 3604, "code": "A = 20;B = 30\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3608": {"id": 3608, "code": "a = 12;b = 4\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", ">"]}, "3609": {"id": 3609, "code": "a = 20;b = 15\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "3610": {"id": 3610, "code": "a = 20;b = 30\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "3611": {"id": 3611, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 12;B = 4\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3612": {"id": 3612, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 15\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3613": {"id": 3613, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 30\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3614": {"id": 3614, "code": "a = \"12\";b = \"4\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3615": {"id": 3615, "code": "a = \"20\";b = \"15\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3616": {"id": 3616, "code": "a = \"20\";b = \"30\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3617": {"id": 3617, "code": "def resolve():\n    a = 12;b = 4\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3618": {"id": 3618, "code": "def resolve():\n    a = 20;b = 15\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3619": {"id": 3619, "code": "def resolve():\n    a = 20;b = 30\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3620": {"id": 3620, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 12;B = 4\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3621": {"id": 3621, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 20;B = 15\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3622": {"id": 3622, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 20;B = 30\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3623": {"id": 3623, "code": "a = 12;b = 4\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3624": {"id": 3624, "code": "a = 20;b = 15\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3625": {"id": 3625, "code": "a = 20;b = 30\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3626": {"id": 3626, "code": "a = 12;b = 4\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", ">"]}, "3627": {"id": 3627, "code": "a = 20;b = 15\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", "!"]}, "3628": {"id": 3628, "code": "a = 20;b = 30\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", "!"]}, "3629": {"id": 3629, "code": "A = 12;B = 4\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3630": {"id": 3630, "code": "A = 20;B = 15\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3631": {"id": 3631, "code": "A = 20;B = 30\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3632": {"id": 3632, "code": "a = 12;b = 4\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3633": {"id": 3633, "code": "a = 20;b = 15\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3634": {"id": 3634, "code": "a = 20;b = 30\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3635": {"id": 3635, "code": "A = 12;B = 4\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3636": {"id": 3636, "code": "A = 20;B = 15\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3637": {"id": 3637, "code": "A = 20;B = 30\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3638": {"id": 3638, "code": "A = 12;B = 4\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3639": {"id": 3639, "code": "A = 20;B = 15\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3640": {"id": 3640, "code": "A = 20;B = 30\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3641": {"id": 3641, "code": "def solve():\n    N = 12;M = 4\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3642": {"id": 3642, "code": "def solve():\n    N = 20;M = 15\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3643": {"id": 3643, "code": "def solve():\n    N = 20;M = 30\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3644": {"id": 3644, "code": "a = 12;b = 4\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3645": {"id": 3645, "code": "a = 20;b = 15\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3646": {"id": 3646, "code": "a = 20;b = 30\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3647": {"id": 3647, "code": "import sys\ndef main():\n    A = 12;B = 4\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3648": {"id": 3648, "code": "import sys\ndef main():\n    A = 20;B = 15\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3649": {"id": 3649, "code": "import sys\ndef main():\n    A = 20;B = 30\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3650": {"id": 3650, "code": "a = 12;b = 4\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3651": {"id": 3651, "code": "a = 20;b = 15\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3652": {"id": 3652, "code": "a = 20;b = 30\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3653": {"id": 3653, "code": "a = 12;b = 4\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", "!", "!", ">"]}, "3654": {"id": 3654, "code": "a = 20;b = 15\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3655": {"id": 3655, "code": "a = 20;b = 30\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3656": {"id": 3656, "code": "n = 12;m = 4\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3657": {"id": 3657, "code": "n = 20;m = 15\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3658": {"id": 3658, "code": "n = 20;m = 30\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3659": {"id": 3659, "code": "def main():\n    A = 12;B = 4\n    if A < B * 2:\n        print(0)\n        exit(0)\n    else:\n        print(A - B * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "3660": {"id": 3660, "code": "x = 12;y = 4\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", "!", "!", ">"]}, "3661": {"id": 3661, "code": "x = 20;y = 15\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", ">", "!", "!"]}, "3662": {"id": 3662, "code": "x = 20;y = 30\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", ">", "!", "!"]}, "3663": {"id": 3663, "code": "w = 12;c = 4\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", "!", ">"]}, "3664": {"id": 3664, "code": "w = 20;c = 15\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "3665": {"id": 3665, "code": "w = 20;c = 30\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "3666": {"id": 3666, "code": "A = 12;B = 4\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3667": {"id": 3667, "code": "A = 20;B = 15\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3668": {"id": 3668, "code": "A = 20;B = 30\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3669": {"id": 3669, "code": "def main():\n    a = 12;b = 4\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3670": {"id": 3670, "code": "def main():\n    a = 20;b = 15\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3671": {"id": 3671, "code": "def main():\n    a = 20;b = 30\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3672": {"id": 3672, "code": "from sys import stdin\na = 12;b = 4\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3673": {"id": 3673, "code": "from sys import stdin\na = 20;b = 15\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3674": {"id": 3674, "code": "from sys import stdin\na = 20;b = 30\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3675": {"id": 3675, "code": "a = 12;b = 4\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3676": {"id": 3676, "code": "a = 20;b = 15\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3677": {"id": 3677, "code": "a = 20;b = 30\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3678": {"id": 3678, "code": "a = 12;b = 4\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3679": {"id": 3679, "code": "a = 20;b = 15\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3680": {"id": 3680, "code": "a = 20;b = 30\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3681": {"id": 3681, "code": "a = 12;b = 4\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3682": {"id": 3682, "code": "a = 20;b = 15\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3683": {"id": 3683, "code": "a = 20;b = 30\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3684": {"id": 3684, "code": "a = 12;b = 4\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3685": {"id": 3685, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3686": {"id": 3686, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3687": {"id": 3687, "code": "a = 12;b = 4\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", "!", ">"]}, "3688": {"id": 3688, "code": "a = 20;b = 15\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "3689": {"id": 3689, "code": "a = 20;b = 30\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "3690": {"id": 3690, "code": "A = 12;B = 4\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3691": {"id": 3691, "code": "A = 20;B = 15\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3692": {"id": 3692, "code": "A = 20;B = 30\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3693": {"id": 3693, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 12;b = 4\nprint(curtain(a,b))", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "3694": {"id": 3694, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 15\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3695": {"id": 3695, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 30\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3696": {"id": 3696, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 12;B = 4\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3697": {"id": 3697, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 20;B = 15\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3698": {"id": 3698, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 20;B = 30\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3699": {"id": 3699, "code": "a = 12;b = 4\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3700": {"id": 3700, "code": "a = 20;b = 15\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3701": {"id": 3701, "code": "a = 20;b = 30\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3702": {"id": 3702, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3703": {"id": 3703, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3704": {"id": 3704, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3705": {"id": 3705, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3706": {"id": 3706, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3707": {"id": 3707, "code": "A = 20;B = 30\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3708": {"id": 3708, "code": "A = 12;B = 4\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3709": {"id": 3709, "code": "A = 20;B = 15\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3710": {"id": 3710, "code": "A = 20;B = 30\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3711": {"id": 3711, "code": "def main():\n    A = 12;B = 4\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3712": {"id": 3712, "code": "def main():\n    A = 20;B = 15\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3713": {"id": 3713, "code": "def main():\n    A = 20;B = 30\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3714": {"id": 3714, "code": "def main():\n    A = 12;B = 4\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3715": {"id": 3715, "code": "def main():\n    A = 20;B = 15\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3716": {"id": 3716, "code": "def main():\n    A = 20;B = 30\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3717": {"id": 3717, "code": "A = 12;B = 4\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", "!", ">"]}, "3718": {"id": 3718, "code": "A = 20;B = 15\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "3719": {"id": 3719, "code": "A = 20;B = 30\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "3720": {"id": 3720, "code": "a = 12;b = 4\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3721": {"id": 3721, "code": "a = 20;b = 15\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3722": {"id": 3722, "code": "a = 20;b = 30\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3723": {"id": 3723, "code": "N = 12;M = 4\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "3724": {"id": 3724, "code": "N = 20;M = 15\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "3725": {"id": 3725, "code": "N = 20;M = 30\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "2764": {"id": 2764, "code": "s = \"1234567876\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2765": {"id": 2765, "code": "s = \"35753\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2766": {"id": 2766, "code": "s = \"1111111111\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2767": {"id": 2767, "code": "S = \"1234567876\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "2768": {"id": 2768, "code": "S = \"35753\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "2769": {"id": 2769, "code": "S = \"1111111111\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "2770": {"id": 2770, "code": "s = \"1234567876\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2771": {"id": 2771, "code": "s = \"35753\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2772": {"id": 2772, "code": "s = \"1111111111\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2773": {"id": 2773, "code": "s = \"1234567876\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2774": {"id": 2774, "code": "s = \"35753\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2775": {"id": 2775, "code": "s = \"1111111111\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2776": {"id": 2776, "code": "s = \"1234567876\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2777": {"id": 2777, "code": "s = \"35753\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2778": {"id": 2778, "code": "s = \"1111111111\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2779": {"id": 2779, "code": "s = \"1234567876\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2780": {"id": 2780, "code": "s = \"35753\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2781": {"id": 2781, "code": "s = \"1111111111\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2782": {"id": 2782, "code": "s = \"1234567876\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2783": {"id": 2783, "code": "s = \"35753\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2784": {"id": 2784, "code": "s = \"1111111111\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2785": {"id": 2785, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2786": {"id": 2786, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2787": {"id": 2787, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2788": {"id": 2788, "code": "s = \"1234567876\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)", "coverage": [">", ">", ">", ">", ">"]}, "2789": {"id": 2789, "code": "s = \"35753\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)", "coverage": [">", ">", ">", ">", ">"]}, "2790": {"id": 2790, "code": "s = \"1111111111\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)", "coverage": [">", ">", ">", ">", ">"]}, "2791": {"id": 2791, "code": "S = \"1234567876\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2792": {"id": 2792, "code": "S = \"35753\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2793": {"id": 2793, "code": "S = \"1111111111\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2794": {"id": 2794, "code": "def main():\n    s = \"1234567876\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2795": {"id": 2795, "code": "def main():\n    s = \"35753\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2796": {"id": 2796, "code": "def main():\n    s = \"1111111111\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2797": {"id": 2797, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2798": {"id": 2798, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2799": {"id": 2799, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2800": {"id": 2800, "code": "s = \"1234567876\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "2801": {"id": 2801, "code": "s = \"35753\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "2802": {"id": 2802, "code": "s = \"1111111111\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "2803": {"id": 2803, "code": "S = \"1234567876\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2804": {"id": 2804, "code": "S = \"35753\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2805": {"id": 2805, "code": "S = \"1111111111\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2806": {"id": 2806, "code": "s = \"1234567876\"\nm=1000\nfor i in range(len(s)-2):\n    tmp=s[i:i+3]\n    if abs(753-int(tmp))<m:\n        m=abs(753-int(tmp))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2807": {"id": 2807, "code": "s = \"35753\"\nm=1000\nfor i in range(len(s)-2):\n    tmp=s[i:i+3]\n    if abs(753-int(tmp))<m:\n        m=abs(753-int(tmp))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2808": {"id": 2808, "code": "s = \"1111111111\"\nm=1000\nfor i in range(len(s)-2):\n    tmp=s[i:i+3]\n    if abs(753-int(tmp))<m:\n        m=abs(753-int(tmp))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2809": {"id": 2809, "code": "s = \"1234567876\"\nn = len(s)\nans = 10000\nfor i in range(n-2):\n    sbstr = s[i:i+3]\n    val = abs(753 - int(sbstr))\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2810": {"id": 2810, "code": "s = \"35753\"\nn = len(s)\nans = 10000\nfor i in range(n-2):\n    sbstr = s[i:i+3]\n    val = abs(753 - int(sbstr))\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2811": {"id": 2811, "code": "s = \"1111111111\"\nn = len(s)\nans = 10000\nfor i in range(n-2):\n    sbstr = s[i:i+3]\n    val = abs(753 - int(sbstr))\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2812": {"id": 2812, "code": "n = \"1234567876\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "2813": {"id": 2813, "code": "n = \"35753\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "2814": {"id": 2814, "code": "n = \"1111111111\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "2815": {"id": 2815, "code": "def main():\n    s = \"1234567876\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "2816": {"id": 2816, "code": "def main():\n    s = \"35753\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "2817": {"id": 2817, "code": "def main():\n    s = \"1111111111\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "2818": {"id": 2818, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s)-2):\n  num = abs(753-(int(s[i]+s[i+1]+s[i+2])))\n  ans = min(ans,num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2819": {"id": 2819, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n  num = abs(753-(int(s[i]+s[i+1]+s[i+2])))\n  ans = min(ans,num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2820": {"id": 2820, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n  num = abs(753-(int(s[i]+s[i+1]+s[i+2])))\n  ans = min(ans,num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2821": {"id": 2821, "code": "s = \"1234567876\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2822": {"id": 2822, "code": "s = \"35753\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2823": {"id": 2823, "code": "s = \"1111111111\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2824": {"id": 2824, "code": "S = \"1234567876\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2825": {"id": 2825, "code": "S = \"35753\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2826": {"id": 2826, "code": "S = \"1111111111\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2827": {"id": 2827, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"1234567876\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2828": {"id": 2828, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"35753\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2829": {"id": 2829, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"1111111111\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2830": {"id": 2830, "code": "s = \"1234567876\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2831": {"id": 2831, "code": "s = \"35753\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2832": {"id": 2832, "code": "s = \"1111111111\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2833": {"id": 2833, "code": "S = \"1234567876\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2834": {"id": 2834, "code": "S = \"35753\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2835": {"id": 2835, "code": "S = \"1111111111\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2836": {"id": 2836, "code": "S = \"1234567876\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2837": {"id": 2837, "code": "S = \"35753\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2838": {"id": 2838, "code": "S = \"1111111111\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2839": {"id": 2839, "code": "S = \"1234567876\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2840": {"id": 2840, "code": "S = \"35753\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2841": {"id": 2841, "code": "S = \"1111111111\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2842": {"id": 2842, "code": "import math\ndef main():\n  s = \"1234567876\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2843": {"id": 2843, "code": "import math\ndef main():\n  s = \"35753\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2844": {"id": 2844, "code": "import math\ndef main():\n  s = \"1111111111\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2845": {"id": 2845, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2846": {"id": 2846, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2847": {"id": 2847, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2848": {"id": 2848, "code": "S = \"1234567876\"\nS += '0'\nnum_len = 999\nfor i in range(len(S)-3):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2849": {"id": 2849, "code": "S = \"35753\"\nS += '0'\nnum_len = 999\nfor i in range(len(S)-3):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2850": {"id": 2850, "code": "S = \"1111111111\"\nS += '0'\nnum_len = 999\nfor i in range(len(S)-3):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2851": {"id": 2851, "code": "import sys\nS = \"1234567876\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2852": {"id": 2852, "code": "import sys\nS = \"35753\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2853": {"id": 2853, "code": "import sys\nS = \"1111111111\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2854": {"id": 2854, "code": "s = \"1234567876\"\nn = len(s)\nans = float(\"inf\")\nfor i in range(n-2):\n    ans = min(ans,abs(eval(s[i:i+3])-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2855": {"id": 2855, "code": "s = \"35753\"\nn = len(s)\nans = float(\"inf\")\nfor i in range(n-2):\n    ans = min(ans,abs(eval(s[i:i+3])-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2856": {"id": 2856, "code": "s = \"1111111111\"\nn = len(s)\nans = float(\"inf\")\nfor i in range(n-2):\n    ans = min(ans,abs(eval(s[i:i+3])-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2857": {"id": 2857, "code": "S = \"1234567876\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2858": {"id": 2858, "code": "S = \"35753\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2859": {"id": 2859, "code": "S = \"1111111111\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2860": {"id": 2860, "code": "s = \"1234567876\"\nans = 999\nfor i,j,k in zip(s, s[1:], s[2:]):\n    diff = abs(753 - int(i+j+k))\n    ans = min(ans, diff)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2861": {"id": 2861, "code": "s = \"35753\"\nans = 999\nfor i,j,k in zip(s, s[1:], s[2:]):\n    diff = abs(753 - int(i+j+k))\n    ans = min(ans, diff)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2862": {"id": 2862, "code": "s = \"1111111111\"\nans = 999\nfor i,j,k in zip(s, s[1:], s[2:]):\n    diff = abs(753 - int(i+j+k))\n    ans = min(ans, diff)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2863": {"id": 2863, "code": "N = \"1234567876\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2864": {"id": 2864, "code": "N = \"35753\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2865": {"id": 2865, "code": "N = \"1111111111\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2866": {"id": 2866, "code": "s = \"1234567876\"\nans = 999\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2867": {"id": 2867, "code": "s = \"35753\"\nans = 999\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2868": {"id": 2868, "code": "s = \"1111111111\"\nans = 999\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2869": {"id": 2869, "code": "def solve():\n    N = \"1234567876\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2870": {"id": 2870, "code": "def solve():\n    N = \"35753\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2871": {"id": 2871, "code": "def solve():\n    N = \"1111111111\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2872": {"id": 2872, "code": "s = \"1234567876\"\ns_size = len(s)\nans = float('inf')\nfor i in range(s_size-2):\n    ans = min(abs(753-int(s[i]+s[i+1]+s[i+2])), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2873": {"id": 2873, "code": "s = \"35753\"\ns_size = len(s)\nans = float('inf')\nfor i in range(s_size-2):\n    ans = min(abs(753-int(s[i]+s[i+1]+s[i+2])), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2874": {"id": 2874, "code": "s = \"1111111111\"\ns_size = len(s)\nans = float('inf')\nfor i in range(s_size-2):\n    ans = min(abs(753-int(s[i]+s[i+1]+s[i+2])), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2875": {"id": 2875, "code": "S = \"1234567876\"\nans = 10**9\nfor i in range(len(S)):\n    s = int(S[i:i+3])\n    val = abs(753 - s)\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2876": {"id": 2876, "code": "S = \"35753\"\nans = 10**9\nfor i in range(len(S)):\n    s = int(S[i:i+3])\n    val = abs(753 - s)\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2877": {"id": 2877, "code": "S = \"1111111111\"\nans = 10**9\nfor i in range(len(S)):\n    s = int(S[i:i+3])\n    val = abs(753 - s)\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2878": {"id": 2878, "code": "S = \"1234567876\"\nans = 10000\nfor i in range(len(S)-2):\n    tmp = abs(753-int(S[i:i+3]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2879": {"id": 2879, "code": "S = \"35753\"\nans = 10000\nfor i in range(len(S)-2):\n    tmp = abs(753-int(S[i:i+3]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2880": {"id": 2880, "code": "S = \"1111111111\"\nans = 10000\nfor i in range(len(S)-2):\n    tmp = abs(753-int(S[i:i+3]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2881": {"id": 2881, "code": "S = \"1234567876\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2882": {"id": 2882, "code": "S = \"35753\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2883": {"id": 2883, "code": "S = \"1111111111\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2884": {"id": 2884, "code": "S = \"1234567876\"\nN =700\nfor i in range (len(S)-2):\n  n = abs (int(S[i:i+3])-753)\n  if n < N:\n    N = n\nprint (N)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2885": {"id": 2885, "code": "S = \"35753\"\nN =700\nfor i in range (len(S)-2):\n  n = abs (int(S[i:i+3])-753)\n  if n < N:\n    N = n\nprint (N)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2886": {"id": 2886, "code": "S = \"1111111111\"\nN =700\nfor i in range (len(S)-2):\n  n = abs (int(S[i:i+3])-753)\n  if n < N:\n    N = n\nprint (N)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2887": {"id": 2887, "code": "S = \"1234567876\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2888": {"id": 2888, "code": "S = \"35753\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2889": {"id": 2889, "code": "S = \"1111111111\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2890": {"id": 2890, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2891": {"id": 2891, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2892": {"id": 2892, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2893": {"id": 2893, "code": "S = \"1234567876\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2894": {"id": 2894, "code": "S = \"35753\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2895": {"id": 2895, "code": "S = \"1111111111\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2896": {"id": 2896, "code": "S = \"1234567876\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2897": {"id": 2897, "code": "S = \"35753\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2898": {"id": 2898, "code": "S = \"1111111111\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2899": {"id": 2899, "code": "s = \"1234567876\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2900": {"id": 2900, "code": "s = \"35753\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2901": {"id": 2901, "code": "s = \"1111111111\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2902": {"id": 2902, "code": "S = \"1234567876\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2903": {"id": 2903, "code": "S = \"35753\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2904": {"id": 2904, "code": "S = \"1111111111\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2905": {"id": 2905, "code": "a = \"1234567876\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2906": {"id": 2906, "code": "a = \"35753\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2907": {"id": 2907, "code": "a = \"1111111111\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2908": {"id": 2908, "code": "S = \"1234567876\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2909": {"id": 2909, "code": "S = \"35753\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2910": {"id": 2910, "code": "S = \"1111111111\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2911": {"id": 2911, "code": "n = \"1234567876\"\nans=753\nfor i in range(len(n)-2):\n  a=int(n[i:i+3])\n  if a==753:\n    print(0)\n    exit()\n  b=abs(753-a)\n  ans=min(b,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2912": {"id": 2912, "code": "n = \"1111111111\"\nans=753\nfor i in range(len(n)-2):\n  a=int(n[i:i+3])\n  if a==753:\n    print(0)\n    exit()\n  b=abs(753-a)\n  ans=min(b,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2913": {"id": 2913, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"1234567876\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2914": {"id": 2914, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"35753\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2915": {"id": 2915, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"1111111111\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2916": {"id": 2916, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2917": {"id": 2917, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2918": {"id": 2918, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2919": {"id": 2919, "code": "S = \"1234567876\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2920": {"id": 2920, "code": "S = \"35753\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2921": {"id": 2921, "code": "S = \"1111111111\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2922": {"id": 2922, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2923": {"id": 2923, "code": "s = \"35753\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2924": {"id": 2924, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2925": {"id": 2925, "code": "def main():\n    s = \"1234567876\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2926": {"id": 2926, "code": "def main():\n    s = \"35753\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2927": {"id": 2927, "code": "def main():\n    s = \"1111111111\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2928": {"id": 2928, "code": "def main():\n    s = \"1234567876\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2929": {"id": 2929, "code": "def main():\n    s = \"35753\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2930": {"id": 2930, "code": "def main():\n    s = \"1111111111\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2931": {"id": 2931, "code": "S = \"1234567876\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "2932": {"id": 2932, "code": "S = \"35753\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "2933": {"id": 2933, "code": "S = \"1111111111\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "2934": {"id": 2934, "code": "S = \"1234567876\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2935": {"id": 2935, "code": "S = \"35753\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2936": {"id": 2936, "code": "S = \"1111111111\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2937": {"id": 2937, "code": "s = \"1234567876\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2938": {"id": 2938, "code": "s = \"35753\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2939": {"id": 2939, "code": "s = \"1111111111\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2940": {"id": 2940, "code": "s = \"1234567876\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2941": {"id": 2941, "code": "s = \"35753\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2942": {"id": 2942, "code": "s = \"1111111111\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2943": {"id": 2943, "code": "def main():\n    s = \"1234567876\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2944": {"id": 2944, "code": "def main():\n    s = \"35753\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2945": {"id": 2945, "code": "def main():\n    s = \"1111111111\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2946": {"id": 2946, "code": "S = \"1234567876\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2947": {"id": 2947, "code": "S = \"35753\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2948": {"id": 2948, "code": "S = \"1111111111\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2949": {"id": 2949, "code": "import sys\ndef input():\n    return \"1234567876\".rstrip()\ndef main():\n    S = \"1234567876\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2950": {"id": 2950, "code": "import sys\ndef input():\n    return \"35753\".rstrip()\ndef main():\n    S = \"35753\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2951": {"id": 2951, "code": "import sys\ndef input():\n    return \"1111111111\".rstrip()\ndef main():\n    S = \"1111111111\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2952": {"id": 2952, "code": "a = \"1234567876\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2953": {"id": 2953, "code": "a = \"35753\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2954": {"id": 2954, "code": "a = \"1111111111\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2955": {"id": 2955, "code": "s = \"1234567876\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2956": {"id": 2956, "code": "s = \"35753\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2957": {"id": 2957, "code": "s = \"1111111111\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2958": {"id": 2958, "code": "def main():\n    owner_num = 753\n    s = \"1234567876\"\n    min_diff = int(s[0:3])\n    for i in range(3,len(s)+1):\n        runrun_num = int(s[(i-3):i])\n        if abs(owner_num - runrun_num) < abs(owner_num - min_diff):\n            min_diff = runrun_num\n    print(abs(owner_num - min_diff))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2959": {"id": 2959, "code": "def main():\n    owner_num = 753\n    s = \"35753\"\n    min_diff = int(s[0:3])\n    for i in range(3,len(s)+1):\n        runrun_num = int(s[(i-3):i])\n        if abs(owner_num - runrun_num) < abs(owner_num - min_diff):\n            min_diff = runrun_num\n    print(abs(owner_num - min_diff))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2960": {"id": 2960, "code": "def main():\n    owner_num = 753\n    s = \"1111111111\"\n    min_diff = int(s[0:3])\n    for i in range(3,len(s)+1):\n        runrun_num = int(s[(i-3):i])\n        if abs(owner_num - runrun_num) < abs(owner_num - min_diff):\n            min_diff = runrun_num\n    print(abs(owner_num - min_diff))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2961": {"id": 2961, "code": "S = \"1234567876\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2962": {"id": 2962, "code": "S = \"35753\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2963": {"id": 2963, "code": "S = \"1111111111\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2964": {"id": 2964, "code": "S = \"1234567876\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2965": {"id": 2965, "code": "S = \"35753\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2966": {"id": 2966, "code": "S = \"1111111111\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2967": {"id": 2967, "code": "s = \"1234567876\"\nanswer = 1000\nfor i in range(0,len(s)-2):\n\tif answer > abs(753 - int(s[i:i+3])):\n\t\tanswer = abs(753 - int(s[i:i+3]))\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2968": {"id": 2968, "code": "s = \"35753\"\nanswer = 1000\nfor i in range(0,len(s)-2):\n\tif answer > abs(753 - int(s[i:i+3])):\n\t\tanswer = abs(753 - int(s[i:i+3]))\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2969": {"id": 2969, "code": "s = \"1111111111\"\nanswer = 1000\nfor i in range(0,len(s)-2):\n\tif answer > abs(753 - int(s[i:i+3])):\n\t\tanswer = abs(753 - int(s[i:i+3]))\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2970": {"id": 2970, "code": "s = \"1234567876\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2971": {"id": 2971, "code": "s = \"35753\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2972": {"id": 2972, "code": "s = \"1111111111\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2973": {"id": 2973, "code": "import sys\ninput = sys.stdin.readline\nS = \"1234567876\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2974": {"id": 2974, "code": "import sys\ninput = sys.stdin.readline\nS = \"35753\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2975": {"id": 2975, "code": "import sys\ninput = sys.stdin.readline\nS = \"1111111111\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2976": {"id": 2976, "code": "S = \"1234567876\"\nMIN=10**9\nfor i in range(len(S)-2):\n  tmp = abs(int(S[i:i+3])-753)\n  if tmp < MIN:MIN=tmp\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2977": {"id": 2977, "code": "S = \"35753\"\nMIN=10**9\nfor i in range(len(S)-2):\n  tmp = abs(int(S[i:i+3])-753)\n  if tmp < MIN:MIN=tmp\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2978": {"id": 2978, "code": "S = \"1111111111\"\nMIN=10**9\nfor i in range(len(S)-2):\n  tmp = abs(int(S[i:i+3])-753)\n  if tmp < MIN:MIN=tmp\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2979": {"id": 2979, "code": "S = \"1234567876\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "2980": {"id": 2980, "code": "S = \"35753\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "2981": {"id": 2981, "code": "S = \"1111111111\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "2982": {"id": 2982, "code": "S = \"1234567876\"\nmini = 1000\nfor i in range(len(S)-2):\n    X = int(S[i] + S[i+1] + S[i+2])\n    mini = min(abs(X-753), mini)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2983": {"id": 2983, "code": "S = \"35753\"\nmini = 1000\nfor i in range(len(S)-2):\n    X = int(S[i] + S[i+1] + S[i+2])\n    mini = min(abs(X-753), mini)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2984": {"id": 2984, "code": "S = \"1111111111\"\nmini = 1000\nfor i in range(len(S)-2):\n    X = int(S[i] + S[i+1] + S[i+2])\n    mini = min(abs(X-753), mini)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2985": {"id": 2985, "code": "s = \"1234567876\"\nres = 1000\nfor i in range(len(s) - 2):\n    tmp = int(s[i : i + 3])\n    res = min(res, abs(tmp - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2986": {"id": 2986, "code": "s = \"35753\"\nres = 1000\nfor i in range(len(s) - 2):\n    tmp = int(s[i : i + 3])\n    res = min(res, abs(tmp - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2987": {"id": 2987, "code": "s = \"1111111111\"\nres = 1000\nfor i in range(len(s) - 2):\n    tmp = int(s[i : i + 3])\n    res = min(res, abs(tmp - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2988": {"id": 2988, "code": "s = \"1234567876\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2989": {"id": 2989, "code": "s = \"35753\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2990": {"id": 2990, "code": "s = \"1111111111\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2991": {"id": 2991, "code": "s = \"1234567876\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2992": {"id": 2992, "code": "s = \"35753\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2993": {"id": 2993, "code": "s = \"1111111111\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2994": {"id": 2994, "code": "S = \"1234567876\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2995": {"id": 2995, "code": "S = \"35753\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2996": {"id": 2996, "code": "S = \"1111111111\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "2997": {"id": 2997, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2998": {"id": 2998, "code": "s = \"35753\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2999": {"id": 2999, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3000": {"id": 3000, "code": "S = \"1234567876\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3001": {"id": 3001, "code": "S = \"35753\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3002": {"id": 3002, "code": "S = \"1111111111\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3003": {"id": 3003, "code": "s = \"1234567876\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3004": {"id": 3004, "code": "s = \"35753\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3005": {"id": 3005, "code": "s = \"1111111111\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3006": {"id": 3006, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3007": {"id": 3007, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3008": {"id": 3008, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3009": {"id": 3009, "code": "S = \"1234567876\"\ndef f(i):\n    return abs(100*int(S[i])+10*int(S[i+1])+int(S[i+2])-753)\nans = 10000\nfor i in range(len(S)-2):\n    ans = min(ans, f(i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3010": {"id": 3010, "code": "S = \"35753\"\ndef f(i):\n    return abs(100*int(S[i])+10*int(S[i+1])+int(S[i+2])-753)\nans = 10000\nfor i in range(len(S)-2):\n    ans = min(ans, f(i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3011": {"id": 3011, "code": "S = \"1111111111\"\ndef f(i):\n    return abs(100*int(S[i])+10*int(S[i+1])+int(S[i+2])-753)\nans = 10000\nfor i in range(len(S)-2):\n    ans = min(ans, f(i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3012": {"id": 3012, "code": "s = \"1234567876\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3013": {"id": 3013, "code": "s = \"35753\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3014": {"id": 3014, "code": "s = \"1111111111\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3018": {"id": 3018, "code": "s = \"1234567876\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n    a = '' + s[i] + s[i+1] + s[i+2]\n    a = int(a)\n    ans = min(ans, abs(a - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3019": {"id": 3019, "code": "s = \"35753\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n    a = '' + s[i] + s[i+1] + s[i+2]\n    a = int(a)\n    ans = min(ans, abs(a - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3020": {"id": 3020, "code": "s = \"1111111111\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n    a = '' + s[i] + s[i+1] + s[i+2]\n    a = int(a)\n    ans = min(ans, abs(a - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3021": {"id": 3021, "code": "S = \"1234567876\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3022": {"id": 3022, "code": "S = \"35753\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3023": {"id": 3023, "code": "S = \"1111111111\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3024": {"id": 3024, "code": "S = \"1234567876\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3025": {"id": 3025, "code": "S = \"35753\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3026": {"id": 3026, "code": "S = \"1111111111\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3027": {"id": 3027, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\ns = \"1234567876\"\nn=len(s)\nres=900\nfor i in range(n-2):\n    if abs(753-int(s[i:i+3]))<res:\n        res=abs(753-int(s[i:i+3]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3028": {"id": 3028, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\ns = \"35753\"\nn=len(s)\nres=900\nfor i in range(n-2):\n    if abs(753-int(s[i:i+3]))<res:\n        res=abs(753-int(s[i:i+3]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3029": {"id": 3029, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\ns = \"1111111111\"\nn=len(s)\nres=900\nfor i in range(n-2):\n    if abs(753-int(s[i:i+3]))<res:\n        res=abs(753-int(s[i:i+3]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3030": {"id": 3030, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"1234567876\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3031": {"id": 3031, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"35753\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3032": {"id": 3032, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"1111111111\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3033": {"id": 3033, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3034": {"id": 3034, "code": "s = \"35753\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3035": {"id": 3035, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3036": {"id": 3036, "code": "s = \"1234567876\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3037": {"id": 3037, "code": "s = \"35753\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3038": {"id": 3038, "code": "s = \"1111111111\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3039": {"id": 3039, "code": "s=\"1234567876\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "3040": {"id": 3040, "code": "s=\"35753\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "3041": {"id": 3041, "code": "s=\"1111111111\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "3042": {"id": 3042, "code": "n = \"35753\"\nl = len(n)\nn = int(n)\nres = 1000\nfor i in range(l-2):\n  c = n // (10 ** i)\n  c %= 1000\n  res = min(res,abs(c-753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3043": {"id": 3043, "code": "s = \"1234567876\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3044": {"id": 3044, "code": "s = \"35753\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3045": {"id": 3045, "code": "s = \"1111111111\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3046": {"id": 3046, "code": "def resolve():\n    S = \"1234567876\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3047": {"id": 3047, "code": "def resolve():\n    S = \"35753\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3048": {"id": 3048, "code": "def resolve():\n    S = \"1111111111\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3049": {"id": 3049, "code": "def answer(s: str) -> int:\n    return min(abs(753 - int(s[i:i + 3])) for i in range(len(s) - 2))\ndef main():\n    s = \"1234567876\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3050": {"id": 3050, "code": "def answer(s: str) -> int:\n    return min(abs(753 - int(s[i:i + 3])) for i in range(len(s) - 2))\ndef main():\n    s = \"35753\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3051": {"id": 3051, "code": "def answer(s: str) -> int:\n    return min(abs(753 - int(s[i:i + 3])) for i in range(len(s) - 2))\ndef main():\n    s = \"1111111111\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3052": {"id": 3052, "code": "S = \"1234567876\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3053": {"id": 3053, "code": "S = \"35753\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3054": {"id": 3054, "code": "S = \"1111111111\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3055": {"id": 3055, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"1234567876\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3056": {"id": 3056, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"35753\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3057": {"id": 3057, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"1111111111\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3058": {"id": 3058, "code": "S = \"1234567876\"\nN = len(S)\nans = 1000\nfor i in range(N - 2):\n    s = int(S[i:i + 3])\n    ans = min(ans, abs(753 - s))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3059": {"id": 3059, "code": "S = \"35753\"\nN = len(S)\nans = 1000\nfor i in range(N - 2):\n    s = int(S[i:i + 3])\n    ans = min(ans, abs(753 - s))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3060": {"id": 3060, "code": "S = \"1111111111\"\nN = len(S)\nans = 1000\nfor i in range(N - 2):\n    s = int(S[i:i + 3])\n    ans = min(ans, abs(753 - s))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3061": {"id": 3061, "code": "S = \"1234567876\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3062": {"id": 3062, "code": "S = \"35753\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3063": {"id": 3063, "code": "S = \"1111111111\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3064": {"id": 3064, "code": "S = \"1234567876\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3065": {"id": 3065, "code": "S = \"35753\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3066": {"id": 3066, "code": "S = \"1111111111\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3067": {"id": 3067, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"1234567876\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3068": {"id": 3068, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"35753\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3069": {"id": 3069, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"1111111111\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3070": {"id": 3070, "code": "s = \"1234567876\"\nans = 642\nfor i in range(len(s)-2):\n  if ans > abs(int(s[i:i+3])-753):\n    ans = abs(int(s[i:i+3])-753)\n  else:\n    ans = ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "3071": {"id": 3071, "code": "s = \"35753\"\nans = 642\nfor i in range(len(s)-2):\n  if ans > abs(int(s[i:i+3])-753):\n    ans = abs(int(s[i:i+3])-753)\n  else:\n    ans = ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3072": {"id": 3072, "code": "s = \"1111111111\"\nans = 642\nfor i in range(len(s)-2):\n  if ans > abs(int(s[i:i+3])-753):\n    ans = abs(int(s[i:i+3])-753)\n  else:\n    ans = ans\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3073": {"id": 3073, "code": "s = \"1234567876\"\nx = 10000\nfor i in range(len(s) - 3 + 1):\n    x = min(x, abs(753 - int(s[i:i+3])))\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "3074": {"id": 3074, "code": "s = \"35753\"\nx = 10000\nfor i in range(len(s) - 3 + 1):\n    x = min(x, abs(753 - int(s[i:i+3])))\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "3075": {"id": 3075, "code": "s = \"1111111111\"\nx = 10000\nfor i in range(len(s) - 3 + 1):\n    x = min(x, abs(753 - int(s[i:i+3])))\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "3076": {"id": 3076, "code": "s = \"1234567876\"\nl = len(s)\nd = 1000\nfor i in range(l):\n    tmp = abs(int(s[i:i+3]) - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3077": {"id": 3077, "code": "s = \"35753\"\nl = len(s)\nd = 1000\nfor i in range(l):\n    tmp = abs(int(s[i:i+3]) - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3078": {"id": 3078, "code": "s = \"1111111111\"\nl = len(s)\nd = 1000\nfor i in range(l):\n    tmp = abs(int(s[i:i+3]) - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3079": {"id": 3079, "code": "s = \"1234567876\"\nn=len(s)\nans=753\nfor i in range(n-2):\n  t=int(s[i]+s[i+1]+s[i+2])\n  ans=min(ans, abs(753-t))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3080": {"id": 3080, "code": "s = \"35753\"\nn=len(s)\nans=753\nfor i in range(n-2):\n  t=int(s[i]+s[i+1]+s[i+2])\n  ans=min(ans, abs(753-t))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3081": {"id": 3081, "code": "s = \"1111111111\"\nn=len(s)\nans=753\nfor i in range(n-2):\n  t=int(s[i]+s[i+1]+s[i+2])\n  ans=min(ans, abs(753-t))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3082": {"id": 3082, "code": "s = \"1234567876\"\na = 10000\nfor i in range(len(s) - 1):\n    a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "3083": {"id": 3083, "code": "s = \"35753\"\na = 10000\nfor i in range(len(s) - 1):\n    a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "3084": {"id": 3084, "code": "s = \"1111111111\"\na = 10000\nfor i in range(len(s) - 1):\n    a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "3085": {"id": 3085, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\ns = \"1234567876\"\nans = 1000\nfor i in range(len(s) - 2):\n    ans = min(ans, abs(753 - int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3086": {"id": 3086, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\ns = \"35753\"\nans = 1000\nfor i in range(len(s) - 2):\n    ans = min(ans, abs(753 - int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3087": {"id": 3087, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\ns = \"1111111111\"\nans = 1000\nfor i in range(len(s) - 2):\n    ans = min(ans, abs(753 - int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3088": {"id": 3088, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"1234567876\"\n    ans = float('inf')\n    for i in range(len(s)-2):\n        if i == len(s)-3:\n            ans = min(ans, abs(int(s[i:]) - 753))\n        else:\n            ans = min(ans, abs(int(s[i:i+3]) - 753))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3089": {"id": 3089, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"35753\"\n    ans = float('inf')\n    for i in range(len(s)-2):\n        if i == len(s)-3:\n            ans = min(ans, abs(int(s[i:]) - 753))\n        else:\n            ans = min(ans, abs(int(s[i:i+3]) - 753))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3090": {"id": 3090, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"1111111111\"\n    ans = float('inf')\n    for i in range(len(s)-2):\n        if i == len(s)-3:\n            ans = min(ans, abs(int(s[i:]) - 753))\n        else:\n            ans = min(ans, abs(int(s[i:i+3]) - 753))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3091": {"id": 3091, "code": "s = \"1234567876\"\nn = len(s)\nm = 1000\nfor i in range(n-2):\n    m = min(m, abs(753 - int(s[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3092": {"id": 3092, "code": "s = \"35753\"\nn = len(s)\nm = 1000\nfor i in range(n-2):\n    m = min(m, abs(753 - int(s[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3093": {"id": 3093, "code": "s = \"1111111111\"\nn = len(s)\nm = 1000\nfor i in range(n-2):\n    m = min(m, abs(753 - int(s[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3094": {"id": 3094, "code": "S = \"1234567876\"\nN = len(S)\nans = float(\"inf\")\nfor i in range(N-2):\n  ans = min(ans, abs(753 - int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3095": {"id": 3095, "code": "S = \"35753\"\nN = len(S)\nans = float(\"inf\")\nfor i in range(N-2):\n  ans = min(ans, abs(753 - int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3096": {"id": 3096, "code": "S = \"1111111111\"\nN = len(S)\nans = float(\"inf\")\nfor i in range(N-2):\n  ans = min(ans, abs(753 - int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3097": {"id": 3097, "code": "a = \"1234567876\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3098": {"id": 3098, "code": "a = \"35753\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3099": {"id": 3099, "code": "a = \"1111111111\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3100": {"id": 3100, "code": "s = \"1234567876\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3101": {"id": 3101, "code": "s = \"35753\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3102": {"id": 3102, "code": "s = \"1111111111\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3103": {"id": 3103, "code": "S = \"1234567876\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3104": {"id": 3104, "code": "S = \"35753\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3105": {"id": 3105, "code": "S = \"1111111111\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3106": {"id": 3106, "code": "S = \"1234567876\"\ndiff_min = 1000\nfor i in range(len(S)-2):\n    if diff_min > abs(753 - int(S[i:i+3])):\n        diff_min = abs(753 - int(S[i:i+3]))\nprint(diff_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3107": {"id": 3107, "code": "S = \"35753\"\ndiff_min = 1000\nfor i in range(len(S)-2):\n    if diff_min > abs(753 - int(S[i:i+3])):\n        diff_min = abs(753 - int(S[i:i+3]))\nprint(diff_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3108": {"id": 3108, "code": "S = \"1111111111\"\ndiff_min = 1000\nfor i in range(len(S)-2):\n    if diff_min > abs(753 - int(S[i:i+3])):\n        diff_min = abs(753 - int(S[i:i+3]))\nprint(diff_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3109": {"id": 3109, "code": "s = \"1234567876\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3110": {"id": 3110, "code": "s = \"35753\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3111": {"id": 3111, "code": "s = \"1111111111\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3112": {"id": 3112, "code": "S = 35753\nans=10**9\nwhile S>=100:\n    ans=min(ans,abs(S%1000-753))\n    S//=10\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3113": {"id": 3113, "code": "S = \"1234567876\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "3114": {"id": 3114, "code": "S = \"35753\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "3115": {"id": 3115, "code": "S = \"1111111111\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "3116": {"id": 3116, "code": "S = \"1234567876\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3117": {"id": 3117, "code": "S = \"35753\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3118": {"id": 3118, "code": "S = \"1111111111\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3119": {"id": 3119, "code": "S = \"35753\"\ni = 0\nans = int(S)\nwhile i < len(S)-2:\n    num = int(S[i:i+3])\n    i += 1\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3120": {"id": 3120, "code": "s = \"1234567876\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3121": {"id": 3121, "code": "s = \"35753\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3122": {"id": 3122, "code": "s = \"1111111111\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3123": {"id": 3123, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"1234567876\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3124": {"id": 3124, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"35753\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3125": {"id": 3125, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"1111111111\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3126": {"id": 3126, "code": "s = \"1234567876\"\ns_length=len(s)\ntarget=753\nans=753\nfor i in range(s_length-2):\n    comp=int(s[i:i+3])\n    ans=min(abs(target-comp),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3127": {"id": 3127, "code": "s = \"35753\"\ns_length=len(s)\ntarget=753\nans=753\nfor i in range(s_length-2):\n    comp=int(s[i:i+3])\n    ans=min(abs(target-comp),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3128": {"id": 3128, "code": "s = \"1111111111\"\ns_length=len(s)\ntarget=753\nans=753\nfor i in range(s_length-2):\n    comp=int(s[i:i+3])\n    ans=min(abs(target-comp),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3129": {"id": 3129, "code": "S = \"1234567876\"\nans = 999\nfor i in range(len(S)-2):\n    num = int(S[i:i+3])\n    if abs(num - 753) < ans:\n        ans = abs(num-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3130": {"id": 3130, "code": "S = \"35753\"\nans = 999\nfor i in range(len(S)-2):\n    num = int(S[i:i+3])\n    if abs(num - 753) < ans:\n        ans = abs(num-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3131": {"id": 3131, "code": "S = \"1111111111\"\nans = 999\nfor i in range(len(S)-2):\n    num = int(S[i:i+3])\n    if abs(num - 753) < ans:\n        ans = abs(num-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3132": {"id": 3132, "code": "import sys\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nread = sys.stdin.buffer.read\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nS = \"1234567876\"\nans = INF\nfor a1, a2, a3 in zip(S, S[1:], S[2:]):\n    num = int(a1 + a2 + a3)\n    tmp = abs(num - 753)\n    ans = min(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3133": {"id": 3133, "code": "import sys\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nread = sys.stdin.buffer.read\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nS = \"35753\"\nans = INF\nfor a1, a2, a3 in zip(S, S[1:], S[2:]):\n    num = int(a1 + a2 + a3)\n    tmp = abs(num - 753)\n    ans = min(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3134": {"id": 3134, "code": "import sys\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nread = sys.stdin.buffer.read\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nS = \"1111111111\"\nans = INF\nfor a1, a2, a3 in zip(S, S[1:], S[2:]):\n    num = int(a1 + a2 + a3)\n    tmp = abs(num - 753)\n    ans = min(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3135": {"id": 3135, "code": "s = \"1234567876\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3136": {"id": 3136, "code": "s = \"35753\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3137": {"id": 3137, "code": "s = \"1111111111\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3138": {"id": 3138, "code": "S = \"1234567876\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3139": {"id": 3139, "code": "S = \"35753\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3140": {"id": 3140, "code": "S = \"1111111111\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3141": {"id": 3141, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"1234567876\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3142": {"id": 3142, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"35753\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3143": {"id": 3143, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"1111111111\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3144": {"id": 3144, "code": "import sys\nS = \"1234567876\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3145": {"id": 3145, "code": "import sys\nS = \"35753\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3146": {"id": 3146, "code": "import sys\nS = \"1111111111\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3147": {"id": 3147, "code": "S = \"1234567876\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "3148": {"id": 3148, "code": "S = \"35753\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "3149": {"id": 3149, "code": "S = \"1111111111\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "3150": {"id": 3150, "code": "s = \"1234567876\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3151": {"id": 3151, "code": "s = \"35753\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3152": {"id": 3152, "code": "s = \"1111111111\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3153": {"id": 3153, "code": "s = \"1234567876\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3154": {"id": 3154, "code": "s = \"35753\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3155": {"id": 3155, "code": "s = \"1111111111\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3156": {"id": 3156, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3157": {"id": 3157, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3158": {"id": 3158, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3159": {"id": 3159, "code": "S = \"1234567876\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3160": {"id": 3160, "code": "S = \"35753\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3161": {"id": 3161, "code": "S = \"1111111111\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3162": {"id": 3162, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"1234567876\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3163": {"id": 3163, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"35753\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3164": {"id": 3164, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"1111111111\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3165": {"id": 3165, "code": "s = \"1234567876\"\nans = 999\nfor i in range(0, len(s) - 2):\n    if ans > abs(int(s[i:i + 3]) - 753):\n        ans = abs(int(s[i:i + 3]) - 753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3166": {"id": 3166, "code": "s = \"35753\"\nans = 999\nfor i in range(0, len(s) - 2):\n    if ans > abs(int(s[i:i + 3]) - 753):\n        ans = abs(int(s[i:i + 3]) - 753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3167": {"id": 3167, "code": "s = \"1111111111\"\nans = 999\nfor i in range(0, len(s) - 2):\n    if ans > abs(int(s[i:i + 3]) - 753):\n        ans = abs(int(s[i:i + 3]) - 753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3168": {"id": 3168, "code": "s = \"1234567876\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3169": {"id": 3169, "code": "s = \"35753\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3170": {"id": 3170, "code": "s = \"1111111111\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3171": {"id": 3171, "code": "def resolve():\n    N = \"1234567876\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3172": {"id": 3172, "code": "def resolve():\n    N = \"35753\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3173": {"id": 3173, "code": "def resolve():\n    N = \"1111111111\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3174": {"id": 3174, "code": "def main():\n    S = \"1234567876\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3175": {"id": 3175, "code": "def main():\n    S = \"35753\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "3176": {"id": 3176, "code": "def main():\n    S = \"1111111111\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "3177": {"id": 3177, "code": "s = \"1234567876\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3178": {"id": 3178, "code": "s = \"35753\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3179": {"id": 3179, "code": "s = \"1111111111\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3180": {"id": 3180, "code": "x = \"1234567876\"\nmini=1e+5\nfor i in range(len(x)-2):\n    mini=min(mini,abs(753-int(x[i:i+3])))\nprint(mini)", "coverage": [">", ">", ">", ">", ">"]}, "3181": {"id": 3181, "code": "x = \"35753\"\nmini=1e+5\nfor i in range(len(x)-2):\n    mini=min(mini,abs(753-int(x[i:i+3])))\nprint(mini)", "coverage": [">", ">", ">", ">", ">"]}, "3182": {"id": 3182, "code": "x = \"1111111111\"\nmini=1e+5\nfor i in range(len(x)-2):\n    mini=min(mini,abs(753-int(x[i:i+3])))\nprint(mini)", "coverage": [">", ">", ">", ">", ">"]}, "3183": {"id": 3183, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s)-2):\n  t = int(s[i:i+3])\n  a = abs(753 - t)\n  ans = min(ans, a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3184": {"id": 3184, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n  t = int(s[i:i+3])\n  a = abs(753 - t)\n  ans = min(ans, a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3185": {"id": 3185, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n  t = int(s[i:i+3])\n  a = abs(753 - t)\n  ans = min(ans, a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3186": {"id": 3186, "code": "def resolve():\n    s = \"1234567876\"\n    a = 753\n    for i in range(len(s)-2):\n        b = abs(int(s[i:i+3]) - 753)\n        if b < a:\n            a = b\n    print(a)\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3187": {"id": 3187, "code": "def resolve():\n    s = \"35753\"\n    a = 753\n    for i in range(len(s)-2):\n        b = abs(int(s[i:i+3]) - 753)\n        if b < a:\n            a = b\n    print(a)\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3188": {"id": 3188, "code": "def resolve():\n    s = \"1111111111\"\n    a = 753\n    for i in range(len(s)-2):\n        b = abs(int(s[i:i+3]) - 753)\n        if b < a:\n            a = b\n    print(a)\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3189": {"id": 3189, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s) - 2):\n    diff = abs(int(s[i:i+3]) - 753)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3190": {"id": 3190, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s) - 2):\n    diff = abs(int(s[i:i+3]) - 753)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3191": {"id": 3191, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s) - 2):\n    diff = abs(int(s[i:i+3]) - 753)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3192": {"id": 3192, "code": "s = \"1234567876\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3193": {"id": 3193, "code": "s = \"35753\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3194": {"id": 3194, "code": "s = \"1111111111\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3195": {"id": 3195, "code": "S = \"1234567876\"\nMIN = 1000\nfor T in range(0,len(S)-2):\n    X = int(S[T:T+3])\n    Num = abs(X-753)\n    if Num<MIN:\n        MIN = Num\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3196": {"id": 3196, "code": "S = \"35753\"\nMIN = 1000\nfor T in range(0,len(S)-2):\n    X = int(S[T:T+3])\n    Num = abs(X-753)\n    if Num<MIN:\n        MIN = Num\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3197": {"id": 3197, "code": "S = \"1111111111\"\nMIN = 1000\nfor T in range(0,len(S)-2):\n    X = int(S[T:T+3])\n    Num = abs(X-753)\n    if Num<MIN:\n        MIN = Num\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3198": {"id": 3198, "code": "S = \"1234567876\"\nmini=1000\nfor i in range(0,len(S)-2):\n  i1=int(S[i])\n  i2=int(S[i+1])\n  i3=int(S[i+2])\n  x=i1*100+i2*10+i3\n  if abs(x-753)<mini:\n    mini=abs(x-753)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3199": {"id": 3199, "code": "S = \"35753\"\nmini=1000\nfor i in range(0,len(S)-2):\n  i1=int(S[i])\n  i2=int(S[i+1])\n  i3=int(S[i+2])\n  x=i1*100+i2*10+i3\n  if abs(x-753)<mini:\n    mini=abs(x-753)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3200": {"id": 3200, "code": "S = \"1111111111\"\nmini=1000\nfor i in range(0,len(S)-2):\n  i1=int(S[i])\n  i2=int(S[i+1])\n  i3=int(S[i+2])\n  x=i1*100+i2*10+i3\n  if abs(x-753)<mini:\n    mini=abs(x-753)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3201": {"id": 3201, "code": "S = \"1234567876\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3202": {"id": 3202, "code": "S = \"35753\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3203": {"id": 3203, "code": "S = \"1111111111\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3204": {"id": 3204, "code": "s = \"1234567876\"\nn=len(s)\nans=100000\nfor i in range(n-2):\n  t=str(s[i])+str(s[i+1])+str(s[i+2])\n  x=abs(753-int(t))\n  ans=min(ans,x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3205": {"id": 3205, "code": "s = \"35753\"\nn=len(s)\nans=100000\nfor i in range(n-2):\n  t=str(s[i])+str(s[i+1])+str(s[i+2])\n  x=abs(753-int(t))\n  ans=min(ans,x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3206": {"id": 3206, "code": "s = \"1111111111\"\nn=len(s)\nans=100000\nfor i in range(n-2):\n  t=str(s[i])+str(s[i+1])+str(s[i+2])\n  x=abs(753-int(t))\n  ans=min(ans,x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3207": {"id": 3207, "code": "a = \"1234567876\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3208": {"id": 3208, "code": "a = \"35753\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3209": {"id": 3209, "code": "a = \"1111111111\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3210": {"id": 3210, "code": "s = \"1234567876\"\nl = len(s)\nans = 999\nfor i in range(l - 2):\n    a = int(s[i:i + 3])\n    b = abs(753 - a)\n    if b < ans:\n        ans = b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3211": {"id": 3211, "code": "s = \"35753\"\nl = len(s)\nans = 999\nfor i in range(l - 2):\n    a = int(s[i:i + 3])\n    b = abs(753 - a)\n    if b < ans:\n        ans = b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3212": {"id": 3212, "code": "s = \"1111111111\"\nl = len(s)\nans = 999\nfor i in range(l - 2):\n    a = int(s[i:i + 3])\n    b = abs(753 - a)\n    if b < ans:\n        ans = b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3213": {"id": 3213, "code": "s = \"1234567876\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3214": {"id": 3214, "code": "s = \"35753\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3215": {"id": 3215, "code": "s = \"1111111111\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3216": {"id": 3216, "code": "S = \"1234567876\"\nr = 1000\nfor i in range(0, len(S)-2):\n    r = min(r, abs(int(S[i:i+3])-753))\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "3217": {"id": 3217, "code": "S = \"35753\"\nr = 1000\nfor i in range(0, len(S)-2):\n    r = min(r, abs(int(S[i:i+3])-753))\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "3218": {"id": 3218, "code": "S = \"1111111111\"\nr = 1000\nfor i in range(0, len(S)-2):\n    r = min(r, abs(int(S[i:i+3])-753))\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "19303": {"id": 19303, "code": "n = 3\nprint(n*2 if n&1 else n)", "coverage": [">", ">"]}, "19304": {"id": 19304, "code": "n = 10\nprint(n*2 if n&1 else n)", "coverage": [">", ">"]}, "19305": {"id": 19305, "code": "n = 999999999\nprint(n*2 if n&1 else n)", "coverage": [">", ">"]}, "19306": {"id": 19306, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 3\nprint(2 * N if N % 2 == 1 else N)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19307": {"id": 19307, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 10\nprint(2 * N if N % 2 == 1 else N)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19308": {"id": 19308, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 999999999\nprint(2 * N if N % 2 == 1 else N)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19309": {"id": 19309, "code": "N = 3\nprint(2 * N if (N % 2 != 0) else N)", "coverage": [">", ">"]}, "19310": {"id": 19310, "code": "N = 10\nprint(2 * N if (N % 2 != 0) else N)", "coverage": [">", ">"]}, "19311": {"id": 19311, "code": "N = 999999999\nprint(2 * N if (N % 2 != 0) else N)", "coverage": [">", ">"]}, "19312": {"id": 19312, "code": "N = 3\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "19313": {"id": 19313, "code": "N = 10\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "19314": {"id": 19314, "code": "N = 999999999\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "19315": {"id": 19315, "code": "n = 3\nprint(n) if n%2 ==0 else print(n*2)", "coverage": [">", ">"]}, "19316": {"id": 19316, "code": "n = 10\nprint(n) if n%2 ==0 else print(n*2)", "coverage": [">", ">"]}, "19317": {"id": 19317, "code": "n = 999999999\nprint(n) if n%2 ==0 else print(n*2)", "coverage": [">", ">"]}, "19318": {"id": 19318, "code": "N = 3\nn1 = N % 2\nif n1 == 0:\n    n_value = N\nelse:\n    n_value = 2 * N\nprint(n_value)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "19319": {"id": 19319, "code": "N = 10\nn1 = N % 2\nif n1 == 0:\n    n_value = N\nelse:\n    n_value = 2 * N\nprint(n_value)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19320": {"id": 19320, "code": "N = 3\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)", "coverage": [">", ">", "!", "!", ">"]}, "19321": {"id": 19321, "code": "N = 10\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)", "coverage": [">", ">", ">", "!", "!"]}, "19322": {"id": 19322, "code": "N = 999999999\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)", "coverage": [">", ">", "!", "!", ">"]}, "19326": {"id": 19326, "code": "N = 3\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "19327": {"id": 19327, "code": "N = 10\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "19328": {"id": 19328, "code": "N = 999999999\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "19329": {"id": 19329, "code": "import math\nn = 3\ngcd = math.gcd(2, n)\nlcm = int(2*n/gcd)\nans = lcm\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19330": {"id": 19330, "code": "import math\nn = 10\ngcd = math.gcd(2, n)\nlcm = int(2*n/gcd)\nans = lcm\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19331": {"id": 19331, "code": "n = 3\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", "!", "!", ">"]}, "19332": {"id": 19332, "code": "n = 10\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", ">", "!", "!"]}, "19333": {"id": 19333, "code": "n = 999999999\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", "!", "!", ">"]}, "19334": {"id": 19334, "code": "N = 3\nprint(N+N%2*N)", "coverage": [">", ">"]}, "19335": {"id": 19335, "code": "N = 10\nprint(N+N%2*N)", "coverage": [">", ">"]}, "19336": {"id": 19336, "code": "N = 999999999\nprint(N+N%2*N)", "coverage": [">", ">"]}, "19337": {"id": 19337, "code": "num = 3\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", "!", "!", ">"]}, "19338": {"id": 19338, "code": "num = 10\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", ">", "!", "!"]}, "19339": {"id": 19339, "code": "num = 999999999\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", "!", "!", ">"]}, "19340": {"id": 19340, "code": "import sys\nn = 3\ndef main():\n    ans = n\n    if n & 1: ans *= 2\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19341": {"id": 19341, "code": "import sys\nn = 10\ndef main():\n    ans = n\n    if n & 1: ans *= 2\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19342": {"id": 19342, "code": "N = 3\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "19343": {"id": 19343, "code": "N = 10\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "19344": {"id": 19344, "code": "N = 999999999\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "19345": {"id": 19345, "code": "def gcd(a, b):\n  while b:\n    a, b = b, a%b\n  return a\ndef lcm(a, b):\n  return a*b // gcd(a, b)\nN = 3\nans = lcm(2, N)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19346": {"id": 19346, "code": "def gcd(a, b):\n  while b:\n    a, b = b, a%b\n  return a\ndef lcm(a, b):\n  return a*b // gcd(a, b)\nN = 10\nans = lcm(2, N)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19347": {"id": 19347, "code": "n = 3\nprint([2*n, n][n%2==0])", "coverage": [">", ">"]}, "19348": {"id": 19348, "code": "n = 10\nprint([2*n, n][n%2==0])", "coverage": [">", ">"]}, "19349": {"id": 19349, "code": "n = 999999999\nprint([2*n, n][n%2==0])", "coverage": [">", ">"]}, "19350": {"id": 19350, "code": "n = 3\nif(n %2==1):\n  n *= 2\nprint(n)", "coverage": [">", ">", ">", ">"]}, "19351": {"id": 19351, "code": "n = 10\nif(n %2==1):\n  n *= 2\nprint(n)", "coverage": [">", ">", "!", ">"]}, "19352": {"id": 19352, "code": "N = 3\nif N == 1:\n    print(2)\nelif N %2 == 0:\n    print(N)\nelse:\n    print(2*N)", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "19353": {"id": 19353, "code": "N = 10\nif N == 1:\n    print(2)\nelif N %2 == 0:\n    print(N)\nelse:\n    print(2*N)", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "19354": {"id": 19354, "code": "N = 999999999\nif N == 1:\n    print(2)\nelif N %2 == 0:\n    print(N)\nelse:\n    print(2*N)", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "19355": {"id": 19355, "code": "u = 3\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", ">", "!", "!"]}, "19356": {"id": 19356, "code": "u = 10\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", "!", "!", ">"]}, "19357": {"id": 19357, "code": "u = 999999999\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", ">", "!", "!"]}, "19358": {"id": 19358, "code": "def actual(n):\n    if n % 2 == 0:\n        return n\n    return 2 * n\nn = 3\nprint(actual(n))", "coverage": [">", ">", "!", ">", ">", ">"]}, "19359": {"id": 19359, "code": "def actual(n):\n    if n % 2 == 0:\n        return n\n    return 2 * n\nn = 10\nprint(actual(n))", "coverage": [">", ">", ">", "!", ">", ">"]}, "19360": {"id": 19360, "code": "def actual(n):\n    if n % 2 == 0:\n        return n\n    return 2 * n\nn = 999999999\nprint(actual(n))", "coverage": [">", ">", "!", ">", ">", ">"]}, "19361": {"id": 19361, "code": "import math\ndef main():\n a = 3\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "19362": {"id": 19362, "code": "import math\ndef main():\n a = 10\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "19363": {"id": 19363, "code": "import math\ndef main():\n a = 999999999\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "19364": {"id": 19364, "code": "n = 3\nprint(n*2 if n%2>0 else n)", "coverage": [">", ">"]}, "19365": {"id": 19365, "code": "n = 10\nprint(n*2 if n%2>0 else n)", "coverage": [">", ">"]}, "19366": {"id": 19366, "code": "n = 999999999\nprint(n*2 if n%2>0 else n)", "coverage": [">", ">"]}, "19367": {"id": 19367, "code": "import math\nN = 3\nif N%2 != 0 :\n  N *= 2\nprint (N)", "coverage": [">", ">", ">", ">", ">"]}, "19368": {"id": 19368, "code": "import math\nN = 10\nif N%2 != 0 :\n  N *= 2\nprint (N)", "coverage": [">", ">", ">", "!", ">"]}, "19369": {"id": 19369, "code": "N = 3\nif(N % 2 == 0):\n    print(N)\nelse:\n    print(2 * N)", "coverage": [">", ">", "!", "!", ">"]}, "19370": {"id": 19370, "code": "N = 10\nif(N % 2 == 0):\n    print(N)\nelse:\n    print(2 * N)", "coverage": [">", ">", ">", "!", "!"]}, "19371": {"id": 19371, "code": "N = 999999999\nif(N % 2 == 0):\n    print(N)\nelse:\n    print(2 * N)", "coverage": [">", ">", "!", "!", ">"]}, "19375": {"id": 19375, "code": "def main():\n    n = 3\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "19376": {"id": 19376, "code": "def main():\n    n = 10\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "19377": {"id": 19377, "code": "def main():\n    n = 999999999\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "19378": {"id": 19378, "code": "def Multiple(n):\n    return n if n % 2 == 0 else n * 2\ndef main():\n    n = 3\n    print(Multiple(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19379": {"id": 19379, "code": "def Multiple(n):\n    return n if n % 2 == 0 else n * 2\ndef main():\n    n = 10\n    print(Multiple(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19380": {"id": 19380, "code": "def Multiple(n):\n    return n if n % 2 == 0 else n * 2\ndef main():\n    n = 999999999\n    print(Multiple(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19381": {"id": 19381, "code": "import math\na = 3\nprint(a*2//math.gcd(a, 2))", "coverage": [">", ">", ">"]}, "19382": {"id": 19382, "code": "import math\na = 10\nprint(a*2//math.gcd(a, 2))", "coverage": [">", ">", ">"]}, "19383": {"id": 19383, "code": "import math\na = 999999999\nprint(a*2//math.gcd(a, 2))", "coverage": [">", ">", ">"]}, "19384": {"id": 19384, "code": "N = 3\nif N == 1 or N == 2:\n    print(2)\nelse:\n    if N % 2 == 0:\n        i = N\n    else:\n        i = N*2\n    while i % N != 0:\n        i += 2\n    print(i)", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", "!", ">"]}, "19385": {"id": 19385, "code": "N = 10\nif N == 1 or N == 2:\n    print(2)\nelse:\n    if N % 2 == 0:\n        i = N\n    else:\n        i = N*2\n    while i % N != 0:\n        i += 2\n    print(i)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", "!", ">"]}, "19386": {"id": 19386, "code": "n = 3\nc=n\nd=0\nfor i in range(n, 99999999999999, n):\n    if i%2==0 and i%c==0:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19387": {"id": 19387, "code": "n = 10\nc=n\nd=0\nfor i in range(n, 99999999999999, n):\n    if i%2==0 and i%c==0:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19388": {"id": 19388, "code": "n = 3\nprint(n+n%2*n)", "coverage": [">", ">"]}, "19389": {"id": 19389, "code": "n = 10\nprint(n+n%2*n)", "coverage": [">", ">"]}, "19390": {"id": 19390, "code": "n = 999999999\nprint(n+n%2*n)", "coverage": [">", ">"]}, "19391": {"id": 19391, "code": "def main():\n    N = 3\n    if N % 2 == 0: return N\n    else: return N*2\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">"]}, "19392": {"id": 19392, "code": "def main():\n    N = 10\n    if N % 2 == 0: return N\n    else: return N*2\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", "!", ">", ">"]}, "19393": {"id": 19393, "code": "def main():\n    N = 999999999\n    if N % 2 == 0: return N\n    else: return N*2\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">"]}, "19394": {"id": 19394, "code": "s = 3\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", "!", "!", ">"]}, "19395": {"id": 19395, "code": "s = 10\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", ">", "!", "!"]}, "19396": {"id": 19396, "code": "s = 999999999\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", "!", "!", ">"]}, "19397": {"id": 19397, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 3\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19398": {"id": 19398, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 10\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19399": {"id": 19399, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 999999999\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19400": {"id": 19400, "code": "n = 3\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19401": {"id": 19401, "code": "n = 10\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19402": {"id": 19402, "code": "n = 999999999\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19403": {"id": 19403, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 3\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "19404": {"id": 19404, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 10\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", ">", ">"]}, "19405": {"id": 19405, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 999999999\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "19406": {"id": 19406, "code": "n = 3\nif(n%2==1):n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "19407": {"id": 19407, "code": "n = 10\nif(n%2==1):n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "19408": {"id": 19408, "code": "n = 3\nprint(n if n % 2 == 0 else 2 * n)", "coverage": [">", ">"]}, "19409": {"id": 19409, "code": "n = 10\nprint(n if n % 2 == 0 else 2 * n)", "coverage": [">", ">"]}, "19410": {"id": 19410, "code": "n = 999999999\nprint(n if n % 2 == 0 else 2 * n)", "coverage": [">", ">"]}, "19411": {"id": 19411, "code": "n = 3\nans=n if n%2==0 else 2*n\nprint(ans)", "coverage": [">", ">", ">"]}, "19412": {"id": 19412, "code": "n = 10\nans=n if n%2==0 else 2*n\nprint(ans)", "coverage": [">", ">", ">"]}, "19413": {"id": 19413, "code": "import sys\ndef input(): return \"3\".strip()\ndef main():\n    n = 3\n    if n % 2 == 0: print(n)\n    else: print(n * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19414": {"id": 19414, "code": "import sys\ndef input(): return \"10\".strip()\ndef main():\n    n = 10\n    if n % 2 == 0: print(n)\n    else: print(n * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "19415": {"id": 19415, "code": "import sys\ndef input(): return \"999999999\".strip()\ndef main():\n    n = 999999999\n    if n % 2 == 0: print(n)\n    else: print(n * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19416": {"id": 19416, "code": "a = 3\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", "!", "!", ">"]}, "19417": {"id": 19417, "code": "a = 10\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", ">", "!", "!"]}, "19418": {"id": 19418, "code": "a = 999999999\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", "!", "!", ">"]}, "19419": {"id": 19419, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 3\nprint(2*n if n % 2 else n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19420": {"id": 19420, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 10\nprint(2*n if n % 2 else n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19421": {"id": 19421, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 999999999\nprint(2*n if n % 2 else n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19422": {"id": 19422, "code": "N = 3\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "19423": {"id": 19423, "code": "N = 10\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "19424": {"id": 19424, "code": "N = 999999999\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "19425": {"id": 19425, "code": "n = 3\nans = n\nif n%2:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "19426": {"id": 19426, "code": "n = 10\nans = n\nif n%2:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "19427": {"id": 19427, "code": "n = 3\nprint(n if n % 2 == 0 else n + n)", "coverage": [">", ">"]}, "19428": {"id": 19428, "code": "n = 10\nprint(n if n % 2 == 0 else n + n)", "coverage": [">", ">"]}, "19429": {"id": 19429, "code": "n = 999999999\nprint(n if n % 2 == 0 else n + n)", "coverage": [">", ">"]}, "19430": {"id": 19430, "code": "N = 3\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "19431": {"id": 19431, "code": "N = 10\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "19432": {"id": 19432, "code": "N = 999999999\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "19433": {"id": 19433, "code": "N = 3\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "19434": {"id": 19434, "code": "N = 10\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "19435": {"id": 19435, "code": "N = 999999999\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "19436": {"id": 19436, "code": "n = 3\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", "!"]}, "19437": {"id": 19437, "code": "n = 10\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", ">"]}, "19438": {"id": 19438, "code": "n = 999999999\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", "!"]}, "19439": {"id": 19439, "code": "from math import gcd\nn = 3\nprint(2*n//gcd(n,2))", "coverage": [">", ">", ">"]}, "19440": {"id": 19440, "code": "from math import gcd\nn = 10\nprint(2*n//gcd(n,2))", "coverage": [">", ">", ">"]}, "19441": {"id": 19441, "code": "from math import gcd\nn = 999999999\nprint(2*n//gcd(n,2))", "coverage": [">", ">", ">"]}, "19442": {"id": 19442, "code": "N = 3\nif N == 1:\n    print(2)\n    exit()\nans = N if N % 2 == 0 else 2 * N\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "19443": {"id": 19443, "code": "N = 10\nif N == 1:\n    print(2)\n    exit()\nans = N if N % 2 == 0 else 2 * N\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "19444": {"id": 19444, "code": "def main():\n    a = 2;b = 3\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19445": {"id": 19445, "code": "def main():\n    a = 2;b = 10\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19446": {"id": 19446, "code": "def main():\n    a = 2;b = 999999999\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19447": {"id": 19447, "code": "N = 3\nif N==1:\n    x = 2\nelif N%2==0:\n    x = N\nelse:\n    x = 2*N\nprint(x)", "coverage": [">", ">", "!", ">", "!", "!", ">", ">"]}, "19448": {"id": 19448, "code": "N = 10\nif N==1:\n    x = 2\nelif N%2==0:\n    x = N\nelse:\n    x = 2*N\nprint(x)", "coverage": [">", ">", "!", ">", ">", "!", "!", ">"]}, "19449": {"id": 19449, "code": "n = 3\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "19450": {"id": 19450, "code": "n = 10\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "19451": {"id": 19451, "code": "n = 999999999\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "19452": {"id": 19452, "code": "N = 3\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "19453": {"id": 19453, "code": "N = 10\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "19454": {"id": 19454, "code": "N = 999999999\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "19455": {"id": 19455, "code": "import math\nN = 3\nprint(2*N//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19456": {"id": 19456, "code": "import math\nN = 10\nprint(2*N//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19457": {"id": 19457, "code": "import math\nN = 999999999\nprint(2*N//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19458": {"id": 19458, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 3\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "19459": {"id": 19459, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 10\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "19460": {"id": 19460, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 999999999\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "19461": {"id": 19461, "code": "n = 3\nprint([n,2*n][n%2==1])", "coverage": [">", ">"]}, "19462": {"id": 19462, "code": "n = 10\nprint([n,2*n][n%2==1])", "coverage": [">", ">"]}, "19463": {"id": 19463, "code": "n = 999999999\nprint([n,2*n][n%2==1])", "coverage": [">", ">"]}, "19464": {"id": 19464, "code": "s = 3\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", "!", "!", ">"]}, "19465": {"id": 19465, "code": "s = 10\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", ">", "!", "!"]}, "19466": {"id": 19466, "code": "s = 999999999\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", "!", "!", ">"]}, "19467": {"id": 19467, "code": "n = 3\nif n%2==0:\n  print(n)\nif n%2==1:\n  print(n*2)", "coverage": [">", ">", "!", ">", ">"]}, "19468": {"id": 19468, "code": "n = 10\nif n%2==0:\n  print(n)\nif n%2==1:\n  print(n*2)", "coverage": [">", ">", ">", ">", "!"]}, "19469": {"id": 19469, "code": "n = 999999999\nif n%2==0:\n  print(n)\nif n%2==1:\n  print(n*2)", "coverage": [">", ">", "!", ">", ">"]}, "19470": {"id": 19470, "code": "n = 3\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "19471": {"id": 19471, "code": "n = 10\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "19472": {"id": 19472, "code": "n = 999999999\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "19473": {"id": 19473, "code": "import math\nN = 3\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19474": {"id": 19474, "code": "import math\nN = 10\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19475": {"id": 19475, "code": "import math\nN = 999999999\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "19476": {"id": 19476, "code": "s = 3\nprint(s if s%2 == 0 else s*2)", "coverage": [">", ">"]}, "19477": {"id": 19477, "code": "s = 10\nprint(s if s%2 == 0 else s*2)", "coverage": [">", ">"]}, "19478": {"id": 19478, "code": "s = 999999999\nprint(s if s%2 == 0 else s*2)", "coverage": [">", ">"]}, "19479": {"id": 19479, "code": "import math\ndef main():\n    n = 3\n    x=2*n//math.gcd(2,n)\n    print(x)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19480": {"id": 19480, "code": "import math\ndef main():\n    n = 10\n    x=2*n//math.gcd(2,n)\n    print(x)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19481": {"id": 19481, "code": "x = 3\nif x%2:\n  print(x*2)\nelse:\n  print(x)", "coverage": [">", ">", ">", "!", "!"]}, "19482": {"id": 19482, "code": "x = 10\nif x%2:\n  print(x*2)\nelse:\n  print(x)", "coverage": [">", ">", "!", "!", ">"]}, "19483": {"id": 19483, "code": "x = 999999999\nif x%2:\n  print(x*2)\nelse:\n  print(x)", "coverage": [">", ">", ">", "!", "!"]}, "19484": {"id": 19484, "code": "i = 3\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", "!", "!", ">"]}, "19485": {"id": 19485, "code": "i = 10\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", ">", "!", "!"]}, "19486": {"id": 19486, "code": "i = 999999999\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", "!", "!", ">"]}, "19487": {"id": 19487, "code": "n = 3\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "19488": {"id": 19488, "code": "n = 10\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", "!", "!", ">"]}, "19489": {"id": 19489, "code": "n = 999999999\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "19490": {"id": 19490, "code": "n = 3\nif n%2!=0: n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "19491": {"id": 19491, "code": "n = 10\nif n%2!=0: n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "19495": {"id": 19495, "code": "n = 3\ncontador = 0\nres = 0\nwhile(True):\n    contador += n\n    if contador % 2 == 0 and contador % n == 0:\n        res = contador\n        break;\nprint(res,'\\n')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19496": {"id": 19496, "code": "n = 10\ncontador = 0\nres = 0\nwhile(True):\n    contador += n\n    if contador % 2 == 0 and contador % n == 0:\n        res = contador\n        break;\nprint(res,'\\n')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19497": {"id": 19497, "code": "import sys\ninput = sys.stdin.readline\nN = 3\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2 * N)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19498": {"id": 19498, "code": "import sys\ninput = sys.stdin.readline\nN = 10\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2 * N)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "19499": {"id": 19499, "code": "import sys\ninput = sys.stdin.readline\nN = 999999999\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2 * N)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19500": {"id": 19500, "code": "N = 3\nprint(N * 2) if N % 2 else print(N)", "coverage": [">", ">"]}, "19501": {"id": 19501, "code": "N = 10\nprint(N * 2) if N % 2 else print(N)", "coverage": [">", ">"]}, "19502": {"id": 19502, "code": "N = 999999999\nprint(N * 2) if N % 2 else print(N)", "coverage": [">", ">"]}, "19503": {"id": 19503, "code": "R = 3\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", "!", "!", ">"]}, "19504": {"id": 19504, "code": "R = 10\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", ">", "!", "!"]}, "19505": {"id": 19505, "code": "R = 999999999\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", "!", "!", ">"]}, "19506": {"id": 19506, "code": "n = 3\nif n % 2 == 0: print(n)\nelse: print(2*n)", "coverage": [">", ">", ">"]}, "19507": {"id": 19507, "code": "n = 10\nif n % 2 == 0: print(n)\nelse: print(2*n)", "coverage": [">", ">", "!"]}, "19508": {"id": 19508, "code": "n = 999999999\nif n % 2 == 0: print(n)\nelse: print(2*n)", "coverage": [">", ">", ">"]}, "19509": {"id": 19509, "code": "N = 3\ndef gcd(a,b):\n  if a==b:\n    return a\n  else:\n    a,b=max(a,b),min(a,b)\n    if a%b==0:\n      return b\n    return gcd(b,a%b)  \nif N%2==0:\n  print(N)\nelse:\n  lcm=int(2*N/gcd(2,N))\n  print(lcm)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19510": {"id": 19510, "code": "N = 10\ndef gcd(a,b):\n  if a==b:\n    return a\n  else:\n    a,b=max(a,b),min(a,b)\n    if a%b==0:\n      return b\n    return gcd(b,a%b)  \nif N%2==0:\n  print(N)\nelse:\n  lcm=int(2*N/gcd(2,N))\n  print(lcm)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!"]}, "19511": {"id": 19511, "code": "N = 3\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", "!"]}, "19512": {"id": 19512, "code": "N = 10\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", ">"]}, "19513": {"id": 19513, "code": "N = 999999999\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", "!"]}, "19514": {"id": 19514, "code": "s = 3\nstart=s*2\nif s%2==0:\n  start=int(start/2)\nprint(start)", "coverage": [">", ">", ">", "!", ">"]}, "19515": {"id": 19515, "code": "s = 10\nstart=s*2\nif s%2==0:\n  start=int(start/2)\nprint(start)", "coverage": [">", ">", ">", ">", ">"]}, "19516": {"id": 19516, "code": "a = 3\ni=1\nif a%2==0 and a%a==0:\n  print(a)\nelse:\n print(a*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "19517": {"id": 19517, "code": "a = 10\ni=1\nif a%2==0 and a%a==0:\n  print(a)\nelse:\n print(a*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "19518": {"id": 19518, "code": "a = 999999999\ni=1\nif a%2==0 and a%a==0:\n  print(a)\nelse:\n print(a*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "19519": {"id": 19519, "code": "n = 3\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "19520": {"id": 19520, "code": "n = 10\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "19521": {"id": 19521, "code": "n = 999999999\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "19522": {"id": 19522, "code": "i = 3\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "19523": {"id": 19523, "code": "i = 10\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "19524": {"id": 19524, "code": "i = 999999999\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "19525": {"id": 19525, "code": "n = 3\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "19526": {"id": 19526, "code": "n = 10\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", "!", "!", ">"]}, "19527": {"id": 19527, "code": "n = 999999999\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "19531": {"id": 19531, "code": "def main():\n    n = 3\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "19532": {"id": 19532, "code": "def main():\n    n = 10\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19533": {"id": 19533, "code": "def main():\n    n = 999999999\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "19534": {"id": 19534, "code": "n = 3\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "19535": {"id": 19535, "code": "n = 10\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "19536": {"id": 19536, "code": "n = 999999999\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "19537": {"id": 19537, "code": "n = 3\nif n%2!=0:\n  n*=2\nprint(n)", "coverage": [">", ">", ">", ">"]}, "19538": {"id": 19538, "code": "n = 10\nif n%2!=0:\n  n*=2\nprint(n)", "coverage": [">", ">", "!", ">"]}, "19539": {"id": 19539, "code": "N = 3\na = N\nwhile a % 2 != 0:\n    a += N\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", ">"]}, "19540": {"id": 19540, "code": "N = 10\na = N\nwhile a % 2 != 0:\n    a += N\nelse:\n    print(a)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13655": {"id": 13655, "code": "N = 20;M = 4\nA = [3, 7, 8, 4]\nA.sort()\nif 1 in A:\n    if N%2==0:\n        print(\"1\"*(N//2))\n    else:\n        if 7 in A:\n            print(\"7\"+\"1\"*(N//2-1))\n        elif 5 in A:\n            print(\"5\"+\"1\"*(N//2-2))\n        elif 3 in A:\n            print(\"3\"+\"1\"*(N//2-2))\n        elif 2 in A:\n            print(\"2\"+\"1\"*(N//2-2))\n        else:\n            print(\"8\"+\"1\"*(N//2-3))\nelif 7 in A:\n    if N%3==0:\n        print(\"7\"*(N//3))\n    elif N%3==1:\n        if 4 in A:\n            print(\"7\"*(N//3-1)+\"4\")\n        elif 8 in A:\n            print(\"8\"+\"7\"*(N//3-2))\n        elif 5 in A:\n            print(\"7\"*(N//3-3)+\"55\")\n        elif 3 in A:\n            print(\"7\"*(N//3-3)+\"33\")\n        elif 2 in A:\n            print(\"7\"*(N//3-3)+\"22\")\n    else:\n        if 5 in A:\n            print(\"7\"*(N//3-1)+\"5\")\n        elif 3 in A:\n             print(\"7\"*(N//3-1)+\"3\")\n        elif 2 in A:\n            print(\"7\"*(N//3-1)+\"2\")\n        elif 4 in A:\n            print(\"7\"*(N//3-2)+\"44\")\n        elif 8 in A:\n            print(print(\"7\"*(N//3-4)+\"88\"))\nelse:\n    B=[[] for i in range(0,10)]\n    for i in range(0,M):\n        if 2 in A:\n            B[5].append(2)\n        if 3 in A:\n            B[5].append(3)\n        if 4 in A:\n            B[4].append(4)\n        if 5 in A:\n            B[5].append(5)\n        if 6 in A:\n            B[6].append(6)\n        if 8 in A:\n            B[7].append(8)\n        if 9 in A:\n            B[6].append(9)\n    dp=['n' for i in range(0,max(10,N+1))]\n    for i in range(0,min(N+1,10)):\n        if i==2:\n            if 2 in A:\n                dp[5]='2'\n        if i==3:\n            if 3 in A:\n                dp[5]='3'\n        if i==4:\n            if 4 in A:\n                dp[4]='4'\n        if i==5:\n            if 5 in A:\n                dp[5]='5'\n        if i==6:\n            if 6 in A:\n                dp[6]='6'\n        if i==8:\n            if 8 in A:\n                dp[7]='8'\n        if i==9:\n            if 9 in A:\n                dp[6]='9'\n    if N>=6:\n        a='0'\n        b='0'\n        c='0'\n        if dp[6]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            x=max(a,b,c)\n            if x!=0:\n                dp[6]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(dp[6])\n            dp[6]=str(max(a,b,c,d))\n    if N>=7:\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        if dp[7]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            x=max(a,b,c,d)\n            if x!=0:\n                dp[7]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            e=int(dp[7])\n            dp[7]=str(max(e,a,b,c,d))\n    for i in range(8,N+1):\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        e='0'\n        f='0'\n        if B[4] and dp[i-4]!='n':\n            c='4'+dp[i-4]\n        if B[5] and dp[i-5]!='n':\n            d=str(max(B[5]))+dp[i-5]\n        if B[6] and dp[i-6]!='n':\n            e=str(max(B[6]))+dp[i-6]\n        if B[7] and dp[i-7]!='n':\n            f='8'+dp[i-7]\n        a=int(a)\n        b=int(b)\n        c=int(c)\n        d=int(d)\n        e=int(e)\n        f=int(f)\n        x=max(a,b,c,d,e,f)\n        if x==0:\n            dp[i]='n'\n        else:\n            dp[i]=str(x)\n    print(int(dp[N]))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13656": {"id": 13656, "code": "N = 101;M = 9\nA = [9, 8, 7, 6, 5, 4, 3, 2, 1]\nA.sort()\nif 1 in A:\n    if N%2==0:\n        print(\"1\"*(N//2))\n    else:\n        if 7 in A:\n            print(\"7\"+\"1\"*(N//2-1))\n        elif 5 in A:\n            print(\"5\"+\"1\"*(N//2-2))\n        elif 3 in A:\n            print(\"3\"+\"1\"*(N//2-2))\n        elif 2 in A:\n            print(\"2\"+\"1\"*(N//2-2))\n        else:\n            print(\"8\"+\"1\"*(N//2-3))\nelif 7 in A:\n    if N%3==0:\n        print(\"7\"*(N//3))\n    elif N%3==1:\n        if 4 in A:\n            print(\"7\"*(N//3-1)+\"4\")\n        elif 8 in A:\n            print(\"8\"+\"7\"*(N//3-2))\n        elif 5 in A:\n            print(\"7\"*(N//3-3)+\"55\")\n        elif 3 in A:\n            print(\"7\"*(N//3-3)+\"33\")\n        elif 2 in A:\n            print(\"7\"*(N//3-3)+\"22\")\n    else:\n        if 5 in A:\n            print(\"7\"*(N//3-1)+\"5\")\n        elif 3 in A:\n             print(\"7\"*(N//3-1)+\"3\")\n        elif 2 in A:\n            print(\"7\"*(N//3-1)+\"2\")\n        elif 4 in A:\n            print(\"7\"*(N//3-2)+\"44\")\n        elif 8 in A:\n            print(print(\"7\"*(N//3-4)+\"88\"))\nelse:\n    B=[[] for i in range(0,10)]\n    for i in range(0,M):\n        if 2 in A:\n            B[5].append(2)\n        if 3 in A:\n            B[5].append(3)\n        if 4 in A:\n            B[4].append(4)\n        if 5 in A:\n            B[5].append(5)\n        if 6 in A:\n            B[6].append(6)\n        if 8 in A:\n            B[7].append(8)\n        if 9 in A:\n            B[6].append(9)\n    dp=['n' for i in range(0,max(10,N+1))]\n    for i in range(0,min(N+1,10)):\n        if i==2:\n            if 2 in A:\n                dp[5]='2'\n        if i==3:\n            if 3 in A:\n                dp[5]='3'\n        if i==4:\n            if 4 in A:\n                dp[4]='4'\n        if i==5:\n            if 5 in A:\n                dp[5]='5'\n        if i==6:\n            if 6 in A:\n                dp[6]='6'\n        if i==8:\n            if 8 in A:\n                dp[7]='8'\n        if i==9:\n            if 9 in A:\n                dp[6]='9'\n    if N>=6:\n        a='0'\n        b='0'\n        c='0'\n        if dp[6]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            x=max(a,b,c)\n            if x!=0:\n                dp[6]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(dp[6])\n            dp[6]=str(max(a,b,c,d))\n    if N>=7:\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        if dp[7]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            x=max(a,b,c,d)\n            if x!=0:\n                dp[7]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            e=int(dp[7])\n            dp[7]=str(max(e,a,b,c,d))\n    for i in range(8,N+1):\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        e='0'\n        f='0'\n        if B[4] and dp[i-4]!='n':\n            c='4'+dp[i-4]\n        if B[5] and dp[i-5]!='n':\n            d=str(max(B[5]))+dp[i-5]\n        if B[6] and dp[i-6]!='n':\n            e=str(max(B[6]))+dp[i-6]\n        if B[7] and dp[i-7]!='n':\n            f='8'+dp[i-7]\n        a=int(a)\n        b=int(b)\n        c=int(c)\n        d=int(d)\n        e=int(e)\n        f=int(f)\n        x=max(a,b,c,d,e,f)\n        if x==0:\n            dp[i]='n'\n        else:\n            dp[i]=str(x)\n    print(int(dp[N]))", "coverage}, "13657": {"id": 13657, "code": "N = 15;M = 3\nA = [5, 4, 6]\ndp = [0] * N + [-1] * 9\nfor i in range(1, N+1):\n    dp[i] = max(dp[i-int('0255456376'[a])] * 10 + a for a in A)\nprint(dp[N])", "coverage": [">", ">", ">", ">", ">", ">"]}, "13659": {"id": 13659, "code": "import sys\nsys.setrecursionlimit(1000000)\nn = 15;m = 3\na = [5, 4, 6]\ncost = [float(\"inf\"), 2, 5, 5, 4, 5, 6, 3, 7, 6]\nmincost = min(cost)\ndp = [None] * (n + 1)\ndef dfs(at):\n    if at < 0:\n        return -1\n    if at == 0:\n        return 0\n    if dp[at] is not None:\n        return dp[at]\n    r = max(dfs(at - cost[v]) * 10 + v for v in a)\n    dp[at] = r\n    return r\nprint(dfs(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13660": {"id": 13660, "code": "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(\"5 4 3\".rstrip())\ndef LI(): return list(map(int,\"2 1 1\".rstrip().split()))\ndef S(): return \"3 3 4\".rstrip()\ndef LS(): return list(\"1 4 2\".rstrip().split())\ndef main():\n    w,h,n = LI()\n    board = [[1]*h for _ in range(w)]\n    for _ in range(n):\n        x,y,a = LI()\n        if a == 1:\n            for i in range(x):\n                board[i] = [0 for _ in range(h)]\n        elif a == 2:\n            for i in range(x,w):\n                board[i] = [0 for _ in range(h)]\n        elif a == 3:\n            for i in range(w):\n                for j in range(y):\n                    board[i][j] = 0\n        elif a == 4:\n            for i in range(w):\n                for j in range(y,h):\n                    board[i][j] = 0\n    ans = 0\n    for line in board:\n        ans += sum(line)\n    print(ans)\nmain()            ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13661": {"id": 13661, "code": "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(\"5 4 3\")\ndef i_map(): return map(int, \"2 1 1\".split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return \"3 3 4\"\ndef s_map(): return \"1 4 2\".split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef main():\n    w,h,n = i_map()\n    up = h\n    right = w\n    down = 0\n    left = 0\n    for i in range(n):\n        x,y,a = i_map()\n        if a == 1:\n            left = max(left,x)\n        elif a == 2:\n            right = min(right, x)\n        elif a == 3:\n            down = max(down, y)\n        else:\n            up = min(up, y)\n    print(max((up-down),0)*max((right-left),0))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13662": {"id": 13662, "code": "import sys\ndef II(): return int(\"5 4 2\")\ndef MI(): return map(int, \"2 1 1\".split())\ndef LI(): return list(map(int, \"3 3 4\".split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef solver(WIDTH, HEIGHT, OPERATION):\n    result = 0\n    all_ope = len(OPERATION)\n    up_max = HEIGHT\n    left_min = 0\n    right_max = WIDTH\n    down_min = 0\n    for j in range(0, all_ope, +1):\n        each_ope = OPERATION[j]\n        ope = each_ope[2]\n        if ope == 1:\n            if left_min < each_ope[0]:\n                left_min = each_ope[0]\n        if ope == 2:\n            if each_ope[0] < right_max:\n                right_max = each_ope[0]\n        if ope == 3:\n            if down_min < each_ope[1]:\n                down_min = each_ope[1]\n        if ope == 4:\n            if each_ope[1] < up_max:\n                up_max = each_ope[1]\n    if ((left_min < right_max) and (down_min < up_max)):\n        result = (right_max-left_min) * (up_max - down_min)\n    return result\nif __name__ == \"__main__\":\n    W, H, N = MI()\n    OPE = list()\n    for _ in range(0, N, +1):\n        OPE.append(LI())\n    print(\"{}\".format(solver(W, H, OPE)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13663": {"id": 13663, "code": "from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport itertools\nimport math\ndef readInt():\n  return int(\"5 4 3\")\ndef readInts():\n  return list(map(int, \"2 1 1\".split()))\ndef readChar():\n  return \"3 3 4\"\ndef readChars():\n  return \"1 4 2\".split()\nw,h,n = readInts()\nxya = [readInts() for i in range(n)]\nxmin = 0\nxmax = w\nymin = 0\nymax = h\nfor x,y,a in xya:\n  if a==1:\n    xmin = max(x,xmin)\n  elif a==2:\n    xmax = min(x,xmax)\n  elif a==3:\n    ymin = max(y,ymin)\n  else:\n    ymax = min(y,ymax)\nprint(max(0,xmax-xmin)*max(0,ymax-ymin))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "13664": {"id": 13664, "code": "import sys\ndef II(): return int(\"5 4 2\")\ndef MI(): return map(int, \"2 1 1\".split())\ndef LI(): return list(map(int, \"3 3 4\".split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef solver(Width, Height, op_count, x_list, y_list, op_list):\n    result = 0\n    x_label_max = Width\n    x_label_min = 0\n    y_label_max = Height\n    y_label_min = 0\n    for j in range(0, op_count):\n        real_ope = op_list[j]\n        if real_ope == 1:\n            x_label_min = max(x_list[j], x_label_min)\n        if real_ope == 2:\n            x_label_max = min(x_list[j], x_label_max)\n        if real_ope == 3:\n            y_label_min = max(y_list[j], y_label_min)\n        if real_ope == 4:\n            y_label_max = min(y_list[j], y_label_max)\n    resultWidth = x_label_max - x_label_min\n    resultHeight = y_label_max - y_label_min\n    if resultWidth < 0:\n        resultWidth = 0\n    if resultHeight < 0:\n        resultHeight = 0\n    result = resultWidth * resultHeight\n    return result\nif __name__ == \"__main__\":\n    W, H, N = MI()\n    x_list = list()\n    y_list = list()\n    op_list = list()\n    for _ in range(0, N, +1):\n        tmp_x, tmp_y, tmp_op = MI()\n        x_list.append(tmp_x)\n        y_list.append(tmp_y)\n        op_list.append(tmp_op)\n    print(\"{}\".format(solver(W, H, N, x_list, y_list, op_list)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11726": {"id": 11726, "code": "x = [11, 16]\nx = [11, 17]\nif x[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11727": {"id": 11727, "code": "x = [11, 30]\nx = [12, 1]\nif x[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11728": {"id": 11728, "code": "x = 11\ny = 11\nprint(1) if (x != y) else print(0)", "coverage": [">", ">", ">"]}, "11729": {"id": 11729, "code": "x = 11\ny = 12\nprint(1) if (x != y) else print(0)", "coverage": [">", ">", ">"]}, "11730": {"id": 11730, "code": "D1 = [11, 16]\nD2 = [11, 17]\nif D1[1] < D2[1]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11731": {"id": 11731, "code": "D1 = [11, 30]\nD2 = [12, 1]\nif D1[1] < D2[1]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11732": {"id": 11732, "code": "M = 11;D = 16\nMM = 11;DD = 17\nif MM-1==M or (MM-1==0 and M==12):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11733": {"id": 11733, "code": "M = 11;D = 30\nMM = 12;DD = 1\nif MM-1==M or (MM-1==0 and M==12):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11734": {"id": 11734, "code": "m1 = 11;d = 16\nd = 17;m2 = 11\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "11735": {"id": 11735, "code": "m1 = 11;d = 30\nd = 1;m2 = 12\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "11736": {"id": 11736, "code": "pm = 11;pd = 16\nnm = 11;nd = 17\nprint(0 if pm == nm else 1)", "coverage": [">", ">", ">"]}, "11737": {"id": 11737, "code": "pm = 11;pd = 30\nnm = 12;nd = 1\nprint(0 if pm == nm else 1)", "coverage": [">", ">", ">"]}, "11738": {"id": 11738, "code": "m = 11;d = 16\nprint(1 if int(\"11 17\".split()[1])-d!=1 else 0)", "coverage": [">", ">"]}, "11739": {"id": 11739, "code": "m = 11;d = 30\nprint(1 if int(\"12 1\".split()[1])-d!=1 else 0)", "coverage": [">", ">"]}, "11740": {"id": 11740, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nM1=int(M1)\nM2=int(M2)\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11741": {"id": 11741, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nM1=int(M1)\nM2=int(M2)\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11742": {"id": 11742, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11743": {"id": 11743, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11744": {"id": 11744, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n  print(1)\nelse:print(0)", "coverage": [">", ">", ">", "!", ">"]}, "11745": {"id": 11745, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2:\n  print(1)\nelse:print(0)", "coverage": [">", ">", ">", ">", "!"]}, "11746": {"id": 11746, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(m2 - m1)", "coverage": [">", ">", ">"]}, "11747": {"id": 11747, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(m2 - m1)", "coverage": [">", ">", ">"]}, "11748": {"id": 11748, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nans = 1 if d2 == 1 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11749": {"id": 11749, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nans = 1 if d2 == 1 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11750": {"id": 11750, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1) if(M1 != M2) else print(0)", "coverage": [">", ">", ">"]}, "11751": {"id": 11751, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1) if(M1 != M2) else print(0)", "coverage": [">", ">", ">"]}, "11754": {"id": 11754, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "11755": {"id": 11755, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "11756": {"id": 11756, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11757": {"id": 11757, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11758": {"id": 11758, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nM1 = 1 if M1 + 1 > 12 else M1 + 1\nif M1 == M2 and D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11759": {"id": 11759, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nM1 = 1 if M1 + 1 > 12 else M1 + 1\nif M1 == M2 and D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11760": {"id": 11760, "code": "a = [11, 16]\nb = [11, 17]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11761": {"id": 11761, "code": "a = [11, 30]\nb = [12, 1]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11762": {"id": 11762, "code": "a = 11;b = 16\nc = 11;d = 17\nif (a != c):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11763": {"id": 11763, "code": "a = 11;b = 30\nc = 12;d = 1\nif (a != c):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11764": {"id": 11764, "code": "import heapq\nfrom sys import stdin\ninput = stdin.readline\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\ndef main():\n    if m1 ==12:\n        if m2 == 1 and d2 ==1 :\n            print(1)\n        else:\n            print(0)\n    else:\n        if m2 ==m1+1 and d2 ==1:\n            print(1)\n        else:\n            print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "11765": {"id": 11765, "code": "import heapq\nfrom sys import stdin\ninput = stdin.readline\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\ndef main():\n    if m1 ==12:\n        if m2 == 1 and d2 ==1 :\n            print(1)\n        else:\n            print(0)\n    else:\n        if m2 ==m1+1 and d2 ==1:\n            print(1)\n        else:\n            print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "11766": {"id": 11766, "code": "m1 = 11\nm2 = 11\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11767": {"id": 11767, "code": "m1 = 11\nm2 = 12\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11768": {"id": 11768, "code": "a = \"11\";b = \"16\"\nx = \"11\";y = \"17\"\nif a == x:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11769": {"id": 11769, "code": "a = \"11\";b = \"30\"\nx = \"12\";y = \"1\"\nif a == x:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11770": {"id": 11770, "code": "i = [11, 16]\nj = [11, 17]\nif j[1]==1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11771": {"id": 11771, "code": "i = [11, 30]\nj = [12, 1]\nif j[1]==1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11772": {"id": 11772, "code": "a = 11;b = 16\nb = 17;c = 11\nif a!=c:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11773": {"id": 11773, "code": "a = 11;b = 30\nb = 1;c = 12\nif a!=c:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11774": {"id": 11774, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11775": {"id": 11775, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11776": {"id": 11776, "code": "_ = list(map(int, \"11 16\".split()))\nn = 17\nif n == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11777": {"id": 11777, "code": "_ = list(map(int, \"11 30\".split()))\nn = 1\nif n == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11778": {"id": 11778, "code": "n = 11;m = 16\nn2 = 11;m2 = 17\nif n2 != n:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11779": {"id": 11779, "code": "n = 11;m = 30\nn2 = 12;m2 = 1\nif n2 != n:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11780": {"id": 11780, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m2 == m1 % 12 + 1 and d2 == 1 else 0)", "coverage": [">", ">", ">"]}, "11781": {"id": 11781, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m2 == m1 % 12 + 1 and d2 == 1 else 0)", "coverage": [">", ">", ">"]}, "11782": {"id": 11782, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(\"1\" if m2==m1+1 else \"0\")", "coverage": [">", ">", ">"]}, "11783": {"id": 11783, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(\"1\" if m2==m1+1 else \"0\")", "coverage": [">", ">", ">"]}, "11784": {"id": 11784, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11785": {"id": 11785, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11786": {"id": 11786, "code": "x = ['11', '16']\ny = ['11', '17']\nif(x[0]!=y[0]):\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11787": {"id": 11787, "code": "x = ['11', '30']\ny = ['12', '1']\nif(x[0]!=y[0]):\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11788": {"id": 11788, "code": "x = [11, 16]\ny = [11, 17]\nif x[0] != y[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11789": {"id": 11789, "code": "x = [11, 30]\ny = [12, 1]\nif x[0] != y[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11790": {"id": 11790, "code": "d1 = \"11\"\nd2 = \"11\"\nif d1 != d2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11791": {"id": 11791, "code": "d1 = \"11\"\nd2 = \"12\"\nif d1 != d2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11792": {"id": 11792, "code": "from sys import stdin\ndef main():\n    M_1 = 11;D_1 = 16\n    M_2 = 11;D_2 = 17\n    if not M_1 == M_2:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11793": {"id": 11793, "code": "from sys import stdin\ndef main():\n    M_1 = 11;D_1 = 30\n    M_2 = 12;D_2 = 1\n    if not M_1 == M_2:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11794": {"id": 11794, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11795": {"id": 11795, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11796": {"id": 11796, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(\"1\" if M1 != M2 else \"0\")", "coverage": [">", ">", ">"]}, "11797": {"id": 11797, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(\"1\" if M1 != M2 else \"0\")", "coverage": [">", ">", ">"]}, "11798": {"id": 11798, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D2 == 1:\n  print ('1')\nelse:\n  print ('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11799": {"id": 11799, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n  print ('1')\nelse:\n  print ('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11800": {"id": 11800, "code": "def main(lst):\n    m_1, d_1, m_2, d_2 = lst[0], lst[1], lst[2], lst[3]\n    before = False\n    after = None\n    lst_1 = [1, 3, 5, 7, 8, 10, 12]\n    lst_2 = [2]\n    lst_3 = [4, 6, 9, 11]\n    if m_1 in lst_1:\n        if d_1 == 31:\n            before = True\n            if m_2 == m_1 + 1 or m_2 == 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    elif m_1 in lst_2:\n        if d_1 == 28:\n            before = True\n            if m_2 == 3:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if m_1 in lst_3:\n        if d_1 == 30:\n            before = True\n            if m_2 == m_1 + 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if before == True and after == True:\n        return 1\n    else:\n        return 0\nif __name__ == '__main__':\n    before = [11, 16]\n    after = [11, 17]\n    print(main(before + after))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11801": {"id": 11801, "code": "def main(lst):\n    m_1, d_1, m_2, d_2 = lst[0], lst[1], lst[2], lst[3]\n    before = False\n    after = None\n    lst_1 = [1, 3, 5, 7, 8, 10, 12]\n    lst_2 = [2]\n    lst_3 = [4, 6, 9, 11]\n    if m_1 in lst_1:\n        if d_1 == 31:\n            before = True\n            if m_2 == m_1 + 1 or m_2 == 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    elif m_1 in lst_2:\n        if d_1 == 28:\n            before = True\n            if m_2 == 3:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if m_1 in lst_3:\n        if d_1 == 30:\n            before = True\n            if m_2 == m_1 + 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if before == True and after == True:\n        return 1\n    else:\n        return 0\nif __name__ == '__main__':\n    before = [11, 30]\n    after = [12, 1]\n    print(main(before + after))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11802": {"id": 11802, "code": "X = 11;Y = 16\nX1 = 11;Y1 = 17\nif Y1 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11803": {"id": 11803, "code": "X = 11;Y = 30\nX1 = 12;Y1 = 1\nif Y1 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11804": {"id": 11804, "code": "A = ['11', '16']\nB = ['11', '17']\nif A[0] == B[0]:\n\tprint(\"0\")\nelse:\n\tprint(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11805": {"id": 11805, "code": "A = ['11', '30']\nB = ['12', '1']\nif A[0] == B[0]:\n\tprint(\"0\")\nelse:\n\tprint(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11806": {"id": 11806, "code": "def main():\n    today = ['11', '16']\n    tomo = ['11', '17']\n    if today[0] == tomo[0]:\n        print(0)\n    else:\n        print(1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11807": {"id": 11807, "code": "def main():\n    today = ['11', '30']\n    tomo = ['12', '1']\n    if today[0] == tomo[0]:\n        print(0)\n    else:\n        print(1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11808": {"id": 11808, "code": "def main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    if D2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11809": {"id": 11809, "code": "def main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    if D2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11810": {"id": 11810, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11811": {"id": 11811, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11812": {"id": 11812, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif (M1 != M2 and M2>M1) or M2 == 1 and M2<M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11813": {"id": 11813, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif (M1 != M2 and M2>M1) or M2 == 1 and M2<M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11814": {"id": 11814, "code": "md1 = [11, 16]\nmd2 = [11, 17]\nif md1[0]==md2[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11815": {"id": 11815, "code": "md1 = [11, 30]\nmd2 = [12, 1]\nif md1[0]==md2[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11816": {"id": 11816, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(int(m1 + 1 == m2 and d2 == 1))", "coverage": [">", ">", ">"]}, "11817": {"id": 11817, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(int(m1 + 1 == m2 and d2 == 1))", "coverage": [">", ">", ">"]}, "11818": {"id": 11818, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D1 != D2 - 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11819": {"id": 11819, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D1 != D2 - 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11820": {"id": 11820, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2: print(0)\nelse: print(1)", "coverage": [">", ">", ">", "!"]}, "11821": {"id": 11821, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2: print(0)\nelse: print(1)", "coverage": [">", ">", ">", ">"]}, "11822": {"id": 11822, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nif(M1 != M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">"]}, "11823": {"id": 11823, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nif(M1 != M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", "!"]}, "11824": {"id": 11824, "code": "a = 11;b = 16\nc = 11;d = 17\nif a + 1 == c:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11825": {"id": 11825, "code": "a = 11;b = 30\nc = 12;d = 1\nif a + 1 == c:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11826": {"id": 11826, "code": "m = \"11\";d = \"16\"\nmm = \"11\";dd = \"17\"\nprint('0' if m==mm else '1')", "coverage": [">", ">", ">"]}, "11827": {"id": 11827, "code": "m = \"11\";d = \"30\"\nmm = \"12\";dd = \"1\"\nprint('0' if m==mm else '1')", "coverage": [">", ">", ">"]}, "11828": {"id": 11828, "code": "x = 11;y = 16\ny = 17\nif y==1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11829": {"id": 11829, "code": "x = 11;y = 30\nx = 12;y = 1\nif y==1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11830": {"id": 11830, "code": "m1 = 11\nm2 = 11\nif m1 < m2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11831": {"id": 11831, "code": "m1 = 11\nm2 = 12\nif m1 < m2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11832": {"id": 11832, "code": "a = 11\nb = 11\nif a==b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11833": {"id": 11833, "code": "a = 11\nb = 12\nif a==b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11834": {"id": 11834, "code": "def solve():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m1 != m2:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11835": {"id": 11835, "code": "def solve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m1 != m2:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11836": {"id": 11836, "code": "a = 11;b = 16\nc = 11;d = 17\nif a + 1 == c and d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11837": {"id": 11837, "code": "a = 11;b = 30\nc = 12;d = 1\nif a + 1 == c and d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11838": {"id": 11838, "code": "b = \"11 16\"\na = \"11 17\"\nprint(int(a[-2:]==' 1'))", "coverage": [">", ">", ">"]}, "11839": {"id": 11839, "code": "b = \"11 30\"\na = \"12 1\"\nprint(int(a[-2:]==' 1'))", "coverage": [">", ">", ">"]}, "11840": {"id": 11840, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nif d_2!=d_1+1:\n\tprint(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11841": {"id": 11841, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif d_2!=d_1+1:\n\tprint(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11842": {"id": 11842, "code": "MD1 = [11, 16]\nMD2 = [11, 17]\nif MD1[0] == MD2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11843": {"id": 11843, "code": "MD1 = [11, 30]\nMD2 = [12, 1]\nif MD1[0] == MD2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11844": {"id": 11844, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nif M1 == M2 :\n    print(0)\nelse :\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11845": {"id": 11845, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nif M1 == M2 :\n    print(0)\nelse :\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11846": {"id": 11846, "code": "A = 11;B = 16\nC = 11;D = 17\nif D == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11847": {"id": 11847, "code": "A = 11;B = 30\nC = 12;D = 1\nif D == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11848": {"id": 11848, "code": "a = 11\nc = 11;d = 17\nif a != c and d == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11849": {"id": 11849, "code": "a = 11\nc = 12;d = 1\nif a != c and d == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11850": {"id": 11850, "code": "s1 = ['11', '16']\ns2 = ['11', '17']\nif s1[0] == s2[0]:\n    print(\"0\")\nif s1[0] != s2[0] and int(s2[1])== 1:\n    print(\"1\")", "coverage": [">", ">", ">", ">", ">", "!"]}, "11851": {"id": 11851, "code": "s1 = ['11', '30']\ns2 = ['12', '1']\nif s1[0] == s2[0]:\n    print(\"0\")\nif s1[0] != s2[0] and int(s2[1])== 1:\n    print(\"1\")", "coverage": [">", ">", ">", "!", ">", ">"]}, "11852": {"id": 11852, "code": "M1 = 11\nM2 = 11\nans = 1 if M1 != M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11853": {"id": 11853, "code": "M1 = 11\nM2 = 12\nans = 1 if M1 != M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11854": {"id": 11854, "code": "month1 = 11;day1 = 16\nmonth2 = 11;day2 = 17\nif day1 > day2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11855": {"id": 11855, "code": "month1 = 11;day1 = 30\nmonth2 = 12;day2 = 1\nif day1 > day2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11856": {"id": 11856, "code": "n = 11;m = 16\nx = 11;y = 17\nif n!=x:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11857": {"id": 11857, "code": "n = 11;m = 30\nx = 12;y = 1\nif n!=x:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11858": {"id": 11858, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11859": {"id": 11859, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11860": {"id": 11860, "code": "m = 11;d = 16\nn = 11;e = 17\nprint(int(e == 1))", "coverage": [">", ">", ">"]}, "11861": {"id": 11861, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(int(e == 1))", "coverage": [">", ">", ">"]}, "11862": {"id": 11862, "code": "a = 11;b = 16\nc = 11;d = 17\nif a == 12:\n  if c == 1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if c == a + 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "11863": {"id": 11863, "code": "a = 11;b = 30\nc = 12;d = 1\nif a == 12:\n  if c == 1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if c == a + 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "11864": {"id": 11864, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11865": {"id": 11865, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11866": {"id": 11866, "code": "from collections import Counter, defaultdict\na = 11;b = 16\nc = 11;d = 17\nprint(\"1\" if c == a+1 else \"0\")", "coverage": [">", ">", ">", ">"]}, "11867": {"id": 11867, "code": "from collections import Counter, defaultdict\na = 11;b = 30\nc = 12;d = 1\nprint(\"1\" if c == a+1 else \"0\")", "coverage": [">", ">", ">", ">"]}, "11868": {"id": 11868, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nprint(1 if a != c else 0)", "coverage": [">", ">", ">"]}, "11869": {"id": 11869, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nprint(1 if a != c else 0)", "coverage": [">", ">", ">"]}, "11870": {"id": 11870, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1<M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", ">"]}, "11871": {"id": 11871, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1<M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", "!"]}, "11872": {"id": 11872, "code": "a = 11;b = 16\nA = 11;B = 17\nprint(\"1\" if A != a else \"0\")", "coverage": [">", ">", ">"]}, "11873": {"id": 11873, "code": "a = 11;b = 30\nA = 12;B = 1\nprint(\"1\" if A != a else \"0\")", "coverage": [">", ">", ">"]}, "11874": {"id": 11874, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11875": {"id": 11875, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11876": {"id": 11876, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nM1 = int(M1)\nM2 = int(M2)\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11877": {"id": 11877, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nM1 = int(M1)\nM2 = int(M2)\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11878": {"id": 11878, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11879": {"id": 11879, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11880": {"id": 11880, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(int(M1!=M2))", "coverage": [">", ">", ">"]}, "11881": {"id": 11881, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(int(M1!=M2))", "coverage": [">", ">", ">"]}, "11882": {"id": 11882, "code": "a = \"11 16\"\nb = \"11 17\"\nmonth_a = int(a.split(\" \")[0])\nmonth_b = int(b.split(\" \")[0])\nif month_a != month_b:\n\tval = 1\nelse:\n\tval = 0\nprint(val)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11883": {"id": 11883, "code": "a = \"11 30\"\nb = \"12 1\"\nmonth_a = int(a.split(\" \")[0])\nmonth_b = int(b.split(\" \")[0])\nif month_a != month_b:\n\tval = 1\nelse:\n\tval = 0\nprint(val)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11884": {"id": 11884, "code": "lst = [11, 16]\nlst2 = [11, 17]\nif lst2[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11885": {"id": 11885, "code": "lst = [11, 30]\nlst2 = [12, 1]\nif lst2[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11888": {"id": 11888, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(0 if m1==m2 else 1)", "coverage": [">", ">", ">"]}, "11889": {"id": 11889, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(0 if m1==m2 else 1)", "coverage": [">", ">", ">"]}, "11890": {"id": 11890, "code": "s1 = [11, 16]\ns2 = [11, 17]\nif int(s1[0])+1 == int(s2[0]):\n         print(1)\nelse:\n         print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11891": {"id": 11891, "code": "s1 = [11, 30]\ns2 = [12, 1]\nif int(s1[0])+1 == int(s2[0]):\n         print(1)\nelse:\n         print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11892": {"id": 11892, "code": "a = []\nb = []\na = ['11', '16']\nb = ['11', '17']\nif a[0] == b[0]:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11893": {"id": 11893, "code": "a = []\nb = []\na = ['11', '30']\nb = ['12', '1']\nif a[0] == b[0]:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11894": {"id": 11894, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11895": {"id": 11895, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11896": {"id": 11896, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(\"1\" if d1 > d2 else \"0\")", "coverage": [">", ">", ">"]}, "11897": {"id": 11897, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(\"1\" if d1 > d2 else \"0\")", "coverage": [">", ">", ">"]}, "11898": {"id": 11898, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(['0','1'][m1<m2])", "coverage": [">", ">", ">"]}, "11899": {"id": 11899, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(['0','1'][m1<m2])", "coverage": [">", ">", ">"]}, "11900": {"id": 11900, "code": "m = 11;d = 16\ns = 11;t = 17\nif t==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11901": {"id": 11901, "code": "m = 11;d = 30\ns = 12;t = 1\nif t==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11902": {"id": 11902, "code": "str1 = ['11', '16']\nstr2 = ['11', '17']\nm1 = str1[0]\nd1 = str1[1]\nm2 = str2[0]\nd2 = str2[1]\nif m1 == m2:\n    return_value = '0'\nelse:\n    return_value = '1'\nprint(return_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11903": {"id": 11903, "code": "str1 = ['11', '30']\nstr2 = ['12', '1']\nm1 = str1[0]\nd1 = str1[1]\nm2 = str2[0]\nd2 = str2[1]\nif m1 == m2:\n    return_value = '0'\nelse:\n    return_value = '1'\nprint(return_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11904": {"id": 11904, "code": "m = 11\nn = 11\nprint(int(m!=n))", "coverage": [">", ">", ">"]}, "11905": {"id": 11905, "code": "m = 11\nn = 12\nprint(int(m!=n))", "coverage": [">", ">", ">"]}, "11906": {"id": 11906, "code": "import sys\ninput = sys.stdin.readline\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11907": {"id": 11907, "code": "import sys\ninput = sys.stdin.readline\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11910": {"id": 11910, "code": "M = 11;D = 16\nm = 11;d = 17\nif M + 1 == m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11911": {"id": 11911, "code": "M = 11;D = 30\nm = 12;d = 1\nif M + 1 == m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11912": {"id": 11912, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11913": {"id": 11913, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11914": {"id": 11914, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11915": {"id": 11915, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11916": {"id": 11916, "code": "def resolve():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m2==m1+1 and d2==1:\n        print('1')\n    elif m1==12 and m2==1 and d2==1:\n        print('1')\n    else:\n        print('0')\nresolve()", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "11917": {"id": 11917, "code": "def resolve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m2==m1+1 and d2==1:\n        print('1')\n    elif m1==12 and m2==1 and d2==1:\n        print('1')\n    else:\n        print('0')\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "11918": {"id": 11918, "code": "m1 = \"11\"\nm2 = \"11\"\nans = 0\nif m1 != m2:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "11919": {"id": 11919, "code": "m1 = \"11\"\nm2 = \"12\"\nans = 0\nif m1 != m2:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11920": {"id": 11920, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1 if M1 != M2 else 0)", "coverage": [">", ">", ">"]}, "11921": {"id": 11921, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1 if M1 != M2 else 0)", "coverage": [">", ">", ">"]}, "11922": {"id": 11922, "code": "m = 11;d = 16\nn = 11;e = 17\nprint(1 if m!=n else 0)", "coverage": [">", ">", ">"]}, "11923": {"id": 11923, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(1 if m!=n else 0)", "coverage": [">", ">", ">"]}, "11924": {"id": 11924, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nl=[31,28,31,30,31,30,31,31,30,31,30,31]\nif D2==1:\n print(\"1\")\nelse:\n print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11925": {"id": 11925, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nl=[31,28,31,30,31,30,31,31,30,31,30,31]\nif D2==1:\n print(\"1\")\nelse:\n print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11926": {"id": 11926, "code": "m = \"11\";d = \"16\"\nM = \"11\";D = \"17\"\nif D == '1':\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11927": {"id": 11927, "code": "m = \"11\";d = \"30\"\nM = \"12\";D = \"1\"\nif D == '1':\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11928": {"id": 11928, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nif a==c:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11929": {"id": 11929, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nif a==c:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11930": {"id": 11930, "code": "l1 = [11, 16]\nl2 = [11, 17]\nif l1[0] == l2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11931": {"id": 11931, "code": "l1 = [11, 30]\nl2 = [12, 1]\nif l1[0] == l2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11932": {"id": 11932, "code": "a = 11;b = 16\nc = 11;d = 17\nif a != c:\n    print(1)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11933": {"id": 11933, "code": "a = 11;b = 30\nc = 12;d = 1\nif a != c:\n    print(1)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11934": {"id": 11934, "code": "day0 = 16\nday1 = 17\nif day0 > day1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11935": {"id": 11935, "code": "day0 = 30\nday1 = 1\nif day0 > day1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11936": {"id": 11936, "code": "def main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    print(int(M1 != M2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "11937": {"id": 11937, "code": "def main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    print(int(M1 != M2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "11938": {"id": 11938, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 + 1 == m2 and d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11939": {"id": 11939, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 + 1 == m2 and d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11940": {"id": 11940, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "11941": {"id": 11941, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "11942": {"id": 11942, "code": "md = [11, 16]\nmmd = [11, 17]\nif md[0] != mmd[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11943": {"id": 11943, "code": "md = [11, 30]\nmmd = [12, 1]\nif md[0] != mmd[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11944": {"id": 11944, "code": "m1 = [11, 16]\nm2 = [11, 17]\nif m1[0]!=m2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11945": {"id": 11945, "code": "m1 = [11, 30]\nm2 = [12, 1]\nif m1[0]!=m2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11946": {"id": 11946, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11947": {"id": 11947, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11950": {"id": 11950, "code": "l1 = [11, 16]\nl2 = [11, 17]\nif l2[1] == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11951": {"id": 11951, "code": "l1 = [11, 30]\nl2 = [12, 1]\nif l2[1] == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11952": {"id": 11952, "code": "day1 = ['11', '16']\nday2 = ['11', '17']\nif int(day2[1])==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11953": {"id": 11953, "code": "day1 = ['11', '30']\nday2 = ['12', '1']\nif int(day2[1])==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11954": {"id": 11954, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nmonth = 12\nif (m_1 % month + 1) == m_2 and d_2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11955": {"id": 11955, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nmonth = 12\nif (m_1 % month + 1) == m_2 and d_2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11956": {"id": 11956, "code": "m = 11;d = 16\nm2 = 11;d2 = 17\nprint(1 if m != m2 else 0)", "coverage": [">", ">", ">"]}, "11957": {"id": 11957, "code": "m = 11;d = 30\nm2 = 12;d2 = 1\nprint(1 if m != m2 else 0)", "coverage": [">", ">", ">"]}, "11958": {"id": 11958, "code": "a = ['11', '16']\nb = ['11', '17']\nprint(int(b[1]==\"1\"))", "coverage": [">", ">", ">"]}, "11959": {"id": 11959, "code": "a = ['11', '30']\nb = ['12', '1']\nprint(int(b[1]==\"1\"))", "coverage": [">", ">", ">"]}, "11960": {"id": 11960, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n    print (0)\nelse:\n    print (1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11961": {"id": 11961, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n    print (0)\nelse:\n    print (1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11962": {"id": 11962, "code": "M_1 = 11;D_1 = 16\nM_2 = 11;D_2 = 17\nif (M_1 != M_2):\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11963": {"id": 11963, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nif (M_1 != M_2):\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11964": {"id": 11964, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if d2 == 1 else '0')", "coverage": [">", ">", ">"]}, "11965": {"id": 11965, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if d2 == 1 else '0')", "coverage": [">", ">", ">"]}, "11966": {"id": 11966, "code": "a = 11;b = 16\nc = 11;d = 17\nif ((a+1)==c or (a==12 and c==1)):\n  if d ==1:\n    print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "11967": {"id": 11967, "code": "a = 11;b = 30\nc = 12;d = 1\nif ((a+1)==c or (a==12 and c==1)):\n  if d ==1:\n    print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11968": {"id": 11968, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11969": {"id": 11969, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11970": {"id": 11970, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 !=m2:\n  print(1)\nelif m1==m2:\n  print(0)", "coverage": [">", ">", ">", "!", ">", ">"]}, "11971": {"id": 11971, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 !=m2:\n  print(1)\nelif m1==m2:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11972": {"id": 11972, "code": "m1 = \"11\"\nm2 = \"11\"\nprint(int(m1 != m2))", "coverage": [">", ">", ">"]}, "11973": {"id": 11973, "code": "m1 = \"11\"\nm2 = \"12\"\nprint(int(m1 != m2))", "coverage": [">", ">", ">"]}, "11974": {"id": 11974, "code": "n = 11;m = 16\nn1 = 11;m1 = 17\nif n==n1:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11975": {"id": 11975, "code": "n = 11;m = 30\nn1 = 12;m1 = 1\nif n==n1:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11976": {"id": 11976, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1 if M2 == M1 + 1 and D2 == 1 else 0)", "coverage": [">", ">", ">"]}, "11977": {"id": 11977, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1 if M2 == M1 + 1 and D2 == 1 else 0)", "coverage": [">", ">", ">"]}, "11978": {"id": 11978, "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m1 != m2:\n        print('1')\n    else:\n        print('0')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11979": {"id": 11979, "code": "def main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m1 != m2:\n        print('1')\n    else:\n        print('0')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11980": {"id": 11980, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2==1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11981": {"id": 11981, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2==1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11982": {"id": 11982, "code": "D1 = 16\nD2 = 17\nprint(0 if D1 < D2 else 1)", "coverage": [">", ">", ">"]}, "11983": {"id": 11983, "code": "D1 = 30\nD2 = 1\nprint(0 if D1 < D2 else 1)", "coverage": [">", ">", ">"]}, "11984": {"id": 11984, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "11985": {"id": 11985, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "11986": {"id": 11986, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint('0' if M1 == M2 else '1')", "coverage": [">", ">", ">"]}, "11987": {"id": 11987, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint('0' if M1 == M2 else '1')", "coverage": [">", ">", ">"]}, "11988": {"id": 11988, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nprint(1 if d2 == '1' else 0)", "coverage": [">", ">", ">"]}, "11989": {"id": 11989, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nprint(1 if d2 == '1' else 0)", "coverage": [">", ">", ">"]}, "11990": {"id": 11990, "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if d2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11991": {"id": 11991, "code": "def main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if d2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11992": {"id": 11992, "code": "month1 = 11;day1 = 16\nmonth2 = 11;day2 = 17\nif month1==month2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11993": {"id": 11993, "code": "month1 = 11;day1 = 30\nmonth2 = 12;day2 = 1\nif month1==month2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11994": {"id": 11994, "code": "a = 11;b = 16\nc = 11;d = 17\nprint([0,1][a==c-1])", "coverage": [">", ">", ">"]}, "11995": {"id": 11995, "code": "a = 11;b = 30\nc = 12;d = 1\nprint([0,1][a==c-1])", "coverage": [">", ">", ">"]}, "11996": {"id": 11996, "code": "a = 11;b = 16\nc = 11;d = 17\nif a == c:\n  print('0')\nelse:\n  print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11997": {"id": 11997, "code": "a = 11;b = 30\nc = 12;d = 1\nif a == c:\n  print('0')\nelse:\n  print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11998": {"id": 11998, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D1>D2 and M2>M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11999": {"id": 11999, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D1>D2 and M2>M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12000": {"id": 12000, "code": "a = ['11', '16']\nb = ['11', '17']\nif int(a[0])<int(b[0]):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12001": {"id": 12001, "code": "a = ['11', '30']\nb = ['12', '1']\nif int(a[0])<int(b[0]):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12002": {"id": 12002, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1==12 and M2==1 or M1+1==M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12003": {"id": 12003, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1==12 and M2==1 or M1+1==M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12004": {"id": 12004, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(0 if M1 == M2 else 1)", "coverage": [">", ">", ">"]}, "12005": {"id": 12005, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(0 if M1 == M2 else 1)", "coverage": [">", ">", ">"]}, "12006": {"id": 12006, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nans = 1\nif m1 == m2:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12007": {"id": 12007, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nans = 1\nif m1 == m2:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "12008": {"id": 12008, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m1+1)%13==m2:\n  if d2==1:\n    print(1)\n    exit()\nprint(0)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "12009": {"id": 12009, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12010": {"id": 12010, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12011": {"id": 12011, "code": "a = [11, 16]\nb = [11, 17]\nif a[0]!=b[0]:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12012": {"id": 12012, "code": "a = [11, 30]\nb = [12, 1]\nif a[0]!=b[0]:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12013": {"id": 12013, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == 12 and m2 == 1:\n\tprint(\"1\")\nelif m2 - m1 == 1:\n\tprint(\"1\")\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]}, "12014": {"id": 12014, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == 12 and m2 == 1:\n\tprint(\"1\")\nelif m2 - m1 == 1:\n\tprint(\"1\")\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "12015": {"id": 12015, "code": "M = 11;D = 16\nN = 11;A = 17\nif N>M:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12016": {"id": 12016, "code": "M = 11;D = 30\nN = 12;A = 1\nif N>M:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12017": {"id": 12017, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(['0','1'][M1!=M2])", "coverage": [">", ">", ">"]}, "12018": {"id": 12018, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(['0','1'][M1!=M2])", "coverage": [">", ">", ">"]}, "12019": {"id": 12019, "code": "m_one = [11, 16]\nm_two = [11, 17]\nprint(1 if m_one[1] > m_two[1] else 0)", "coverage": [">", ">", ">"]}, "12020": {"id": 12020, "code": "m_one = [11, 30]\nm_two = [12, 1]\nprint(1 if m_one[1] > m_two[1] else 0)", "coverage": [">", ">", ">"]}, "12021": {"id": 12021, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    if M1 == M2:\n        ans = 0\n    else:\n        ans = 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12022": {"id": 12022, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    if M1 == M2:\n        ans = 0\n    else:\n        ans = 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12023": {"id": 12023, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(\"0\" if a == c else \"1\")", "coverage": [">", ">", ">"]}, "12024": {"id": 12024, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(\"0\" if a == c else \"1\")", "coverage": [">", ">", ">"]}, "12025": {"id": 12025, "code": "md1 = [11, 16]\nmd2 = [11, 17]\nprint(1 if md1[0]!=md2[0] else 0)", "coverage": [">", ">", ">"]}, "12026": {"id": 12026, "code": "md1 = [11, 30]\nmd2 = [12, 1]\nprint(1 if md1[0]!=md2[0] else 0)", "coverage": [">", ">", ">"]}, "12027": {"id": 12027, "code": "def p_a():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    print(0 if m1 == m2 else 1)\np_a()", "coverage": [">", ">", ">", ">", ">"]}, "12028": {"id": 12028, "code": "def p_a():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(0 if m1 == m2 else 1)\np_a()", "coverage": [">", ">", ">", ">", ">"]}, "12029": {"id": 12029, "code": "def solve(m1, d1, m2, d2):\n    return int(m1 != m2)\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(solve(m1, d1, m2, d2))", "coverage": [">", ">", ">", ">", ">"]}, "12030": {"id": 12030, "code": "def solve(m1, d1, m2, d2):\n    return int(m1 != m2)\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(solve(m1, d1, m2, d2))", "coverage": [">", ">", ">", ">", ">"]}, "12031": {"id": 12031, "code": "m1 = \"11\"\nm2 = \"11\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12032": {"id": 12032, "code": "m1 = \"11\"\nm2 = \"12\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12033": {"id": 12033, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(c-a)", "coverage": [">", ">", ">"]}, "12034": {"id": 12034, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(c-a)", "coverage": [">", ">", ">"]}, "12035": {"id": 12035, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 in [1,3,5,7,8,10,12] and d1==31:\n  print(1)\nelif m1 in [4,6,9,11] and d1==30:\n  print(1)\nelif m1==2 and d1 in [28,29]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12036": {"id": 12036, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 in [1,3,5,7,8,10,12] and d1==31:\n  print(1)\nelif m1 in [4,6,9,11] and d1==30:\n  print(1)\nelif m1==2 and d1 in [28,29]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12037": {"id": 12037, "code": "input1 = [11, 16]\ninput2 = [11, 17]\nm1 = input1[0]\nd1 = input1[1]\nm2 = input2[0]\nd2 = input2[1]\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12038": {"id": 12038, "code": "input1 = [11, 30]\ninput2 = [12, 1]\nm1 = input1[0]\nd1 = input1[1]\nm2 = input2[0]\nd2 = input2[1]\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12039": {"id": 12039, "code": "N = 11;M = 16\nans = 0\nM = 17\nif M==1:\n  ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "12040": {"id": 12040, "code": "N = 11;M = 30\nans = 0\nN = 12;M = 1\nif M==1:\n  ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12041": {"id": 12041, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nans = 1 if M1 + 1 == M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12042": {"id": 12042, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nans = 1 if M1 + 1 == M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12043": {"id": 12043, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "12044": {"id": 12044, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "12045": {"id": 12045, "code": "def resolve():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m2==m1:\n        print('0')\n    else:\n        print('1')\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12046": {"id": 12046, "code": "def resolve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m2==m1:\n        print('0')\n    else:\n        print('1')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "12047": {"id": 12047, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m2 != m1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12048": {"id": 12048, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m2 != m1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12049": {"id": 12049, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(1 if c != a else 0)", "coverage": [">", ">", ">"]}, "12050": {"id": 12050, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(1 if c != a else 0)", "coverage": [">", ">", ">"]}, "12051": {"id": 12051, "code": "import datetime\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m2 - m1 == 1):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12052": {"id": 12052, "code": "import datetime\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif (m2 - m1 == 1):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12053": {"id": 12053, "code": "def mainFunc():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    ans = '1' if m1 != m2 else '0'\n    print(ans)\nmainFunc()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12054": {"id": 12054, "code": "def mainFunc():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    ans = '1' if m1 != m2 else '0'\n    print(ans)\nmainFunc()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12055": {"id": 12055, "code": "A = 11;B = 16\nC = 11;D = 17\nif C - A == 1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12056": {"id": 12056, "code": "A = 11;B = 30\nC = 12;D = 1\nif C - A == 1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12057": {"id": 12057, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(0 if a == c else 1)", "coverage": [">", ">", ">"]}, "12058": {"id": 12058, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(0 if a == c else 1)", "coverage": [">", ">", ">"]}, "12059": {"id": 12059, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint((m1<m2 and d1>d2)+0)", "coverage": [">", ">", ">"]}, "12060": {"id": 12060, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint((m1<m2 and d1>d2)+0)", "coverage": [">", ">", ">"]}, "12061": {"id": 12061, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M2==M1+1 and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12062": {"id": 12062, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M2==M1+1 and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12063": {"id": 12063, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12064": {"id": 12064, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12065": {"id": 12065, "code": "M1 = 11\nM2 = 11\nif M1 == M2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12066": {"id": 12066, "code": "M1 = 11\nM2 = 12\nif M1 == M2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12067": {"id": 12067, "code": "M_1 = 11;D_1 = 16\nM_2 = 11;D_2 = 17\nprint(0 if M_1 == M_2 else 1)", "coverage": [">", ">", ">"]}, "12068": {"id": 12068, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nprint(0 if M_1 == M_2 else 1)", "coverage": [">", ">", ">"]}, "12069": {"id": 12069, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1!=M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", ">"]}, "12070": {"id": 12070, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1!=M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", "!"]}, "12073": {"id": 12073, "code": "l=[31,28,31,30,31,30,31,31,30,31,30,31]\ns = [11, 16]\nd = [11, 17]\nx=l[s[0]-1]\nif(x!=s[1]):\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12074": {"id": 12074, "code": "l=[31,28,31,30,31,30,31,31,30,31,30,31]\ns = [11, 30]\nd = [12, 1]\nx=l[s[0]-1]\nif(x!=s[1]):\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12075": {"id": 12075, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nok = False\nif d1+1 != d2:\n    ok = True\nif ok:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "12076": {"id": 12076, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nok = False\nif d1+1 != d2:\n    ok = True\nif ok:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12077": {"id": 12077, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nend = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nif d1 == end[m1-1]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12078": {"id": 12078, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nend = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nif d1 == end[m1-1]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12079": {"id": 12079, "code": "M = 11;D = 16\nm = 11;d = 17\nif M != m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12080": {"id": 12080, "code": "M = 11;D = 30\nm = 12;d = 1\nif M != m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12081": {"id": 12081, "code": "m = 11;d = 16\nm2 = 11;d2 = 17\nif(m!=m2):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12082": {"id": 12082, "code": "m = 11;d = 30\nm2 = 12;d2 = 1\nif(m!=m2):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12083": {"id": 12083, "code": "m0 = 11;d0 = 16\nm1 = 11;d1 = 17\nprint('0') if m0 == m1 else print('1')", "coverage": [">", ">", ">"]}, "12084": {"id": 12084, "code": "m0 = 11;d0 = 30\nm1 = 12;d1 = 1\nprint('0') if m0 == m1 else print('1')", "coverage": [">", ">", ">"]}, "12085": {"id": 12085, "code": "x1 = 11;y1 = 16\nx2 = 11;y2 = 17\nif x1 == x2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12086": {"id": 12086, "code": "x1 = 11;y1 = 30\nx2 = 12;y2 = 1\nif x1 == x2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12087": {"id": 12087, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1 != m2:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12088": {"id": 12088, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1 != m2:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12089": {"id": 12089, "code": "a = ['11', '16']\nm1 = int(a[0])\nb = ['11', '17']\nm2 = int(b[0])\nif m2 == m1+1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12090": {"id": 12090, "code": "a = ['11', '30']\nm1 = int(a[0])\nb = ['12', '1']\nm2 = int(b[0])\nif m2 == m1+1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12091": {"id": 12091, "code": "a = 11;b = 16\nc = 11;d = 17\nif a != c:\n    ans = 1\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12092": {"id": 12092, "code": "a = 11;b = 30\nc = 12;d = 1\nif a != c:\n    ans = 1\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12095": {"id": 12095, "code": "m1 = 11\nm2 = 11\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12096": {"id": 12096, "code": "m1 = 11\nm2 = 12\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12097": {"id": 12097, "code": "a = [11, 16]\nb = [11, 17]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12098": {"id": 12098, "code": "a = [11, 30]\nb = [12, 1]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12099": {"id": 12099, "code": "m = ['11', '16']\nM = ['11', '17']\nif int(M[0]) - int(m[0]) == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12100": {"id": 12100, "code": "m = ['11', '30']\nM = ['12', '1']\nif int(M[0]) - int(m[0]) == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12101": {"id": 12101, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2 and d2==1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12102": {"id": 12102, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2 and d2==1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12103": {"id": 12103, "code": "def main(M_1: int, D_1: int, M_2: int, D_2: int):\n    print(M_2 - M_1)\nif __name__ == \"__main__\":\n    M_1 = 11;D_1 = 16\n    M_2 = 11;D_2 = 17\n    main(M_1, D_1, M_2, D_2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12104": {"id": 12104, "code": "def main(M_1: int, D_1: int, M_2: int, D_2: int):\n    print(M_2 - M_1)\nif __name__ == \"__main__\":\n    M_1 = 11;D_1 = 30\n    M_2 = 12;D_2 = 1\n    main(M_1, D_1, M_2, D_2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12105": {"id": 12105, "code": "a = ['11', '16']\nb = ['11', '17']\nif a[0] != b[0]:\n\tprint(\"1\")\nelse:\n\tprint(\"0\") ", "coverage": [">", ">", ">", "!", "!", ">"]}, "12106": {"id": 12106, "code": "a = ['11', '30']\nb = ['12', '1']\nif a[0] != b[0]:\n\tprint(\"1\")\nelse:\n\tprint(\"0\") ", "coverage": [">", ">", ">", ">", "!", "!"]}, "12109": {"id": 12109, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(int(a!=c))", "coverage": [">", ">", ">"]}, "12110": {"id": 12110, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(int(a!=c))", "coverage": [">", ">", ">"]}, "12111": {"id": 12111, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nif m_1 < m_2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12112": {"id": 12112, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif m_1 < m_2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12113": {"id": 12113, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12114": {"id": 12114, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12115": {"id": 12115, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint (1) if d2 == 1 else print (0)", "coverage": [">", ">", ">"]}, "12116": {"id": 12116, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint (1) if d2 == 1 else print (0)", "coverage": [">", ">", ">"]}, "12119": {"id": 12119, "code": "in1 = ['11', '16']\nin2 = ['11', '17']\nif int(in1[0])==int(in2[0]):\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12120": {"id": 12120, "code": "in1 = ['11', '30']\nin2 = ['12', '1']\nif int(in1[0])==int(in2[0]):\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12121": {"id": 12121, "code": "md1 = \"11 16\"\nmd2 = \"11 17\"\nm1st,d1st=md1.split()\nm2st,d2st=md2.split()\nm1=int(m1st)\nd1=int(d1st)\nm2=int(m2st)\nd2=int(d2st)\nif d2==1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12122": {"id": 12122, "code": "md1 = \"11 30\"\nmd2 = \"12 1\"\nm1st,d1st=md1.split()\nm2st,d2st=md2.split()\nm1=int(m1st)\nd1=int(d1st)\nm2=int(m2st)\nd2=int(d2st)\nif d2==1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12123": {"id": 12123, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d1 == 31:\n    print(\"1\")\nelif d1 == 30 and d2 == 1:\n    print(\"1\")\nelif d1 == 28 and m1 == 2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12124": {"id": 12124, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d1 == 31:\n    print(\"1\")\nelif d1 == 30 and d2 == 1:\n    print(\"1\")\nelif d1 == 28 and m1 == 2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12125": {"id": 12125, "code": "m = 11;d = 16\nn = 11;e = 17\nprint(int(n >= 2 and e == 1))", "coverage": [">", ">", ">"]}, "12126": {"id": 12126, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(int(n >= 2 and e == 1))", "coverage": [">", ">", ">"]}, "12127": {"id": 12127, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    a = 11;b = 16\n    c = 11;d = 17\n    if d==1:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12128": {"id": 12128, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    a = 11;b = 30\n    c = 12;d = 1\n    if d==1:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12129": {"id": 12129, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m1!=m2 else 0)", "coverage": [">", ">", ">"]}, "12130": {"id": 12130, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m1!=m2 else 0)", "coverage": [">", ">", ">"]}, "12131": {"id": 12131, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nb=int(b)\nd=int(d)\nif d-b==1:\n    print(\"0\")\nelse:\n    print(\"1\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12132": {"id": 12132, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nb=int(b)\nd=int(d)\nif d-b==1:\n    print(\"0\")\nelse:\n    print(\"1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12133": {"id": 12133, "code": "n = 11;m = 16\ns = 11;t = 17\nprint(s-n)", "coverage": [">", ">", ">"]}, "12134": {"id": 12134, "code": "n = 11;m = 30\ns = 12;t = 1\nprint(s-n)", "coverage": [">", ">", ">"]}, "12135": {"id": 12135, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m1 != m2 else 0)", "coverage": [">", ">", ">"]}, "12136": {"id": 12136, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m1 != m2 else 0)", "coverage": [">", ">", ">"]}, "12137": {"id": 12137, "code": "n_1 = [11, 16]\nn_2 = [11, 17]\nif n_1[0] != n_2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12138": {"id": 12138, "code": "n_1 = [11, 30]\nn_2 = [12, 1]\nif n_1[0] != n_2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12139": {"id": 12139, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12140": {"id": 12140, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12141": {"id": 12141, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif (M1==M2-1 or M1-M2==11) and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12142": {"id": 12142, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif (M1==M2-1 or M1-M2==11) and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12143": {"id": 12143, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n    print('0')\nelse:print('1')", "coverage": [">", ">", ">", ">", "!"]}, "12144": {"id": 12144, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n    print('0')\nelse:print('1')", "coverage": [">", ">", ">", "!", ">"]}, "12145": {"id": 12145, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1==m2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12146": {"id": 12146, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1==m2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12147": {"id": 12147, "code": "x = 11;y = 16\na = 11;b = 17\nif y+1 == b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12148": {"id": 12148, "code": "x = 11;y = 30\na = 12;b = 1\nif y+1 == b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12149": {"id": 12149, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m2 - m1) % 12 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12150": {"id": 12150, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif (m2 - m1) % 12 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12151": {"id": 12151, "code": "import sys\nstdin = sys.stdin\ndef ns(): return \"11 16\".rstrip()\ndef ni(): return int(ns())\ndef na(): return list(map(int, \"11 17\".split()))\ndef main():\n    a, _ = na()\n    b, _ = na()\n    print(b-a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12152": {"id": 12152, "code": "import sys\nstdin = sys.stdin\ndef ns(): return \"11 30\".rstrip()\ndef ni(): return int(ns())\ndef na(): return list(map(int, \"12 1\".split()))\ndef main():\n    a, _ = na()\n    b, _ = na()\n    print(b-a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12153": {"id": 12153, "code": "N = 11;M = 16\nn = 11;m = 17\nif N==n:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12154": {"id": 12154, "code": "N = 11;M = 30\nn = 12;m = 1\nif N==n:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12155": {"id": 12155, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nif d_2 == 1:\n  ans = '1'\nelse:\n  ans = '0'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12156": {"id": 12156, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif d_2 == 1:\n  ans = '1'\nelse:\n  ans = '0'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12157": {"id": 12157, "code": "prev = \"11\"\nnext = \"11\"\nif prev != next:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12158": {"id": 12158, "code": "prev = \"11\"\nnext = \"12\"\nif prev != next:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12159": {"id": 12159, "code": "targetDay = ['11', '16']\nnextDay = ['11', '17']\nif targetDay[0] != nextDay[0]:\n\tprint(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12160": {"id": 12160, "code": "targetDay = ['11', '30']\nnextDay = ['12', '1']\nif targetDay[0] != nextDay[0]:\n\tprint(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12161": {"id": 12161, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 != 12:\n  if m2 == m1+1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if m2 == 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "12162": {"id": 12162, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 != 12:\n  if m2 == m1+1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if m2 == 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "12163": {"id": 12163, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12164": {"id": 12164, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12165": {"id": 12165, "code": "M = 11;D = 16\nm = 11;d = 17\nif m-M == 1 or m-M == -11:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12166": {"id": 12166, "code": "M = 11;D = 30\nm = 12;d = 1\nif m-M == 1 or m-M == -11:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12167": {"id": 12167, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(0 if D1 + 1 == D2 else 1)", "coverage": [">", ">", ">"]}, "12168": {"id": 12168, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(0 if D1 + 1 == D2 else 1)", "coverage": [">", ">", ">"]}, "12169": {"id": 12169, "code": "a = [11, 16]\nb = [11, 17]\nou=b[0]-a[0]\nif ou == 1:\n  print(1)\nelif ou==0:\n  print(0)\nelif ou==1-12:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12170": {"id": 12170, "code": "a = [11, 30]\nb = [12, 1]\nou=b[0]-a[0]\nif ou == 1:\n  print(1)\nelif ou==0:\n  print(0)\nelif ou==1-12:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12171": {"id": 12171, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nif a == c:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12172": {"id": 12172, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nif a == c:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12173": {"id": 12173, "code": "from sys import stdin\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12174": {"id": 12174, "code": "from sys import stdin\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12175": {"id": 12175, "code": "def main():\n  M1 = 11;D1 = 16\n  M2 = 11;D2 = 17\n  print(0) if M1 == M2 else print(1)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12176": {"id": 12176, "code": "def main():\n  M1 = 11;D1 = 30\n  M2 = 12;D2 = 1\n  print(0) if M1 == M2 else print(1)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12177": {"id": 12177, "code": "_ =  \"11 16\"\nd2 = 17\nif d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12178": {"id": 12178, "code": "_ =  \"11 30\"\nd2 = 1\nif d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12179": {"id": 12179, "code": "L = [11, 16]\nK = [11, 17]\nif L[0]==K[0]:\n\tprint(0)\nelse:\n\tprint(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12180": {"id": 12180, "code": "L = [11, 30]\nK = [12, 1]\nif L[0]==K[0]:\n\tprint(0)\nelse:\n\tprint(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12183": {"id": 12183, "code": "M_1 = 11;D_1 = 16\nM_2 = 11;D_2 = 17\nif M_1 != M_2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12184": {"id": 12184, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nif M_1 != M_2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12187": {"id": 12187, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 in [1, 3, 5, 7, 8, 10, 12]:\n    if D1 == 31:\n        print(1)\n    else:\n        print(0)\nelif M1 in [4, 6, 9, 11]:\n    if D1 == 30:\n        print(1)\n    else:\n        print(0)\nelif M1 == 2:\n    if D1 == 28:\n        print(1)\n    else:\n        print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "12188": {"id": 12188, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 in [1, 3, 5, 7, 8, 10, 12]:\n    if D1 == 31:\n        print(1)\n    else:\n        print(0)\nelif M1 in [4, 6, 9, 11]:\n    if D1 == 30:\n        print(1)\n    else:\n        print(0)\nelif M1 == 2:\n    if D1 == 28:\n        print(1)\n    else:\n        print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "12189": {"id": 12189, "code": "m = 11;d = 16\nmm = 11;dd = 17\nprint('01'[m<mm])", "coverage": [">", ">", ">"]}, "12190": {"id": 12190, "code": "m = 11;d = 30\nmm = 12;dd = 1\nprint('01'[m<mm])", "coverage": [">", ">", ">"]}, "12191": {"id": 12191, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12192": {"id": 12192, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12193": {"id": 12193, "code": "m = 11;d = 16\nmm = 11;dd = 17\nif m!=mm:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12194": {"id": 12194, "code": "m = 11;d = 30\nmm = 12;dd = 1\nif m!=mm:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12195": {"id": 12195, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif(M1+1==M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12196": {"id": 12196, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif(M1+1==M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">", ">", "!"]}, "12197": {"id": 12197, "code": "_, d = \"11 17\".split()\nprint('1' if d == '1' else '0')", "coverage": [">", ">"]}, "12198": {"id": 12198, "code": "_, d = \"12 1\".split()\nprint('1' if d == '1' else '0')", "coverage": [">", ">"]}, "12199": {"id": 12199, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 + 1 == m2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12200": {"id": 12200, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 + 1 == m2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12201": {"id": 12201, "code": "M = 11;D = 16\nMM = 11;DD = 17\nif D>DD:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12202": {"id": 12202, "code": "M = 11;D = 30\nMM = 12;DD = 1\nif D>DD:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12203": {"id": 12203, "code": "date1 = ['11', '16']\ndate2 = ['11', '17']\nif date1[0] != date2[0]:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12204": {"id": 12204, "code": "date1 = ['11', '30']\ndate2 = ['12', '1']\nif date1[0] != date2[0]:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12205": {"id": 12205, "code": "x = \"11 16\"\ny = \"11 17\"\nl = x.split()\nl2 = y.split()\nif l[0] != l2[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12206": {"id": 12206, "code": "x = \"11 30\"\ny = \"12 1\"\nl = x.split()\nl2 = y.split()\nif l[0] != l2[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "6109": {"id": 6109, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6110": {"id": 6110, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6111": {"id": 6111, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6112": {"id": 6112, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6113": {"id": 6113, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6114": {"id": 6114, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6115": {"id": 6115, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6116": {"id": 6116, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6117": {"id": 6117, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6118": {"id": 6118, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nx=0\nfor i in range(n):\n    oa=-1\n    na=n\n    while na-oa>1:\n        ma=(oa+na)//2\n        if a[ma]<b[i]:oa=ma\n        else:na=ma\n    ob=n\n    nb=-1\n    while ob-nb>1:\n        mb=(ob+nb)//2\n        if c[mb]>b[i]:ob=mb\n        else:nb=mb\n    x+=(oa+1)*(n-ob)\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6119": {"id": 6119, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans = 0\nfor j in range(n):\n    l = 0\n    r = n - 1\n    i = (l + r) // 2\n    while l <= r:\n        if a[i] >= b[j]:\n            r = i - 1\n        else:\n            l = i + 1\n        i = (l + r) // 2\n    l = 0\n    r = n - 1\n    k = (l + r) // 2\n    while l <= r:\n        if c[k] <= b[j]:\n            l = k + 1\n        else:\n            r = k - 1\n        k = (l + r) // 2\n    ans += (i + 1) * (n - (k + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6120": {"id": 6120, "code": "N = 2\nL = []\nL.extend(((int(x), 3)  for x in \"1 5\".split()))\nL.extend(((int(x), 2)  for x in \"2 4\".split()))\nL.extend(((int(x), 1)  for x in \"3 6\".split()))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6121": {"id": 6121, "code": "N = 3\nL = []\nL.extend(((int(x), 3)  for x in \"1 1 1\".split()))\nL.extend(((int(x), 2)  for x in \"2 2 2\".split()))\nL.extend(((int(x), 1)  for x in \"3 3 3\".split()))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6122": {"id": 6122, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nad=sorted(a)\nbd=sorted(b)\ncd=sorted(c)\ncount=0\nfor i in range(n):\n  al=bisect.bisect_left(ad,bd[i])\n  cl=bisect.bisect_right(cd,bd[i])\n  sum=al * ( n - cl )\n  count=count+( al * ( n - cl ) )\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6123": {"id": 6123, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nad=sorted(a)\nbd=sorted(b)\ncd=sorted(c)\ncount=0\nfor i in range(n):\n  al=bisect.bisect_left(ad,bd[i])\n  cl=bisect.bisect_right(cd,bd[i])\n  sum=al * ( n - cl )\n  count=count+( al * ( n - cl ) )\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6124": {"id": 6124, "code": "import bisect\na = 2\nb = [1, 5]\nb.sort()\nc = [2, 4]\nd = [3, 6]\nd.sort()\nans = 0\nfor i in range(a):\n    ans += bisect.bisect_left(b, c[i]) * (a - bisect.bisect_right(d, c[i]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6125": {"id": 6125, "code": "import bisect\na = 3\nb = [1, 1, 1]\nb.sort()\nc = [2, 2, 2]\nd = [3, 3, 3]\nd.sort()\nans = 0\nfor i in range(a):\n    ans += bisect.bisect_left(b, c[i]) * (a - bisect.bisect_right(d, c[i]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6126": {"id": 6126, "code": "import bisect\na = 6\nb = [3, 14, 159, 2, 6, 53]\nb.sort()\nc = [58, 9, 79, 323, 84, 6]\nd = [2643, 383, 2, 79, 50, 288]\nd.sort()\nans = 0\nfor i in range(a):\n    ans += bisect.bisect_left(b, c[i]) * (a - bisect.bisect_right(d, c[i]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6127": {"id": 6127, "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6128": {"id": 6128, "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6129": {"id": 6129, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6130": {"id": 6130, "code": "N = 2\nla = [[1, 0], [5, 0]]\nlb = [[2, 1], [4, 1]]\nlc = [[3, 2], [6, 2]]\nl=la+lb+lc\nl.sort(key=lambda x:(x[0],-x[1]))\nna=0\nsumb=0\nans=0\nfor i in range(3*N):\n    if l[i][1]==0:\n        na+=1\n    elif l[i][1]==1:\n        sumb+=na\n    else:\n        ans+=sumb\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6131": {"id": 6131, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6132": {"id": 6132, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6133": {"id": 6133, "code": "from bisect import bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6134": {"id": 6134, "code": "from bisect import bisect_left,bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6135": {"id": 6135, "code": "from bisect import bisect_left,bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6136": {"id": 6136, "code": "from bisect import bisect_left,bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6137": {"id": 6137, "code": "import sys\nreadline = sys.stdin.readline\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nimport bisect\nfor i in range(len(B)):\n  ind_a = bisect.bisect_left(A, B[i])\n  ind_c = bisect.bisect_right(C, B[i])\n  ans += ind_a * (len(C) - ind_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6138": {"id": 6138, "code": "import sys\nreadline = sys.stdin.readline\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nimport bisect\nfor i in range(len(B)):\n  ind_a = bisect.bisect_left(A, B[i])\n  ind_c = bisect.bisect_right(C, B[i])\n  ans += ind_a * (len(C) - ind_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6139": {"id": 6139, "code": "import sys\nreadline = sys.stdin.readline\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nimport bisect\nfor i in range(len(B)):\n  ind_a = bisect.bisect_left(A, B[i])\n  ind_c = bisect.bisect_right(C, B[i])\n  ans += ind_a * (len(C) - ind_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6140": {"id": 6140, "code": "from itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nacc_a = [0]*N\nacc_c = [0]*N\ni_a = 0\ni_c = N-1\nfor i in range(N):\n    b = B[i]\n    while i_a < N and A[i_a] < b:\n        acc_a[i] += 1\n        i_a += 1\nfor i in reversed(range(N)):\n    b = B[i]\n    while i_c >= 0 and C[i_c] > b:\n        acc_c[i] += 1\n        i_c -= 1\nacc_a = list(accumulate(acc_a))\nacc_c = list(accumulate(acc_c[::-1]))\nacc_c = acc_c[::-1]\nans = 0\nfor a, c in zip(acc_a, acc_c):\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6141": {"id": 6141, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6142": {"id": 6142, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6143": {"id": 6143, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6144": {"id": 6144, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\np = 0\nans = 0\nf = []\ng = [0] * n\nfor i, x in enumerate(b):\n    while p < n and x >= c[p]:\n        p += 1\n    f.append(n - p)\nfor i in range(n - 1, -1, -1):\n    g[i] = f[i] + (g[i + 1] if i < n - 1 else 0)\np = 0\nfor i, x in enumerate(a):\n    while p < n and x >= b[p]:\n        p += 1\n    ans += g[p] if p < n else 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6145": {"id": 6145, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\np = 0\nans = 0\nf = []\ng = [0] * n\nfor i, x in enumerate(b):\n    while p < n and x >= c[p]:\n        p += 1\n    f.append(n - p)\nfor i in range(n - 1, -1, -1):\n    g[i] = f[i] + (g[i + 1] if i < n - 1 else 0)\np = 0\nfor i, x in enumerate(a):\n    while p < n and x >= b[p]:\n        p += 1\n    ans += g[p] if p < n else 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6146": {"id": 6146, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nB1 = []\nfor i in range(N):\n    ind = bisect_right(C,B[i])\n    B1.append(ind)\nB2 = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    B2[i] = B2[i+1]+N-B1[i]\ncnt = 0\nfor i in range(N):\n    ind = bisect_right(B,A[i])\n    cnt += B2[ind]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6147": {"id": 6147, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nB1 = []\nfor i in range(N):\n    ind = bisect_right(C,B[i])\n    B1.append(ind)\nB2 = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    B2[i] = B2[i+1]+N-B1[i]\ncnt = 0\nfor i in range(N):\n    ind = bisect_right(B,A[i])\n    cnt += B2[ind]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6148": {"id": 6148, "code": "from bisect import *\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6149": {"id": 6149, "code": "from bisect import *\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6150": {"id": 6150, "code": "from bisect import *\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6151": {"id": 6151, "code": "N = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsorted_a = sorted(a)\nsorted_b = sorted(b)\nsorted_c = sorted(c)\nans = 0\nbefore_a = 0\nbefore_c = 0\ncount_a = 0\ncount_c_rest = 0\nfor each_b in sorted_b:\n    for ai in range(before_a, len(sorted_a)):\n        if each_b > sorted_a[ai]:\n            count_a += 1\n            before_a += 1\n        else:\n            before_a = ai\n            break\n    for ci in range(before_c, len(sorted_c)):\n        if sorted_c[ci] <= each_b:\n            count_c_rest += 1\n            before_c += 1\n        else:\n            before_c = ci\n            break\n    ans += count_a * (len(sorted_c)-count_c_rest)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6152": {"id": 6152, "code": "N = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nsorted_a = sorted(a)\nsorted_b = sorted(b)\nsorted_c = sorted(c)\nans = 0\nbefore_a = 0\nbefore_c = 0\ncount_a = 0\ncount_c_rest = 0\nfor each_b in sorted_b:\n    for ai in range(before_a, len(sorted_a)):\n        if each_b > sorted_a[ai]:\n            count_a += 1\n            before_a += 1\n        else:\n            before_a = ai\n            break\n    for ci in range(before_c, len(sorted_c)):\n        if sorted_c[ci] <= each_b:\n            count_c_rest += 1\n            before_c += 1\n        else:\n            before_c = ci\n            break\n    ans += count_a * (len(sorted_c)-count_c_rest)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "6153": {"id": 6153, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nbc = [None]*(N+1)\nbc[N] = 0\nfor i in range(N-1, -1, -1):\n    bc[i] = bc[i+1] + N - bisect.bisect_right(C, B[i])\nans = 0\nfor i in range(N):\n    ans += bc[bisect.bisect_right(B, A[i])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6154": {"id": 6154, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nbc = [None]*(N+1)\nbc[N] = 0\nfor i in range(N-1, -1, -1):\n    bc[i] = bc[i+1] + N - bisect.bisect_right(C, B[i])\nans = 0\nfor i in range(N):\n    ans += bc[bisect.bisect_right(B, A[i])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6155": {"id": 6155, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nbc = [None]*(N+1)\nbc[N] = 0\nfor i in range(N-1, -1, -1):\n    bc[i] = bc[i+1] + N - bisect.bisect_right(C, B[i])\nans = 0\nfor i in range(N):\n    ans += bc[bisect.bisect_right(B, A[i])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6156": {"id": 6156, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6157": {"id": 6157, "code": "import bisect\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6158": {"id": 6158, "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6159": {"id": 6159, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6160": {"id": 6160, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6161": {"id": 6161, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6162": {"id": 6162, "code": "from bisect import bisect_left, bisect\nn = 2\nla = [1, 5]\nlb = [2, 4]\nlc = [3, 6]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6163": {"id": 6163, "code": "from bisect import bisect_left, bisect\nn = 3\nla = [1, 1, 1]\nlb = [2, 2, 2]\nlc = [3, 3, 3]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6164": {"id": 6164, "code": "from bisect import bisect_left, bisect\nn = 6\nla = [2, 3, 6, 14, 53, 159]\nlb = [58, 9, 79, 323, 84, 6]\nlc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6165": {"id": 6165, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6166": {"id": 6166, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6167": {"id": 6167, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6168": {"id": 6168, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6169": {"id": 6169, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6170": {"id": 6170, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6171": {"id": 6171, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncur_l = 0\ncur_r = 0\np = 0\nfor cur_mid in B:\n    while cur_l < len(A):\n        if A[cur_l] >= cur_mid:\n            break\n        cur_l += 1\n    while cur_r < len(C):\n        if cur_mid < C[cur_r]:\n            break\n        cur_r += 1\n    p += cur_l * (len(C) - cur_r)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6172": {"id": 6172, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncur_l = 0\ncur_r = 0\np = 0\nfor cur_mid in B:\n    while cur_l < len(A):\n        if A[cur_l] >= cur_mid:\n            break\n        cur_l += 1\n    while cur_r < len(C):\n        if cur_mid < C[cur_r]:\n            break\n        cur_r += 1\n    p += cur_l * (len(C) - cur_r)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "6173": {"id": 6173, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6174": {"id": 6174, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6175": {"id": 6175, "code": "n = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6176": {"id": 6176, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in b:\n    x=bisect.bisect_left(a,i)\n    y=bisect.bisect_right(c,i)\n    ans+=x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6177": {"id": 6177, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in b:\n    x=bisect.bisect_left(a,i)\n    y=bisect.bisect_right(c,i)\n    ans+=x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6178": {"id": 6178, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in b:\n    x=bisect.bisect_left(a,i)\n    y=bisect.bisect_right(c,i)\n    ans+=x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6179": {"id": 6179, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6180": {"id": 6180, "code": "import bisect\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6181": {"id": 6181, "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6182": {"id": 6182, "code": "n = 2\narr1 = [5, 1]\narr2 = [4, 2]\narr3 = [6, 3]\ncnt=[0]*n\nans=0\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr1[j]<arr2[i]:\n      cnt[i]=n-pos\n      break\n    else:\n      pos+=1\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr2[i]<arr3[j]:\n      pos+=1\n    else:\n      ans+=cnt[i]*pos\n      break\n  else:\n    ans+=cnt[i]*pos\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "6183": {"id": 6183, "code": "n = 3\narr1 = [1, 1, 1]\narr2 = [2, 2, 2]\narr3 = [3, 3, 3]\ncnt=[0]*n\nans=0\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr1[j]<arr2[i]:\n      cnt[i]=n-pos\n      break\n    else:\n      pos+=1\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr2[i]<arr3[j]:\n      pos+=1\n    else:\n      ans+=cnt[i]*pos\n      break\n  else:\n    ans+=cnt[i]*pos\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "6184": {"id": 6184, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6185": {"id": 6185, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6186": {"id": 6186, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6187": {"id": 6187, "code": "from bisect import bisect_right as br\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nBc=[]\nfor i in range(N):\n    Bc.append(N-br(C,B[i]))\nS=[sum(Bc)]\nfor j in range(N):\n    S.append(S[j]-Bc[j])\nfor a in A:\n    b=br(B,a)\n    ans+=S[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6188": {"id": 6188, "code": "from bisect import bisect_right as br\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nBc=[]\nfor i in range(N):\n    Bc.append(N-br(C,B[i]))\nS=[sum(Bc)]\nfor j in range(N):\n    S.append(S[j]-Bc[j])\nfor a in A:\n    b=br(B,a)\n    ans+=S[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6189": {"id": 6189, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6190": {"id": 6190, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6191": {"id": 6191, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6192": {"id": 6192, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6193": {"id": 6193, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6194": {"id": 6194, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6195": {"id": 6195, "code": "from bisect import bisect_right,bisect_left\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6196": {"id": 6196, "code": "from bisect import bisect_right,bisect_left\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6197": {"id": 6197, "code": "from bisect import bisect_right,bisect_left\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6198": {"id": 6198, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nans = 0\nmidnum = []\nindex = 0\nfor i in B:\n    while True:\n        if index == N or A[index] >= i:\n            midnum.append(index)\n            break\n        else:\n            index += 1\nindex = 0\nmidCnum = []\ntmp = 0\nfor i in midnum:\n    tmp += i\n    midCnum.append(tmp)\nfor i in C:\n    while True:\n        if index == N:\n            ans += midCnum[index-1]\n            break\n        elif i <= B[index]:\n            if index != 0:\n                ans += midCnum[index-1]\n            break\n        else:\n            index += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6199": {"id": 6199, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nBB = [0] * N\ncidx = 0\nfor i in range(N):\n    while cidx < N and C[cidx] <= B[i]:\n        cidx += 1\n    BB[i] = N - cidx\nBBB = [0] * N\nfor i in range(N - 1, -1, -1):\n    if (i == N - 1):\n        BBB[i] = BB[i]\n    else:\n        BBB[i] = BB[i] + BBB[i+1]\nsum = 0\nbidx = 0\nfor i in range(N):\n    while bidx < N and B[bidx] <= A[i]:\n        bidx += 1\n    if bidx != N:\n        sum += BBB[bidx]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6200": {"id": 6200, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nBB = [0] * N\ncidx = 0\nfor i in range(N):\n    while cidx < N and C[cidx] <= B[i]:\n        cidx += 1\n    BB[i] = N - cidx\nBBB = [0] * N\nfor i in range(N - 1, -1, -1):\n    if (i == N - 1):\n        BBB[i] = BB[i]\n    else:\n        BBB[i] = BB[i] + BBB[i+1]\nsum = 0\nbidx = 0\nfor i in range(N):\n    while bidx < N and B[bidx] <= A[i]:\n        bidx += 1\n    if bidx != N:\n        sum += BBB[bidx]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6201": {"id": 6201, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6202": {"id": 6202, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6203": {"id": 6203, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6204": {"id": 6204, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nue = []\nfor i in range(n):\n    ue.append(bisect.bisect_left(a,b[i]))\nsita = []\nfor i in range(n):\n    sita.append(n - bisect.bisect_right(c,b[i]))\nans = 0\nfor i in range(n):\n    ans += ue[i]*sita[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6205": {"id": 6205, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nue = []\nfor i in range(n):\n    ue.append(bisect.bisect_left(a,b[i]))\nsita = []\nfor i in range(n):\n    sita.append(n - bisect.bisect_right(c,b[i]))\nans = 0\nfor i in range(n):\n    ans += ue[i]*sita[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6206": {"id": 6206, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nue = []\nfor i in range(n):\n    ue.append(bisect.bisect_left(a,b[i]))\nsita = []\nfor i in range(n):\n    sita.append(n - bisect.bisect_right(c,b[i]))\nans = 0\nfor i in range(n):\n    ans += ue[i]*sita[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6207": {"id": 6207, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6208": {"id": 6208, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6209": {"id": 6209, "code": "n = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6210": {"id": 6210, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nba=0\nbc=N\nans=0\nfor i in range(N):\n    b=B[i]\n    if ba!=N:\n        while A[ba]<b:\n            ba+=1\n            if ba==N:\n                break\n    if bc!=0:\n        while C[N-bc]<=b:\n            bc-=1\n            if bc==0:\n                break\n    ans+=ba*(bc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "6211": {"id": 6211, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nba=0\nbc=N\nans=0\nfor i in range(N):\n    b=B[i]\n    if ba!=N:\n        while A[ba]<b:\n            ba+=1\n            if ba==N:\n                break\n    if bc!=0:\n        while C[N-bc]<=b:\n            bc-=1\n            if bc==0:\n                break\n    ans+=ba*(bc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "6212": {"id": 6212, "code": "from bisect import bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nAB = [0]*N\nsAB = [0]*N\nrlt = 0\nA.sort()\nB.sort()\nC.sort()\nfor i in range(N):\n  AB[i] = bisect_left(A, B[i])\nsAB[0] = AB[0]\nfor i in range(N-1):\n  sAB[i+1] = sAB[i] + AB[i+1]\nfor i in range(N):\n  j = bisect_left(B, C[i])\n  if j == 0:\n    continue\n  else:\n    rlt += sAB[j-1]\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6213": {"id": 6213, "code": "from bisect import bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nAB = [0]*N\nsAB = [0]*N\nrlt = 0\nA.sort()\nB.sort()\nC.sort()\nfor i in range(N):\n  AB[i] = bisect_left(A, B[i])\nsAB[0] = AB[0]\nfor i in range(N-1):\n  sAB[i+1] = sAB[i] + AB[i+1]\nfor i in range(N):\n  j = bisect_left(B, C[i])\n  if j == 0:\n    continue\n  else:\n    rlt += sAB[j-1]\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6214": {"id": 6214, "code": "import bisect\nn = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = [0]*(n+1)\nv = 0\nfor idx, b in enumerate(Bs[::-1]):\n    v += len(Cs) - bisect.bisect_right(Cs, b)\n    cnt[n-1-idx] = v\nprint(sum([cnt[bisect.bisect_right(Bs, a)] for a in As]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6215": {"id": 6215, "code": "import bisect\nn = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\ncnt = [0]*(n+1)\nv = 0\nfor idx, b in enumerate(Bs[::-1]):\n    v += len(Cs) - bisect.bisect_right(Cs, b)\n    cnt[n-1-idx] = v\nprint(sum([cnt[bisect.bisect_right(Bs, a)] for a in As]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6216": {"id": 6216, "code": "import bisect\nn = 6\nAs = [3, 14, 159, 2, 6, 53]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = [0]*(n+1)\nv = 0\nfor idx, b in enumerate(Bs[::-1]):\n    v += len(Cs) - bisect.bisect_right(Cs, b)\n    cnt[n-1-idx] = v\nprint(sum([cnt[bisect.bisect_right(Bs, a)] for a in As]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6217": {"id": 6217, "code": "import sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nb.sort()\nc.sort()\nres = 0\nbt = [0] * N\nfor j in range(N):\n  y = b[j]\n  k = br(c, y)\n  bt[j] = N - k\ncsbt = [0] * (N + 1)\nfor i in range(N):\n  csbt[i + 1] = csbt[i] + bt[i]\nfor i in range(N):\n  x = a[i]\n  j = br(b, x)\n  if j < N:\n    res += csbt[-1] - csbt[j]\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6218": {"id": 6218, "code": "import sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nres = 0\nbt = [0] * N\nfor j in range(N):\n  y = b[j]\n  k = br(c, y)\n  bt[j] = N - k\ncsbt = [0] * (N + 1)\nfor i in range(N):\n  csbt[i + 1] = csbt[i] + bt[i]\nfor i in range(N):\n  x = a[i]\n  j = br(b, x)\n  if j < N:\n    res += csbt[-1] - csbt[j]\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6219": {"id": 6219, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ndef bin_a(list,bi):\n    ok=-1\n    ng=n\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi>list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bin_c(list,bi):\n    ok=n\n    ng=-1\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi<list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\ncnt=0\nfor i in range(n):\n    cnt+=bin_a(a,b[i])*bin_c(c,b[i])\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "6220": {"id": 6220, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ndef bin_a(list,bi):\n    ok=-1\n    ng=n\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi>list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bin_c(list,bi):\n    ok=n\n    ng=-1\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi<list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\ncnt=0\nfor i in range(n):\n    cnt+=bin_a(a,b[i])*bin_c(c,b[i])\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "6221": {"id": 6221, "code": "from bisect import *\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6222": {"id": 6222, "code": "from bisect import *\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6223": {"id": 6223, "code": "from bisect import *\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6224": {"id": 6224, "code": "from collections import defaultdict\nA = defaultdict(int)\nB = defaultdict(int)\nC = defaultdict(int)\nN = int(\"3\")\na = [k for k in map(int, \"1 1 1\".split())]\nb = [k for k in map(int, \"2 2 2\".split())]\nc = [k for k in map(int, \"3 3 3\".split())]\nfor k in range(N):\n  A[a[k]] += 1\n  B[b[k]] += 1\n  C[c[k]] += 1\nAset = sorted(set(a))\nBset = sorted(set(b))\nCset = sorted(set(c))\ncnt = 0\nindex_a = 0\nindex_c = 0\na = 0\nc = N\nfor b in Bset:\n  flag_a = False\n  flag_c = False\n  if a < N:\n    for k in range(index_a, len(Aset)):\n      if Aset[k] < b:\n        a += A[Aset[k]] \n      else:\n        index_a = k\n        flag_a = True\n        break\n  for k in range(index_c, len(Cset)):\n    if Cset[k] <= b:\n      c -= C[Cset[k]]\n    else:\n      index_c = k\n      flag_c = True\n      break\n  if flag_a == False:\n    a = N\n  if flag_c == False:\n    break\n  cnt += a*c*B[b]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6225": {"id": 6225, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\no = []\np = []\ni = 0\nk = 0\nfor j in range(N):\n    while i < N and A[i] < B[j]:\n        i = i + 1\n    o.append(i)\n    while k < N and B[j] >= C[k]:\n        k = k + 1\n    p.append(N-k)\nsum = 0\nfor x in range(N):\n    sum = sum + o[x] * p[x]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6226": {"id": 6226, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\no = []\np = []\ni = 0\nk = 0\nfor j in range(N):\n    while i < N and A[i] < B[j]:\n        i = i + 1\n    o.append(i)\n    while k < N and B[j] >= C[k]:\n        k = k + 1\n    p.append(N-k)\nsum = 0\nfor x in range(N):\n    sum = sum + o[x] * p[x]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6227": {"id": 6227, "code": "import bisect\nimport sys\nn = 2\nup = [1, 5]\nmid = [2, 4]\nlow = [3, 6]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6228": {"id": 6228, "code": "import bisect\nimport sys\nn = 3\nup = [1, 1, 1]\nmid = [2, 2, 2]\nlow = [3, 3, 3]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6229": {"id": 6229, "code": "import bisect\nimport sys\nn = 6\nup = [2, 3, 6, 14, 53, 159]\nmid = [6, 9, 58, 79, 84, 323]\nlow = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6230": {"id": 6230, "code": "N = 2\nA = [0, 1, 5]\nA.sort()\nB = [0, 2, 4]\nB.sort()\nC = [0, 3, 6]\nC.sort()\nbko = [0 for i in range(N+1)]\ncnt = 1\nfor i in range(1,N+1):\n  b = B[i]\n  for j in range(cnt,N+1):\n    if A[j] >= b:\n      bko[i] = j-1\n      cnt = j\n      break\n    if j == N:\n      bko[i] = N\n      cnt = N\nfor i in range(N):     \n  bko[i+1] += bko[i]\ncko = [0 for i in range(N+1)]\ncnt = 1\nfor i in range(1,N+1):\n  c = C[i]\n  for j in range(cnt,N+1):\n    if B[j] >= c:\n      cko[i] = bko[j-1]\n      cnt = j\n      break\n    if j == N:\n      cko[i] = bko[N]\n      cnt = N\nprint(sum(cko))        ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6231": {"id": 6231, "code": "def main():\n  n = 2\n  la = [1, 5]\n  lb = [2, 4]\n  lc = [3, 6]\n  la.sort(), lb.sort(), lc.sort()\n  i = 0\n  ab = []\n  for b in lb:\n    while i < n and la[i] < b:\n      i += 1\n    ab.append(i)\n  i = 0\n  bc = []\n  for c in lc:\n    while i < n and lb[i] < c:\n      i += 1\n    bc.append(i)\n  ans = 0\n  cs = [0]\n  for x in ab:\n    cs.append(cs[-1] + x)\n  for y in bc:\n    ans += cs[y]\n  print(ans)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6232": {"id": 6232, "code": "def main():\n  n = 3\n  la = [1, 1, 1]\n  lb = [2, 2, 2]\n  lc = [3, 3, 3]\n  la.sort(), lb.sort(), lc.sort()\n  i = 0\n  ab = []\n  for b in lb:\n    while i < n and la[i] < b:\n      i += 1\n    ab.append(i)\n  i = 0\n  bc = []\n  for c in lc:\n    while i < n and lb[i] < c:\n      i += 1\n    bc.append(i)\n  ans = 0\n  cs = [0]\n  for x in ab:\n    cs.append(cs[-1] + x)\n  for y in bc:\n    ans += cs[y]\n  print(ans)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6233": {"id": 6233, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6234": {"id": 6234, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6235": {"id": 6235, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6236": {"id": 6236, "code": "import bisect\nn = 2\nas_ = [1, 5]\nbs_ = [2, 4]\ncs_ = [3, 6]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6237": {"id": 6237, "code": "import bisect\nn = 3\nas_ = [1, 1, 1]\nbs_ = [2, 2, 2]\ncs_ = [3, 3, 3]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6238": {"id": 6238, "code": "import bisect\nn = 6\nas_ = [3, 14, 159, 2, 6, 53]\nbs_ = [58, 9, 79, 323, 84, 6]\ncs_ = [2643, 383, 2, 79, 50, 288]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6239": {"id": 6239, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6240": {"id": 6240, "code": "from bisect import bisect_left,bisect_right\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6241": {"id": 6241, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6242": {"id": 6242, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nli = []\ni = 0\nfor bb in b:\n    while i<n and a[i]<bb:\n        i += 1\n    li.append(i)\nli2 = [0]\naccu = 0\nfor i in li:\n    accu += i\n    li2.append(accu)\nans = 0\ni = 0\nfor cc in c:\n    while i<n and b[i]<cc:\n        i += 1\n    ans += li2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6243": {"id": 6243, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nli = []\ni = 0\nfor bb in b:\n    while i<n and a[i]<bb:\n        i += 1\n    li.append(i)\nli2 = [0]\naccu = 0\nfor i in li:\n    accu += i\n    li2.append(accu)\nans = 0\ni = 0\nfor cc in c:\n    while i<n and b[i]<cc:\n        i += 1\n    ans += li2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6244": {"id": 6244, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6245": {"id": 6245, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6246": {"id": 6246, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6247": {"id": 6247, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6248": {"id": 6248, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6249": {"id": 6249, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6250": {"id": 6250, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:\n    ai=bisect.bisect_left(a,i)\n    ci=bisect.bisect_right(c,i)\n    ans+=ai*(n-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6251": {"id": 6251, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in b:\n    ai=bisect.bisect_left(a,i)\n    ci=bisect.bisect_right(c,i)\n    ans+=ai*(n-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6252": {"id": 6252, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:\n    ai=bisect.bisect_left(a,i)\n    ci=bisect.bisect_right(c,i)\n    ans+=ai*(n-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6253": {"id": 6253, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nj = 0\nk = 0\nfor i in range(n):\n    if j<n:\n        while a[j]<b[i]:\n            j+=1\n            if j==n:\n                break\n    if k<n:\n        while c[k]<=b[i]:\n            k+=1\n            if k==n:\n                break\n    ans += j*(n-k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "6254": {"id": 6254, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans = 0\nj = 0\nk = 0\nfor i in range(n):\n    if j<n:\n        while a[j]<b[i]:\n            j+=1\n            if j==n:\n                break\n    if k<n:\n        while c[k]<=b[i]:\n            k+=1\n            if k==n:\n                break\n    ans += j*(n-k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "6255": {"id": 6255, "code": "from bisect import bisect_right\nif __name__ == \"__main__\":\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a = sorted(a)\n    b = sorted(b)\n    c = sorted(c)\n    ans = 0\n    clist = [0] * n\n    clist[n-1] = n - bisect_right(c, b[n-1])\n    for i in range(n-2, -1, -1):\n        clist[i] = n - bisect_right(c, b[i]) + clist[i+1]\n    for aa in a:\n        b_pos = bisect_right(b, aa)\n        if b_pos != n:\n            ans += clist[b_pos]\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6256": {"id": 6256, "code": "from bisect import bisect_right\nif __name__ == \"__main__\":\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a = sorted(a)\n    b = sorted(b)\n    c = sorted(c)\n    ans = 0\n    clist = [0] * n\n    clist[n-1] = n - bisect_right(c, b[n-1])\n    for i in range(n-2, -1, -1):\n        clist[i] = n - bisect_right(c, b[i]) + clist[i+1]\n    for aa in a:\n        b_pos = bisect_right(b, aa)\n        if b_pos != n:\n            ans += clist[b_pos]\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6257": {"id": 6257, "code": "from bisect import bisect_right\nif __name__ == \"__main__\":\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a = sorted(a)\n    b = sorted(b)\n    c = sorted(c)\n    ans = 0\n    clist = [0] * n\n    clist[n-1] = n - bisect_right(c, b[n-1])\n    for i in range(n-2, -1, -1):\n        clist[i] = n - bisect_right(c, b[i]) + clist[i+1]\n    for aa in a:\n        b_pos = bisect_right(b, aa)\n        if b_pos != n:\n            ans += clist[b_pos]\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6258": {"id": 6258, "code": "import bisect\nN = 2\nA_list = [1, 5]\nB_list = [2, 4]\nC_list = [3, 6]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6259": {"id": 6259, "code": "import bisect\nN = 3\nA_list = [1, 1, 1]\nB_list = [2, 2, 2]\nC_list = [3, 3, 3]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6260": {"id": 6260, "code": "import bisect\nN = 6\nA_list = [3, 14, 159, 2, 6, 53]\nB_list = [58, 9, 79, 323, 84, 6]\nC_list = [2643, 383, 2, 79, 50, 288]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6261": {"id": 6261, "code": "import bisect\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = 0\nfor b in Bs:\n    a_b = bisect.bisect_left(As,b)\n    b_c = N - bisect.bisect_right(Cs, b)\n    cnt += a_b * b_c\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6262": {"id": 6262, "code": "import bisect\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\ncnt = 0\nfor b in Bs:\n    a_b = bisect.bisect_left(As,b)\n    b_c = N - bisect.bisect_right(Cs, b)\n    cnt += a_b * b_c\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6263": {"id": 6263, "code": "import bisect\nN = 6\nAs = [2, 3, 6, 14, 53, 159]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor b in Bs:\n    a_b = bisect.bisect_left(As,b)\n    b_c = N - bisect.bisect_right(Cs, b)\n    cnt += a_b * b_c\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6264": {"id": 6264, "code": "import bisect\nfrom itertools import accumulate\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6265": {"id": 6265, "code": "import bisect\nfrom itertools import accumulate\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6266": {"id": 6266, "code": "import bisect\nfrom itertools import accumulate\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6267": {"id": 6267, "code": "import bisect\nfrom itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6268": {"id": 6268, "code": "import bisect\nfrom itertools import accumulate\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6269": {"id": 6269, "code": "import bisect\nfrom itertools import accumulate\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6270": {"id": 6270, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6271": {"id": 6271, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6272": {"id": 6272, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6273": {"id": 6273, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6274": {"id": 6274, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6275": {"id": 6275, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6276": {"id": 6276, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nma=0\ncntb=[0]*n\nfor i in range(n):\n    if i>0:\n        cntb[i]=cntb[i-1]\n    while ma<n:\n        if a[ma]<b[i]:\n            cntb[i]+=1\n            ma+=1\n        else:\n            break\nmb=0\ncntc=[0]*n\nfor i in range(n):\n    if i>0:\n        cntc[i]=cntc[i-1]\n    while mb<n:\n        if b[mb]<c[i]:\n            cntc[i]+=cntb[mb]\n            mb+=1\n        else:\n            break\nprint(sum(cntc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6277": {"id": 6277, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nma=0\ncntb=[0]*n\nfor i in range(n):\n    if i>0:\n        cntb[i]=cntb[i-1]\n    while ma<n:\n        if a[ma]<b[i]:\n            cntb[i]+=1\n            ma+=1\n        else:\n            break\nmb=0\ncntc=[0]*n\nfor i in range(n):\n    if i>0:\n        cntc[i]=cntc[i-1]\n    while mb<n:\n        if b[mb]<c[i]:\n            cntc[i]+=cntb[mb]\n            mb+=1\n        else:\n            break\nprint(sum(cntc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6278": {"id": 6278, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6279": {"id": 6279, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6280": {"id": 6280, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [6, 9, 58, 79, 84, 323]\n    C = [2, 50, 79, 288, 383, 2643]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6281": {"id": 6281, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncount = 0\nfor j in range(N):\n    c = N-bisect.bisect_right(C,B[j])\n    b = bisect.bisect_right(A,B[j]-1)\n    count += b*c\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6282": {"id": 6282, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nfor j in range(N):\n    c = N-bisect.bisect_right(C,B[j])\n    b = bisect.bisect_right(A,B[j]-1)\n    count += b*c\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6283": {"id": 6283, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\ncount = 0\nfor j in range(N):\n    c = N-bisect.bisect_right(C,B[j])\n    b = bisect.bisect_right(A,B[j]-1)\n    count += b*c\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6284": {"id": 6284, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6285": {"id": 6285, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6286": {"id": 6286, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6287": {"id": 6287, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nLC = len(C)\nans = 0\nfor b in B:\n    na = bisect.bisect_left(A, b)\n    nc = LC - bisect.bisect_right(C, b)\n    ans += na * nc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6288": {"id": 6288, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nLC = len(C)\nans = 0\nfor b in B:\n    na = bisect.bisect_left(A, b)\n    nc = LC - bisect.bisect_right(C, b)\n    ans += na * nc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6289": {"id": 6289, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nLC = len(C)\nans = 0\nfor b in B:\n    na = bisect.bisect_left(A, b)\n    nc = LC - bisect.bisect_right(C, b)\n    ans += na * nc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6290": {"id": 6290, "code": "n = 2\nal = [1, 5]\nbl = [2, 4]\ncl = [3, 6]\nal = sorted(al)\nbl = sorted(bl)\ncl = sorted(cl)\nimport bisect\nbl_ac = []\nfor b in bl:\n    idx = bisect.bisect_right(cl, b)\n    bl_ac.append(n-idx)\nimport itertools\nbl_ac = [0] + list(itertools.accumulate(bl_ac[::-1]))\nbl_ac = bl_ac\nans = 0\nfor a in al:\n    idx = bisect.bisect_right(bl, a)\n    ans += bl_ac[n-idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6291": {"id": 6291, "code": "n = 3\nal = [1, 1, 1]\nbl = [2, 2, 2]\ncl = [3, 3, 3]\nal = sorted(al)\nbl = sorted(bl)\ncl = sorted(cl)\nimport bisect\nbl_ac = []\nfor b in bl:\n    idx = bisect.bisect_right(cl, b)\n    bl_ac.append(n-idx)\nimport itertools\nbl_ac = [0] + list(itertools.accumulate(bl_ac[::-1]))\nbl_ac = bl_ac\nans = 0\nfor a in al:\n    idx = bisect.bisect_right(bl, a)\n    ans += bl_ac[n-idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6292": {"id": 6292, "code": "n = 6\nal = [3, 14, 159, 2, 6, 53]\nbl = [58, 9, 79, 323, 84, 6]\ncl = [2643, 383, 2, 79, 50, 288]\nal = sorted(al)\nbl = sorted(bl)\ncl = sorted(cl)\nimport bisect\nbl_ac = []\nfor b in bl:\n    idx = bisect.bisect_right(cl, b)\n    bl_ac.append(n-idx)\nimport itertools\nbl_ac = [0] + list(itertools.accumulate(bl_ac[::-1]))\nbl_ac = bl_ac\nans = 0\nfor a in al:\n    idx = bisect.bisect_right(bl, a)\n    ans += bl_ac[n-idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6293": {"id": 6293, "code": "import bisect\nfrom collections import deque\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nd = deque([])\nfor i in range(N):\n  n = bisect.bisect_right(C, B[N-1-i])\n  if len(d) == 0:\n    d.appendleft(N-n)\n  else:\n    d.appendleft(N-n+d[0])\nans = 0\nfor i in range(N):\n  m = bisect.bisect_right(B, A[i])\n  if m < N:\n    ans += d[m]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6294": {"id": 6294, "code": "import bisect\nfrom collections import deque\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nd = deque([])\nfor i in range(N):\n  n = bisect.bisect_right(C, B[N-1-i])\n  if len(d) == 0:\n    d.appendleft(N-n)\n  else:\n    d.appendleft(N-n+d[0])\nans = 0\nfor i in range(N):\n  m = bisect.bisect_right(B, A[i])\n  if m < N:\n    ans += d[m]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6295": {"id": 6295, "code": "from bisect import *\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncount = 0\nfor i in range(N):\n  a = bisect_left(A, B[i])\n  c = bisect(C, B[i])\n  c = N - c\n  count += (a*c)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6296": {"id": 6296, "code": "from bisect import *\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nfor i in range(N):\n  a = bisect_left(A, B[i])\n  c = bisect(C, B[i])\n  c = N - c\n  count += (a*c)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6297": {"id": 6297, "code": "from bisect import *\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\ncount = 0\nfor i in range(N):\n  a = bisect_left(A, B[i])\n  c = bisect(C, B[i])\n  c = N - c\n  count += (a*c)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6298": {"id": 6298, "code": "from bisect import bisect\nN = 2\naa = [1, 5]\nbb = [2, 4]\ncc = [3, 6]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6299": {"id": 6299, "code": "from bisect import bisect\nN = 3\naa = [1, 1, 1]\nbb = [2, 2, 2]\ncc = [3, 3, 3]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6300": {"id": 6300, "code": "from bisect import bisect\nN = 6\naa = [2, 3, 6, 14, 53, 159]\nbb = [6, 9, 58, 79, 84, 323]\ncc = [2, 50, 79, 288, 383, 2643]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6301": {"id": 6301, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6302": {"id": 6302, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6303": {"id": 6303, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6304": {"id": 6304, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor j in range(N):\n    a=bisect_left(A, B[j])\n    c=bisect_right(C, B[j])\n    ans+=a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6305": {"id": 6305, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor j in range(N):\n    a=bisect_left(A, B[j])\n    c=bisect_right(C, B[j])\n    ans+=a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6306": {"id": 6306, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor j in range(N):\n    a=bisect_left(A, B[j])\n    c=bisect_right(C, B[j])\n    ans+=a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6307": {"id": 6307, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6308": {"id": 6308, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6309": {"id": 6309, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6310": {"id": 6310, "code": "import bisect\nfrom sys import stdin\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6311": {"id": 6311, "code": "import bisect\nfrom sys import stdin\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6312": {"id": 6312, "code": "import bisect\nfrom sys import stdin\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6313": {"id": 6313, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = n ** 3\nup = [0] * n\nmid = [0] * n\nbottom = [0] * n\np = 0\nfor i in range(n):\n    while p < n and A[i] >= B[p]:\n        p += 1\n    mid[i] = p\np = 0\nq = 0\nfor i in range(n):\n    while p < n and B[i] >= C[p]:\n        p += 1\n    while q < n and B[i] > A[q]:\n        q += 1\n    bottom[i] = p\n    up[i] = q\nfor m in mid:\n    ans -= m * n\nfor u, b in zip(up, bottom):\n    ans -= u * b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6314": {"id": 6314, "code": "import bisect\nimport math\nimport sys\nn = 2\nans=0\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6315": {"id": 6315, "code": "import bisect\nimport math\nimport sys\nn = 3\nans=0\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6316": {"id": 6316, "code": "import bisect\nimport math\nimport sys\nn = 6\nans=0\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6317": {"id": 6317, "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nL = [0] * n\nfor i in range(n):\n    a = bisect.bisect_left(A, B[i])\n    L[i] = a\ncum = [0] * (n + 1)\nfor i in range(n):\n    cum[i+1] = cum[i] + L[i]\nfor i in range(n):\n    b = bisect.bisect_left(B, C[i])\n    ans += cum[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6318": {"id": 6318, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nL = [0] * n\nfor i in range(n):\n    a = bisect.bisect_left(A, B[i])\n    L[i] = a\ncum = [0] * (n + 1)\nfor i in range(n):\n    cum[i+1] = cum[i] + L[i]\nfor i in range(n):\n    b = bisect.bisect_left(B, C[i])\n    ans += cum[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6319": {"id": 6319, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nanswer=0\nA.sort()\nB.sort()\nC.sort()\nAcount=[]\nBcount=[]\nBsum=[]\ncount=0\nfor i in range(N):\n  while(count!=N and A[i]>=B[count]): \n    count+=1\n  Acount.append(N-count)\ncount=0\nfor i in range(N):\n  while(count!=N and B[i]>=C[count]):\n    count+=1\n  Bcount.append(N-count) \nBsum.append(Bcount[N-1])\nfor i in range(1,N):\n  Bsum.append(Bcount[N-i-1]+Bsum[i-1])\nfor i in range(N):\n  if Acount[i]==0:\n    print(answer)\n    exit()\n  answer+=Bsum[Acount[i]-1]\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6320": {"id": 6320, "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6321": {"id": 6321, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6322": {"id": 6322, "code": "import bisect\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6323": {"id": 6323, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6324": {"id": 6324, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6325": {"id": 6325, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6326": {"id": 6326, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6327": {"id": 6327, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6328": {"id": 6328, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6329": {"id": 6329, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    Bdic = [0]*N\n    from bisect import bisect\n    from itertools import accumulate\n    for i, b in enumerate(B):\n        idx = bisect(C, b)\n        Bdic[i] = N - idx\n    Bacc = list(accumulate([b for b in Bdic + [0]][::-1]))[::-1]\n    ans = 0\n    for i, a in enumerate(A):\n        idx = bisect(B, a)\n        ans += (Bacc[idx])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6330": {"id": 6330, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    Bdic = [0]*N\n    from bisect import bisect\n    from itertools import accumulate\n    for i, b in enumerate(B):\n        idx = bisect(C, b)\n        Bdic[i] = N - idx\n    Bacc = list(accumulate([b for b in Bdic + [0]][::-1]))[::-1]\n    ans = 0\n    for i, a in enumerate(A):\n        idx = bisect(B, a)\n        ans += (Bacc[idx])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6331": {"id": 6331, "code": "from bisect import bisect_right, bisect_left\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\nans = 0\nfor B in Bs:\n    A_idx = bisect_left(As, B)\n    C_idx = bisect_right(Cs, B)\n    ans += A_idx * (N - C_idx)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6332": {"id": 6332, "code": "from bisect import bisect_right, bisect_left\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\nans = 0\nfor B in Bs:\n    A_idx = bisect_left(As, B)\n    C_idx = bisect_right(Cs, B)\n    ans += A_idx * (N - C_idx)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6333": {"id": 6333, "code": "from bisect import bisect_right, bisect_left\nN = 6\nAs = [2, 3, 6, 14, 53, 159]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor B in Bs:\n    A_idx = bisect_left(As, B)\n    C_idx = bisect_right(Cs, B)\n    ans += A_idx * (N - C_idx)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6334": {"id": 6334, "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6335": {"id": 6335, "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6336": {"id": 6336, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6337": {"id": 6337, "code": "N=6\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nD=[0]*N\nE=[0]*N\nA=list(sorted(A,reverse=True))\nB=list(sorted(B,reverse=True))\nC=list(sorted(C,reverse=True))\nu=N-1\nd=N-1\nc=0\nwhile(True):\n    if A[u] < B[d]:\n        c+=1\n        u-=1\n    else:\n        D[d]=c\n        d-=1\n    if(-1==u or -1==d):\n        for i in range(d,-1,-1):\n            D[i]=c\n        break\nu=0\nd=0\nc=0\nwhile(True):\n    if B[u] < C[d]:\n        c+=1\n        d+=1\n    else:\n        E[u]=c\n        u+=1\n    if(N==u or N==d):\n        for i in range(u,N):\n            E[i]=c\n        break\ns=0\nfor i in range(N):\n    s+=D[i]*E[i]\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6338": {"id": 6338, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 2\nA = [1, 5]\nA.sort()\nB = [2, 4]\nC = [3, 6]\nC.sort()\nX = [bisect_left(A ,B[i]) for i in range(N)]\nY = [N - bisect_right(C ,B[i]) for i in range(N)]\ntotal = 0\nfor x,y in zip(X, Y):\n    total += x * y\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6339": {"id": 6339, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nA.sort()\nB = [2, 2, 2]\nC = [3, 3, 3]\nC.sort()\nX = [bisect_left(A ,B[i]) for i in range(N)]\nY = [N - bisect_right(C ,B[i]) for i in range(N)]\ntotal = 0\nfor x,y in zip(X, Y):\n    total += x * y\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6340": {"id": 6340, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nA.sort()\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nC.sort()\nX = [bisect_left(A ,B[i]) for i in range(N)]\nY = [N - bisect_right(C ,B[i]) for i in range(N)]\ntotal = 0\nfor x,y in zip(X, Y):\n    total += x * y\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6341": {"id": 6341, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nfor i in range(n):\n    b[i] = (b[i], bisect.bisect_right(a, b[i]-1))\nb = sorted(b)\nbsum = [b[0][1]]\nb[0] = b[0][0]\nfor i in range(1, n):\n    bsum.append(bsum[i-1] + b[i][1])\n    b[i] = b[i][0]\ncnt = 0\nfor i in range(n):\n    ind = bisect.bisect_right(b, c[i]-1)\n    if ind > 0:\n        cnt += bsum[ind-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6342": {"id": 6342, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na = sorted(a)\nfor i in range(n):\n    b[i] = (b[i], bisect.bisect_right(a, b[i]-1))\nb = sorted(b)\nbsum = [b[0][1]]\nb[0] = b[0][0]\nfor i in range(1, n):\n    bsum.append(bsum[i-1] + b[i][1])\n    b[i] = b[i][0]\ncnt = 0\nfor i in range(n):\n    ind = bisect.bisect_right(b, c[i]-1)\n    if ind > 0:\n        cnt += bsum[ind-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6343": {"id": 6343, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6344": {"id": 6344, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6345": {"id": 6345, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6346": {"id": 6346, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6347": {"id": 6347, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6348": {"id": 6348, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6349": {"id": 6349, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nu_cnt = [0] * N\nd_cnt = [0] * N\nt = 0\nfor i in range(N):\n    while t < N and A[t] < B[i]:\n        t += 1\n    u_cnt[i] = t\nt = N-1\nfor i in range(N-1,-1,-1):\n    while t >= 0 and C[t] > B[i]:\n        t -= 1\n    d_cnt[i] = N - 1 - t\nans = 0\nfor i in range(N):\n    ans += u_cnt[i] * d_cnt[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6350": {"id": 6350, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nu_cnt = [0] * N\nd_cnt = [0] * N\nt = 0\nfor i in range(N):\n    while t < N and A[t] < B[i]:\n        t += 1\n    u_cnt[i] = t\nt = N-1\nfor i in range(N-1,-1,-1):\n    while t >= 0 and C[t] > B[i]:\n        t -= 1\n    d_cnt[i] = N - 1 - t\nans = 0\nfor i in range(N):\n    ans += u_cnt[i] * d_cnt[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6351": {"id": 6351, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor i in range(N):\n    idxa=bisect_left(A,B[i])\n    idxc=bisect_right(C,B[i])\n    ans+=idxa*(N-idxc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6352": {"id": 6352, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor i in range(N):\n    idxa=bisect_left(A,B[i])\n    idxc=bisect_right(C,B[i])\n    ans+=idxa*(N-idxc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6353": {"id": 6353, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor i in range(N):\n    idxa=bisect_left(A,B[i])\n    idxc=bisect_right(C,B[i])\n    ans+=idxa*(N-idxc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6354": {"id": 6354, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nC = sorted(C)\nans = 0\nfor i in B:\n    ans += (bisect.bisect_left(A, i)) * (N - bisect.bisect_right(C, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6355": {"id": 6355, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nC = sorted(C)\nans = 0\nfor i in B:\n    ans += (bisect.bisect_left(A, i)) * (N - bisect.bisect_right(C, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6356": {"id": 6356, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA = sorted(A)\nC = sorted(C)\nans = 0\nfor i in B:\n    ans += (bisect.bisect_left(A, i)) * (N - bisect.bisect_right(C, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6357": {"id": 6357, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6358": {"id": 6358, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6359": {"id": 6359, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6360": {"id": 6360, "code": "from bisect import bisect_right\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    l = [0] * n\n    for index, i in enumerate(b):\n        l[index] = n - bisect_right(c, i)\n    s = [l[-1]] * n\n    for i in range(n - 2, -1, -1):\n        s[i] = s[i + 1] + l[i]\n    ans = 0\n    for i in a:\n        j = bisect_right(b, i)\n        if j < n:\n            ans += s[j]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6361": {"id": 6361, "code": "from bisect import bisect_right\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    l = [0] * n\n    for index, i in enumerate(b):\n        l[index] = n - bisect_right(c, i)\n    s = [l[-1]] * n\n    for i in range(n - 2, -1, -1):\n        s[i] = s[i + 1] + l[i]\n    ans = 0\n    for i in a:\n        j = bisect_right(b, i)\n        if j < n:\n            ans += s[j]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6362": {"id": 6362, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ns = 0\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nia = -1\nic = -1\nfor b in B:\n  while True:\n    if ia == N-1 or A[ia+1]>=b: \n      break\n    ia += 1\n  while True:\n    if ic == N-1 or C[ic+1]>b:\n      break\n    ic += 1\n  s += (ia+1)*(N-ic-1)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6363": {"id": 6363, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ns = 0\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nia = -1\nic = -1\nfor b in B:\n  while True:\n    if ia == N-1 or A[ia+1]>=b: \n      break\n    ia += 1\n  while True:\n    if ic == N-1 or C[ic+1]>b:\n      break\n    ic += 1\n  s += (ia+1)*(N-ic-1)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6364": {"id": 6364, "code": "from bisect import *\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6365": {"id": 6365, "code": "from bisect import *\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6366": {"id": 6366, "code": "from bisect import *\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6367": {"id": 6367, "code": "from bisect import bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nd=[0]\ne=[]\nfor i in range(n):\n    d.append(bisect_left(a,b[i])+d[-1])\n    e.append(bisect_left(b,c[i]))\nans=0\nfor i in e:\n    ans+=d[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6368": {"id": 6368, "code": "from bisect import bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nd=[0]\ne=[]\nfor i in range(n):\n    d.append(bisect_left(a,b[i])+d[-1])\n    e.append(bisect_left(b,c[i]))\nans=0\nfor i in e:\n    ans+=d[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6369": {"id": 6369, "code": "from bisect import bisect_left\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nd=[0]\ne=[]\nfor i in range(n):\n    d.append(bisect_left(a,b[i])+d[-1])\n    e.append(bisect_left(b,c[i]))\nans=0\nfor i in e:\n    ans+=d[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6370": {"id": 6370, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ndef func(x, y):\n    i = 0\n    j = 0\n    cnt = 0\n    s = [0 for i in range(n)]\n    while j < n and i < n:\n        if y[j] > x[i]:\n            cnt += 1\n            i += 1\n        else:\n            s[j] = cnt\n            j += 1\n    if i == n:\n        for k in range(j,n):\n            s[k] = cnt\n    return s\ns1 = func(a, b)\nfor i in range(1, n):\n    s1[i] += s1[i-1]\ns2 = func(b, c)\ncnt = 0\nfor i in range(n):\n    if s2[i] != 0:\n        cnt += s1[s2[i]-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6371": {"id": 6371, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ndef func(x, y):\n    i = 0\n    j = 0\n    cnt = 0\n    s = [0 for i in range(n)]\n    while j < n and i < n:\n        if y[j] > x[i]:\n            cnt += 1\n            i += 1\n        else:\n            s[j] = cnt\n            j += 1\n    if i == n:\n        for k in range(j,n):\n            s[k] = cnt\n    return s\ns1 = func(a, b)\nfor i in range(1, n):\n    s1[i] += s1[i-1]\ns2 = func(b, c)\ncnt = 0\nfor i in range(n):\n    if s2[i] != 0:\n        cnt += s1[s2[i]-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6372": {"id": 6372, "code": "def main():\n    from bisect import bisect_right\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    num_greater_than_b = []\n    for b in B:\n        num_greater_than_b.append(N-bisect_right(C,b))\n    csum = [0]*(N+1)\n    for i in range(N-1,-1,-1):\n        csum[i] = csum[i+1]+num_greater_than_b[i]\n    ans = 0\n    for i,a in enumerate(A):\n        ans += csum[bisect_right(B,a)]\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6373": {"id": 6373, "code": "def main():\n    from bisect import bisect_right\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    num_greater_than_b = []\n    for b in B:\n        num_greater_than_b.append(N-bisect_right(C,b))\n    csum = [0]*(N+1)\n    for i in range(N-1,-1,-1):\n        csum[i] = csum[i+1]+num_greater_than_b[i]\n    ans = 0\n    for i,a in enumerate(A):\n        ans += csum[bisect_right(B,a)]\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6374": {"id": 6374, "code": "def main():\n    from bisect import bisect_right\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [6, 9, 58, 79, 84, 323]\n    C = [2, 50, 79, 288, 383, 2643]\n    num_greater_than_b = []\n    for b in B:\n        num_greater_than_b.append(N-bisect_right(C,b))\n    csum = [0]*(N+1)\n    for i in range(N-1,-1,-1):\n        csum[i] = csum[i+1]+num_greater_than_b[i]\n    ans = 0\n    for i,a in enumerate(A):\n        ans += csum[bisect_right(B,a)]\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6375": {"id": 6375, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor j in range(n):\n    bind = j\n    top = n\n    bot = -1\n    while top-bot > 1:\n        mid = (top+bot)//2\n        if b[bind] > a[mid]:bot = mid\n        else:top = mid\n    aind = bot\n    l = -1\n    r = n\n    while r-l> 1:\n        cen = (l+r)//2\n        if b[bind] < c[cen]:r = cen\n        else:l = cen\n    cind = r\n    ans +=(aind+1)*(n-cind)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6376": {"id": 6376, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6377": {"id": 6377, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6378": {"id": 6378, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 6\n    A = [3, 14, 159, 2, 6, 53]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2643, 383, 2, 79, 50, 288]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6379": {"id": 6379, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6380": {"id": 6380, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6381": {"id": 6381, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6382": {"id": 6382, "code": "import bisect\nfrom collections import defaultdict\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\nb_counts = []\nfor b in Bs[::-1]:\n    count = len(Cs) - bisect.bisect(Cs, b)\n    if len(b_counts) > 0:\n        count += b_counts[-1]\n    b_counts.append(count)\nb_counts = b_counts[::-1]\ntotal = 0\nfor a in As:\n    i = bisect.bisect(Bs, a)\n    if i >= len(Bs):\n        continue\n    total += b_counts[i]\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6383": {"id": 6383, "code": "import bisect\nfrom collections import defaultdict\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\nb_counts = []\nfor b in Bs[::-1]:\n    count = len(Cs) - bisect.bisect(Cs, b)\n    if len(b_counts) > 0:\n        count += b_counts[-1]\n    b_counts.append(count)\nb_counts = b_counts[::-1]\ntotal = 0\nfor a in As:\n    i = bisect.bisect(Bs, a)\n    if i >= len(Bs):\n        continue\n    total += b_counts[i]\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6384": {"id": 6384, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6385": {"id": 6385, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6386": {"id": 6386, "code": "n = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6387": {"id": 6387, "code": "import sys\ninput = sys.stdin.readline\nN = 2\nA = [1, 5]\nA = A[:N]\nB = [2, 4]\nB = B[:N]\nC = [3, 6]\nC = C[:N]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nBB = [0] * N\na = 0\nfor b in range(N):\n    while A[a] < B[b] and a <= N-2:\n        a += 1\n    if a == N-1 and A[a] < B[b]:\n        BB[b] = N\n    else:\n        BB[b] = a\nBsum = [0] * N\nBsum[0] = BB[0]\nfor bb in range(1,N):\n    Bsum[bb] = Bsum[bb-1] + BB[bb]\nans = 0\nb_ = 0\nfor c in range(N):\n    while B[b_] < C[c] and b_ <= N-2:\n        b_ += 1\n    if b_ == N-1 and B[b_] < C[c]:\n        b_ += 1\n    b_ -= 1\n    if b_ == -1:\n        b_ = 0\n        continue\n    ans += Bsum[b_]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6388": {"id": 6388, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ndef isOK(target,mid):\n  return target < mid\ndef isOK_dep(target,mid):\n  return target <= mid\ndef bin_search(l,r,li,target):\n  left = l\n  right = r\n  while right-left>1:\n    mid = (left + right)//2\n    if isOK(target,li[mid]):\n      right = mid\n    else:\n      left = mid\n  return left\ndef bin_search_dep(l,r,li,target):\n  left = l\n  right = r\n  while right-left>1:\n    mid = (left + right)//2\n    if isOK_dep(target,li[mid]):\n      right = mid\n    else:\n      left = mid\n  return left\nans = 0\nfor i in range(n):\n  top,bottom = 0,0\n  top += bin_search_dep(-1,n,A,B[i]) + 1\n  bottom += n-bin_search(-1,n,C,B[i])-1\n  ans += top * bottom\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6389": {"id": 6389, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nF = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    b = B[i]\n    indC = bisect_right(C,b)\n    if i<N-1:\n        indC1 = bisect_right(C,B[i+1])\n    else:\n        indC1 = N\n    F[i] = F[i+1]+indC1-indC\nG = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    G[i] = G[i+1]+F[i]\ncnt = 0\nfor i in range(N):\n    a = A[i]\n    indB = bisect_right(B,a)\n    cnt += G[indB]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6390": {"id": 6390, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nF = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    b = B[i]\n    indC = bisect_right(C,b)\n    if i<N-1:\n        indC1 = bisect_right(C,B[i+1])\n    else:\n        indC1 = N\n    F[i] = F[i+1]+indC1-indC\nG = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    G[i] = G[i+1]+F[i]\ncnt = 0\nfor i in range(N):\n    a = A[i]\n    indB = bisect_right(B,a)\n    cnt += G[indB]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6391": {"id": 6391, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6392": {"id": 6392, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6393": {"id": 6393, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6394": {"id": 6394, "code": "import bisect\nn = 2\nalist = [1, 5]\nblist = [2, 4]\nclist = [3, 6]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6395": {"id": 6395, "code": "import bisect\nn = 3\nalist = [1, 1, 1]\nblist = [2, 2, 2]\nclist = [3, 3, 3]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6396": {"id": 6396, "code": "import bisect\nn = 6\nalist = [2, 3, 6, 14, 53, 159]\nblist = [58, 9, 79, 323, 84, 6]\nclist = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6397": {"id": 6397, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBC = {}\nfor i in range(N):\n  rank = N - bisect.bisect_right(C, B[i])\n  BC[B[i]] = rank\nBCS = [0 for _ in range(N)]\nBCS[N-1] = BC[B[N-1]]\nfor i in range(N-2,-1,-1):\n  BCS[i] =  BCS[i+1] + BC[B[i]]\nans = 0\nfor i in range(N):\n  rank = bisect.bisect_right(B, A[i])\n  if rank < N:\n    ans += BCS[rank]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6398": {"id": 6398, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBC = {}\nfor i in range(N):\n  rank = N - bisect.bisect_right(C, B[i])\n  BC[B[i]] = rank\nBCS = [0 for _ in range(N)]\nBCS[N-1] = BC[B[N-1]]\nfor i in range(N-2,-1,-1):\n  BCS[i] =  BCS[i+1] + BC[B[i]]\nans = 0\nfor i in range(N):\n  rank = bisect.bisect_right(B, A[i])\n  if rank < N:\n    ans += BCS[rank]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6399": {"id": 6399, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\ncnt = 0\nfor i in b:\n    cnt += bisect_left(a,i)*(n-bisect_right(c,i))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6400": {"id": 6400, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\ncnt = 0\nfor i in b:\n    cnt += bisect_left(a,i)*(n-bisect_right(c,i))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6401": {"id": 6401, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\ncnt = 0\nfor i in b:\n    cnt += bisect_left(a,i)*(n-bisect_right(c,i))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6402": {"id": 6402, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    ia = min(bisect.bisect_left(A,b),N-1)\n    ic = min(bisect.bisect_right(C,b),N-1)\n    a = ia if A[ia]>=b else ia+1\n    c = N-ic-1 if C[ic]<=b else N-ic\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6403": {"id": 6403, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    ia = min(bisect.bisect_left(A,b),N-1)\n    ic = min(bisect.bisect_right(C,b),N-1)\n    a = ia if A[ia]>=b else ia+1\n    c = N-ic-1 if C[ic]<=b else N-ic\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6404": {"id": 6404, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    ia = min(bisect.bisect_left(A,b),N-1)\n    ic = min(bisect.bisect_right(C,b),N-1)\n    a = ia if A[ia]>=b else ia+1\n    c = N-ic-1 if C[ic]<=b else N-ic\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6405": {"id": 6405, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nba = []\nbaccum = []\ntmp = 0\nfor bb in b:\n    ba.append(bisect.bisect_right(a, bb-1))\n    tmp += ba[-1]\n    baccum.append(tmp) \ncb = []\nfor cc in c:\n    cb.append(bisect.bisect_right(b, cc-1))\nret = 0\nfor cc in cb:\n    if cc == 0:\n        continue\n    ret += baccum[cc-1] \nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6406": {"id": 6406, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nba = []\nbaccum = []\ntmp = 0\nfor bb in b:\n    ba.append(bisect.bisect_right(a, bb-1))\n    tmp += ba[-1]\n    baccum.append(tmp) \ncb = []\nfor cc in c:\n    cb.append(bisect.bisect_right(b, cc-1))\nret = 0\nfor cc in cb:\n    if cc == 0:\n        continue\n    ret += baccum[cc-1] \nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6407": {"id": 6407, "code": "from bisect import bisect_left, bisect_right\nn = 2\nlst_a = [1, 5]\nlst_b = [2, 4]\nlst_c = [3, 6]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6408": {"id": 6408, "code": "from bisect import bisect_left, bisect_right\nn = 3\nlst_a = [1, 1, 1]\nlst_b = [2, 2, 2]\nlst_c = [3, 3, 3]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6409": {"id": 6409, "code": "from bisect import bisect_left, bisect_right\nn = 6\nlst_a = [2, 3, 6, 14, 53, 159]\nlst_b = [6, 9, 58, 79, 84, 323]\nlst_c = [2, 50, 79, 288, 383, 2643]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6410": {"id": 6410, "code": "import sys\nfrom bisect import bisect_left\ninput = sys.stdin.buffer.readline\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncumsum = [0]\nfor i in range(len(B)):\n    b = B[i]\n    a_idx = bisect_left(A, b)\n    cumsum.append(cumsum[i] + a_idx)\nans = 0\nfor i in range(len(C)):\n    c = C[i]\n    b_idx = bisect_left(B, c)\n    ans += cumsum[b_idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6411": {"id": 6411, "code": "import sys\nfrom bisect import bisect_left\ninput = sys.stdin.buffer.readline\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncumsum = [0]\nfor i in range(len(B)):\n    b = B[i]\n    a_idx = bisect_left(A, b)\n    cumsum.append(cumsum[i] + a_idx)\nans = 0\nfor i in range(len(C)):\n    c = C[i]\n    b_idx = bisect_left(B, c)\n    ans += cumsum[b_idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6412": {"id": 6412, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6413": {"id": 6413, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6414": {"id": 6414, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6415": {"id": 6415, "code": "n = 2\nan = [1, 5]\nbn = [0, 2, 4]\ncn = [3, 6]\ndpb = [0]*(n+1)\ndpc = [0]*n\ncnt = 0\nfor i in range(n+1):\n  while cnt < n and bn[i] > an[cnt]:\n    cnt += 1\n  dpb[i] = cnt\ncnt = 0\ntemp = 0\nfor i in range(n):\n  while cnt < n+1 and cn[i] > bn[cnt]:\n    temp += dpb[cnt]\n    cnt += 1\n  dpc[i] = temp\nprint(sum(dpc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6416": {"id": 6416, "code": "n = 3\nan = [1, 1, 1]\nbn = [0, 2, 2, 2]\ncn = [3, 3, 3]\ndpb = [0]*(n+1)\ndpc = [0]*n\ncnt = 0\nfor i in range(n+1):\n  while cnt < n and bn[i] > an[cnt]:\n    cnt += 1\n  dpb[i] = cnt\ncnt = 0\ntemp = 0\nfor i in range(n):\n  while cnt < n+1 and cn[i] > bn[cnt]:\n    temp += dpb[cnt]\n    cnt += 1\n  dpc[i] = temp\nprint(sum(dpc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6417": {"id": 6417, "code": "import bisect\nN = 2\nJ = [1, 5]\nK = [2, 4]\nL = [3, 6]\nJ.sort()\nK.sort()\nL.sort()\nS = 0\nfor i in range(N):\n  k = bisect.bisect_left(J,K[i])\n  l = N - bisect.bisect_right(L,K[i])  \n  S += k*l\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6418": {"id": 6418, "code": "import bisect\nN = 3\nJ = [1, 1, 1]\nK = [2, 2, 2]\nL = [3, 3, 3]\nJ.sort()\nK.sort()\nL.sort()\nS = 0\nfor i in range(N):\n  k = bisect.bisect_left(J,K[i])\n  l = N - bisect.bisect_right(L,K[i])  \n  S += k*l\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6419": {"id": 6419, "code": "import bisect\nN = 6\nJ = [3, 14, 159, 2, 6, 53]\nK = [58, 9, 79, 323, 84, 6]\nL = [2643, 383, 2, 79, 50, 288]\nJ.sort()\nK.sort()\nL.sort()\nS = 0\nfor i in range(N):\n  k = bisect.bisect_left(J,K[i])\n  l = N - bisect.bisect_right(L,K[i])  \n  S += k*l\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6420": {"id": 6420, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    tmp = 1\n    x = bisect.bisect_left(a, b[i])\n    y = bisect.bisect_right(c, b[i])\n    ans += x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6421": {"id": 6421, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    tmp = 1\n    x = bisect.bisect_left(a, b[i])\n    y = bisect.bisect_right(c, b[i])\n    ans += x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6422": {"id": 6422, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(n):\n    tmp = 1\n    x = bisect.bisect_left(a, b[i])\n    y = bisect.bisect_right(c, b[i])\n    ans += x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6423": {"id": 6423, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nbn = [0]*n\nj = 0\nfor i in range(n):\n  bi = b[i]\n  while(j<n):\n    if bi < c[j]:\n      bn[i] = n-j\n      break\n    j += 1\nbnt = sum(bn)\nbs = 0\nj = 0\nans = 0\nfor i in range(n):\n  ai = a[i]\n  while(j<n):\n    if ai < b[j]:\n      ans += bnt - bs\n      break\n    bs += bn[j]\n    j += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6424": {"id": 6424, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nbn = [0]*n\nj = 0\nfor i in range(n):\n  bi = b[i]\n  while(j<n):\n    if bi < c[j]:\n      bn[i] = n-j\n      break\n    j += 1\nbnt = sum(bn)\nbs = 0\nj = 0\nans = 0\nfor i in range(n):\n  ai = a[i]\n  while(j<n):\n    if ai < b[j]:\n      ans += bnt - bs\n      break\n    bs += bn[j]\n    j += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6425": {"id": 6425, "code": "def Binary_Search(A,x):\n    L=0\n    R=len(A)\n    while R-L>1:\n        C=(R+L-1)//2\n        if A[C]<=x:\n            L=C+1\n        else:\n            R=C+1\n    return L\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nA.append(A[-1]+1)\nB.sort()\nC.sort()\nC=[0]+C\nC=[-c for c in C[::-1]]\nS=0\nfor b in B:\n    S+=Binary_Search(A,b-1)*Binary_Search(C,-(b+1))\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6426": {"id": 6426, "code": "def Binary_Search(A,x):\n    L=0\n    R=len(A)\n    while R-L>1:\n        C=(R+L-1)//2\n        if A[C]<=x:\n            L=C+1\n        else:\n            R=C+1\n    return L\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nA.append(A[-1]+1)\nB.sort()\nC.sort()\nC=[0]+C\nC=[-c for c in C[::-1]]\nS=0\nfor b in B:\n    S+=Binary_Search(A,b-1)*Binary_Search(C,-(b+1))\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6427": {"id": 6427, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6428": {"id": 6428, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6429": {"id": 6429, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6430": {"id": 6430, "code": "from bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    B_count = [0] * N\n    for i in range(N):\n        index = bisect_right(C,B[i])\n        if index < N:\n            B_count[i] = N - index\n    D = [0] + list(accumulate(B_count))\n    ans = 0\n    for a in A:\n        index = bisect_right(B,a)\n        ans += D[N] - D[index]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6431": {"id": 6431, "code": "from bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    B_count = [0] * N\n    for i in range(N):\n        index = bisect_right(C,B[i])\n        if index < N:\n            B_count[i] = N - index\n    D = [0] + list(accumulate(B_count))\n    ans = 0\n    for a in A:\n        index = bisect_right(B,a)\n        ans += D[N] - D[index]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6432": {"id": 6432, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nB_ans = [0]*N\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i, b in enumerate(B):\n    bi = bisect.bisect_left(A, b)\n    B_ans[i] = B_ans[i-1] + bi\nfor j, c in enumerate(C):\n    ci = bisect.bisect_left(B, c)\n    if ci == 0:\n        continue\n    ans += B_ans[ci-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6433": {"id": 6433, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nB_ans = [0]*N\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i, b in enumerate(B):\n    bi = bisect.bisect_left(A, b)\n    B_ans[i] = B_ans[i-1] + bi\nfor j, c in enumerate(C):\n    ci = bisect.bisect_left(B, c)\n    if ci == 0:\n        continue\n    ans += B_ans[ci-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6434": {"id": 6434, "code": "from bisect import bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ans += bisect_left(A, b) * (N - bisect_left(C, b + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6435": {"id": 6435, "code": "from bisect import bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    ans += bisect_left(A, b) * (N - bisect_left(C, b + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6436": {"id": 6436, "code": "from bisect import bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ans += bisect_left(A, b) * (N - bisect_left(C, b + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6437": {"id": 6437, "code": "from bisect import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nbb = [n-bisect(c, b[i])  for i in range(n)]\nbbb = []\ntmp = 0\nfor i in range(n)[::-1]:\n    tmp += bb[i]\n    bbb.append(tmp)\nbbb = bbb[::-1]\nj = 0\nwhile i < n:\n    j = bisect(b, a[i], j,n-1)\n    if b[j] <= a[i]:\n        break\n    ans += bbb[j]\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6438": {"id": 6438, "code": "from bisect import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nbb = [n-bisect(c, b[i])  for i in range(n)]\nbbb = []\ntmp = 0\nfor i in range(n)[::-1]:\n    tmp += bb[i]\n    bbb.append(tmp)\nbbb = bbb[::-1]\nj = 0\nwhile i < n:\n    j = bisect(b, a[i], j,n-1)\n    if b[j] <= a[i]:\n        break\n    ans += bbb[j]\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6439": {"id": 6439, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\nbileft = bisect.bisect_left\nbiright = bisect.bisect_right\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort(); C.sort()\n    minA = min(A); maxA = max(A)\n    minC = min(C); maxC = max(C)\n    ans = 0\n    for b in B:\n        L = minA; R = maxA + 1\n        mid = (L + R) // 2\n        if b >= R:\n            L = R\n        else:\n            while L + 1 < R:\n                if mid <= b:\n                    L = mid\n                else:\n                    R = mid\n                mid = (L + R) // 2\n        a = bileft(A, L)\n        L = minC; R = maxC + 1\n        mid = (L + R) // 2\n        if b <= L-1:\n            L = L-1\n        else:\n            while L + 1 < R:\n                if mid <= b:\n                    L = mid\n                else:\n                    R = mid\n                mid = (L + R) // 2   \n        c = len(C) - biright(C, L)\n        ans += a*c\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6440": {"id": 6440, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6441": {"id": 6441, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6442": {"id": 6442, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6443": {"id": 6443, "code": "import bisect\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    B1 = [0]*N\n    for i in range(N):\n        b = B[i]\n        B1[i] = N - bisect.bisect_right(C, b)\n        if i != 0:\n            B1[i] += B1[i - 1]\n    A1 = [0]*N\n    for i in range(N):\n        a = A[i]\n        index = bisect.bisect_right(B, a)\n        if index == 0:\n            A1[i] = B1[-1]\n        elif index < N:\n            A1[i] = B1[-1] - B1[index - 1]\n    ans = sum(A1)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6444": {"id": 6444, "code": "import bisect\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    B1 = [0]*N\n    for i in range(N):\n        b = B[i]\n        B1[i] = N - bisect.bisect_right(C, b)\n        if i != 0:\n            B1[i] += B1[i - 1]\n    A1 = [0]*N\n    for i in range(N):\n        a = A[i]\n        index = bisect.bisect_right(B, a)\n        if index == 0:\n            A1[i] = B1[-1]\n        elif index < N:\n            A1[i] = B1[-1] - B1[index - 1]\n    ans = sum(A1)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6445": {"id": 6445, "code": "import bisect\nN = 2\nA = [1, 5]\nA.sort()\nB = [2, 4]\nB.sort()\nC = [-3, -6]\nC.sort()\nans=0\nfor b in B:\n    a=bisect.bisect_left(A,b)\n    c=bisect.bisect_left(C,-b)\n    ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6446": {"id": 6446, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nA.sort()\nB = [2, 2, 2]\nB.sort()\nC = [-3, -3, -3]\nC.sort()\nans=0\nfor b in B:\n    a=bisect.bisect_left(A,b)\n    c=bisect.bisect_left(C,-b)\n    ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6447": {"id": 6447, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nA.sort()\nB = [58, 9, 79, 323, 84, 6]\nB.sort()\nC = [-2643, -383, -2, -79, -50, -288]\nC.sort()\nans=0\nfor b in B:\n    a=bisect.bisect_left(A,b)\n    c=bisect.bisect_left(C,-b)\n    ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6448": {"id": 6448, "code": "from bisect import bisect_right\nfrom itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0] * N\nfor i,b in enumerate(B):\n    r = bisect_right(C, b)\n    Bcnt[i] = N - r\nBcnt = [0] + list(accumulate(Bcnt))\nAcnt = [0] * N\nfor i,a in enumerate(A):\n    r = bisect_right(B, a)\n    Acnt[i] = Bcnt[N] - Bcnt[r]\nprint(sum(Acnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6449": {"id": 6449, "code": "from bisect import bisect_right\nfrom itertools import accumulate\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0] * N\nfor i,b in enumerate(B):\n    r = bisect_right(C, b)\n    Bcnt[i] = N - r\nBcnt = [0] + list(accumulate(Bcnt))\nAcnt = [0] * N\nfor i,a in enumerate(A):\n    r = bisect_right(B, a)\n    Acnt[i] = Bcnt[N] - Bcnt[r]\nprint(sum(Acnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6450": {"id": 6450, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nnum=0\nn = 2\ntop = [1, 5]\nmid = [2, 4]\nund = [3, 6]\ntop.sort()\nmid.sort()\nund.sort()\nfor i in mid:\n    a=bisect.bisect_left(top,i)\n    c=n-bisect.bisect_right(und,i)\n    num+=a*c\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6451": {"id": 6451, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nnum=0\nn = 3\ntop = [1, 1, 1]\nmid = [2, 2, 2]\nund = [3, 3, 3]\ntop.sort()\nmid.sort()\nund.sort()\nfor i in mid:\n    a=bisect.bisect_left(top,i)\n    c=n-bisect.bisect_right(und,i)\n    num+=a*c\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6452": {"id": 6452, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nnum=0\nn = 6\ntop = [3, 14, 159, 2, 6, 53]\nmid = [58, 9, 79, 323, 84, 6]\nund = [2643, 383, 2, 79, 50, 288]\ntop.sort()\nmid.sort()\nund.sort()\nfor i in mid:\n    a=bisect.bisect_left(top,i)\n    c=n-bisect.bisect_right(und,i)\n    num+=a*c\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6453": {"id": 6453, "code": "import sys\ninput=sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\ndef ab_check(list_count,i):\n    ok=-1\n    ng=n\n    B=b[i]\n    while ng-ok>1:\n        mid=(ok+ng)//2\n        if list_count[mid]<B:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bc_check(list_count,i):\n    ok=n\n    ng=-1\n    B=b[i]\n    while ok-ng>1:\n        mid=(ok+ng)//2\n        if list_count[mid]>B:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\nfor i in range(n):\n    ans+=ab_check(a,i)*bc_check(c,i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6454": {"id": 6454, "code": "import sys\ninput=sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\ndef ab_check(list_count,i):\n    ok=-1\n    ng=n\n    B=b[i]\n    while ng-ok>1:\n        mid=(ok+ng)//2\n        if list_count[mid]<B:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bc_check(list_count,i):\n    ok=n\n    ng=-1\n    B=b[i]\n    while ok-ng>1:\n        mid=(ok+ng)//2\n        if list_count[mid]>B:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\nfor i in range(n):\n    ans+=ab_check(a,i)*bc_check(c,i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6455": {"id": 6455, "code": "from bisect import bisect\nfrom collections import deque\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6456": {"id": 6456, "code": "from bisect import bisect\nfrom collections import deque\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6457": {"id": 6457, "code": "from bisect import bisect\nfrom collections import deque\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6458": {"id": 6458, "code": "from collections import defaultdict\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nad = defaultdict(lambda: -1)\ni, j = 0, 0\nwhile i < N and j < N:\n    if A[i] < B[j]:\n        ad[i] = j\n        i += 1\n    else:\n        j += 1\nbd = defaultdict(lambda: -1)\ni, j = 0, 0\nwhile i < N and j < N:\n    if B[i] < C[j]:\n        bd[i] = j\n        i += 1\n    else:\n        j += 1\ncsum = [0] * N\nfor i in range(N):\n    if bd[i] >= 0:\n        csum[i] = N-bd[i]\nbsum = [0]* N\ncnt = 0\nfor i in range(N):\n    cnt += csum[N-1-i]\n    bsum[N-1-i] = cnt\nans = 0\nfor i in range(N):\n    if ad[i] >= 0:\n        ans += bsum[ad[i]]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6459": {"id": 6459, "code": "n = 2\ndat_a = [1, 5]\ndat_b = [2, 4]\ndat_c = [3, 6]\ndat_a.sort()\ndat_b.sort()\ndat_c.sort()\nimport bisect\nres = 0\nfor i in range(n):\n    x = bisect.bisect_left(dat_a, dat_b[i])\n    y = bisect.bisect_right(dat_c, dat_b[i])\n    res += x * (n - y)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6460": {"id": 6460, "code": "n = 3\ndat_a = [1, 1, 1]\ndat_b = [2, 2, 2]\ndat_c = [3, 3, 3]\ndat_a.sort()\ndat_b.sort()\ndat_c.sort()\nimport bisect\nres = 0\nfor i in range(n):\n    x = bisect.bisect_left(dat_a, dat_b[i])\n    y = bisect.bisect_right(dat_c, dat_b[i])\n    res += x * (n - y)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6461": {"id": 6461, "code": "n = 6\ndat_a = [3, 14, 159, 2, 6, 53]\ndat_b = [58, 9, 79, 323, 84, 6]\ndat_c = [2643, 383, 2, 79, 50, 288]\ndat_a.sort()\ndat_b.sort()\ndat_c.sort()\nimport bisect\nres = 0\nfor i in range(n):\n    x = bisect.bisect_left(dat_a, dat_b[i])\n    y = bisect.bisect_right(dat_c, dat_b[i])\n    res += x * (n - y)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6462": {"id": 6462, "code": "import bisect\nN = 2\nA = (1, 5)\nB = (2, 4)\nC = (3, 6)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6463": {"id": 6463, "code": "import bisect\nN = 3\nA = (1, 1, 1)\nB = (2, 2, 2)\nC = (3, 3, 3)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6464": {"id": 6464, "code": "import bisect\nN = 6\nA = (2, 3, 6, 14, 53, 159)\nB = (58, 9, 79, 323, 84, 6)\nC = (2, 50, 79, 288, 383, 2643)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6465": {"id": 6465, "code": "import bisect as bi\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6466": {"id": 6466, "code": "import bisect as bi\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6467": {"id": 6467, "code": "import bisect as bi\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6468": {"id": 6468, "code": "import bisect\na = 2\nb = [1, 5]\nb.sort()\nc = [2, 4]\nd = [3, 6]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6469": {"id": 6469, "code": "import bisect\na = 3\nb = [1, 1, 1]\nb.sort()\nc = [2, 2, 2]\nd = [3, 3, 3]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6470": {"id": 6470, "code": "import bisect\na = 6\nb = [3, 14, 159, 2, 6, 53]\nb.sort()\nc = [58, 9, 79, 323, 84, 6]\nd = [2643, 383, 2, 79, 50, 288]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6471": {"id": 6471, "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6472": {"id": 6472, "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6473": {"id": 6473, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6474": {"id": 6474, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nrui=[0]\nsm=0\nfor mid in b:\n    ind = bisect.bisect_left(c,mid+1)\n    sm+= (n-ind)\n    rui.append(sm)\nans=0\nfor top in a:\n    ind = bisect.bisect_left(b,top+1)\n    tmp = rui[-1] - rui[ind]\n    ans+=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6475": {"id": 6475, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nrui=[0]\nsm=0\nfor mid in b:\n    ind = bisect.bisect_left(c,mid+1)\n    sm+= (n-ind)\n    rui.append(sm)\nans=0\nfor top in a:\n    ind = bisect.bisect_left(b,top+1)\n    tmp = rui[-1] - rui[ind]\n    ans+=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6476": {"id": 6476, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6477": {"id": 6477, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6478": {"id": 6478, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6479": {"id": 6479, "code": "import bisect\nn = 2\nal = [1, 5]\nbl = [2, 4]\ncl = [3, 6]\nal.sort()\nbl.sort()\ncl.sort()\nans = 0\ntmp1 = [n]*n\ntmp2 = [n]*n\nfor i in range(n):\n    j = bisect.bisect_left(al, bl[i])\n    tmp1[i] = j\nfor i in range(n):\n    j = bisect.bisect_right(cl, bl[i])\n    tmp2[i] = n-j\nfor i in range(n):\n    ans += tmp1[i]*tmp2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6480": {"id": 6480, "code": "import bisect\nn = 3\nal = [1, 1, 1]\nbl = [2, 2, 2]\ncl = [3, 3, 3]\nal.sort()\nbl.sort()\ncl.sort()\nans = 0\ntmp1 = [n]*n\ntmp2 = [n]*n\nfor i in range(n):\n    j = bisect.bisect_left(al, bl[i])\n    tmp1[i] = j\nfor i in range(n):\n    j = bisect.bisect_right(cl, bl[i])\n    tmp2[i] = n-j\nfor i in range(n):\n    ans += tmp1[i]*tmp2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6481": {"id": 6481, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ntotal = 0\nfor i in range(N):\n    a = bisect.bisect_left(A,B[i])\n    c = N - bisect.bisect_right(C,B[i])\n    total += a*c\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6482": {"id": 6482, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ntotal = 0\nfor i in range(N):\n    a = bisect.bisect_left(A,B[i])\n    c = N - bisect.bisect_right(C,B[i])\n    total += a*c\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6483": {"id": 6483, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\ntotal = 0\nfor i in range(N):\n    a = bisect.bisect_left(A,B[i])\n    c = N - bisect.bisect_right(C,B[i])\n    total += a*c\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6484": {"id": 6484, "code": "from bisect import bisect_left,bisect_right\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in range(n):\n    bc=n-bisect_right(c,b[i])\n    ba=bisect_left(a,b[i])\n    ans+=bc*ba    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6485": {"id": 6485, "code": "from bisect import bisect_left,bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n    bc=n-bisect_right(c,b[i])\n    ba=bisect_left(a,b[i])\n    ans+=bc*ba    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6486": {"id": 6486, "code": "from bisect import bisect_left,bisect_right\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n    bc=n-bisect_right(c,b[i])\n    ba=bisect_left(a,b[i])\n    ans+=bc*ba    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6487": {"id": 6487, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    S = [0]\n    s = 0\n    i = 0\n    for b in B:\n        while i < N:\n            if b <= A[i]:\n                break\n            i += 1\n        s += i\n        S.append(s)\n    t = 0\n    i = 0\n    for c in C:\n        while i < N:\n            if c <= B[i]:\n                break\n            i += 1\n        t += S[i]\n    print(t)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6488": {"id": 6488, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    S = [0]\n    s = 0\n    i = 0\n    for b in B:\n        while i < N:\n            if b <= A[i]:\n                break\n            i += 1\n        s += i\n        S.append(s)\n    t = 0\n    i = 0\n    for c in C:\n        while i < N:\n            if c <= B[i]:\n                break\n            i += 1\n        t += S[i]\n    print(t)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6489": {"id": 6489, "code": "import sys\nimport bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6490": {"id": 6490, "code": "import sys\nimport bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6491": {"id": 6491, "code": "import sys\nimport bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6492": {"id": 6492, "code": "def resolve():\n    import bisect\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6493": {"id": 6493, "code": "def resolve():\n    import bisect\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6494": {"id": 6494, "code": "def resolve():\n    import bisect\n    n = 6\n    a = [2, 3, 6, 14, 53, 159]\n    b = [6, 9, 58, 79, 84, 323]\n    c = [2, 50, 79, 288, 383, 2643]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6495": {"id": 6495, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6496": {"id": 6496, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6497": {"id": 6497, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6498": {"id": 6498, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6499": {"id": 6499, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6500": {"id": 6500, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6501": {"id": 6501, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA=sorted(A)\nB=sorted(B)\nC=sorted(C)\nA2=[0]*N\ns=0\ni=0\nn=A[s]\nwhile True:\n  if B[i]>n:\n    A2[i]+=1\n    s+=1\n    if s==N:\n      break\n    n=A[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  A2[i]=A2[i-1]+A2[i]\nB2=[0]*N\ns=0\ni=0\nn=B[s]\nwhile True:\n  if C[i]>n:\n    B2[i]+=A2[s]\n    s+=1\n    if s==N:\n      break\n    n=B[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  B2[i]=B2[i-1]+B2[i]\nprint(sum(B2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "6502": {"id": 6502, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA=sorted(A)\nB=sorted(B)\nC=sorted(C)\nA2=[0]*N\ns=0\ni=0\nn=A[s]\nwhile True:\n  if B[i]>n:\n    A2[i]+=1\n    s+=1\n    if s==N:\n      break\n    n=A[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  A2[i]=A2[i-1]+A2[i]\nB2=[0]*N\ns=0\ni=0\nn=B[s]\nwhile True:\n  if C[i]>n:\n    B2[i]+=A2[s]\n    s+=1\n    if s==N:\n      break\n    n=B[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  B2[i]=B2[i-1]+B2[i]\nprint(sum(B2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "6503": {"id": 6503, "code": "import bisect\nN = 2\na = map(int, \"1 5\".split(\" \"))\nb = map(int, \"2 4\".split(\" \"))\nc = map(int, \"3 6\".split(\" \"))\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nresult = 0\nfor i in b:\n    ta = bisect.bisect_left(a,i)\n    tc = bisect.bisect_right(c,i)\n    result += ta*(N-tc)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6504": {"id": 6504, "code": "import bisect\nN = 3\na = map(int, \"1 1 1\".split(\" \"))\nb = map(int, \"2 2 2\".split(\" \"))\nc = map(int, \"3 3 3\".split(\" \"))\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nresult = 0\nfor i in b:\n    ta = bisect.bisect_left(a,i)\n    tc = bisect.bisect_right(c,i)\n    result += ta*(N-tc)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6505": {"id": 6505, "code": "import bisect\nN = 6\na = map(int, \"3 14 159 2 6 53\".split(\" \"))\nb = map(int, \"58 9 79 323 84 6\".split(\" \"))\nc = map(int, \"2643 383 2 79 50 288\".split(\" \"))\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nresult = 0\nfor i in b:\n    ta = bisect.bisect_left(a,i)\n    tc = bisect.bisect_right(c,i)\n    result += ta*(N-tc)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6506": {"id": 6506, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nans = 0\nfor i in range(n):\n    ans1 = 0\n    ans2 = 0\n    ok = -1\n    ng = n\n    while abs(ng - ok) > 1:\n        mid = (ok + ng) // 2\n        if a[mid] < b[i] :\n            ok = mid\n        else:\n            ng = mid\n        if abs(ng - ok) == 1:\n            ans1 += ok + 1\n    ok = n\n    ng = -1\n    while abs(ng - ok) > 1:\n        mid = (ok + ng) // 2\n        if b[i] < c[mid]:\n            ok = mid\n        else:\n            ng = mid\n        if abs(ng - ok) == 1:\n            ans2 += n - ok\n    ans += ans1 * ans2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6507": {"id": 6507, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6508": {"id": 6508, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6509": {"id": 6509, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6510": {"id": 6510, "code": "def main(n,a,b,c):\n  import bisect\n  ans=0\n  for i in range(n):\n    na=bisect.bisect_left(a,b[i])\n    nc=n-bisect.bisect_right(c,b[i])\n    ans+=na*nc\n  print(ans)\nif __name__=='__main__':\n  n = 2\n  a = [1, 5]\n  b = [2, 4]\n  c = [3, 6]\n  main(n,a,b,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6511": {"id": 6511, "code": "def main(n,a,b,c):\n  import bisect\n  ans=0\n  for i in range(n):\n    na=bisect.bisect_left(a,b[i])\n    nc=n-bisect.bisect_right(c,b[i])\n    ans+=na*nc\n  print(ans)\nif __name__=='__main__':\n  n = 3\n  a = [1, 1, 1]\n  b = [2, 2, 2]\n  c = [3, 3, 3]\n  main(n,a,b,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6512": {"id": 6512, "code": "def main(n,a,b,c):\n  import bisect\n  ans=0\n  for i in range(n):\n    na=bisect.bisect_left(a,b[i])\n    nc=n-bisect.bisect_right(c,b[i])\n    ans+=na*nc\n  print(ans)\nif __name__=='__main__':\n  n = 6\n  a = [2, 3, 6, 14, 53, 159]\n  b = [6, 9, 58, 79, 84, 323]\n  c = [2, 50, 79, 288, 383, 2643]\n  main(n,a,b,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6513": {"id": 6513, "code": "N = 2\nA = map(int, \"1 5\".split())\nB = map(int, \"2 4\".split())\nC = map(int, \"3 6\".split())\nL = []\nL.extend(((x, 3)  for x in A))\nL.extend(((x, 2)  for x in B))\nL.extend(((x, 1)  for x in C))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6514": {"id": 6514, "code": "N = 3\nA = map(int, \"1 1 1\".split())\nB = map(int, \"2 2 2\".split())\nC = map(int, \"3 3 3\".split())\nL = []\nL.extend(((x, 3)  for x in A))\nL.extend(((x, 2)  for x in B))\nL.extend(((x, 1)  for x in C))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6515": {"id": 6515, "code": "from bisect import bisect_right, bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6516": {"id": 6516, "code": "from bisect import bisect_right, bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6517": {"id": 6517, "code": "from bisect import bisect_right, bisect_left\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6518": {"id": 6518, "code": "import bisect\ndef main():\n    n = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6519": {"id": 6519, "code": "import bisect\ndef main():\n    n = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6520": {"id": 6520, "code": "import bisect\ndef main():\n    n = 6\n    A = [3, 14, 159, 2, 6, 53]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2643, 383, 2, 79, 50, 288]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6521": {"id": 6521, "code": "from bisect import bisect_right, bisect_left\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a_id = bisect_left(A, b)\n    c_id = bisect_right(C, b)\n    ans += a_id * (len(C) - c_id)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6522": {"id": 6522, "code": "from bisect import bisect_right, bisect_left\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a_id = bisect_left(A, b)\n    c_id = bisect_right(C, b)\n    ans += a_id * (len(C) - c_id)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6523": {"id": 6523, "code": "from bisect import bisect_right, bisect_left\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a_id = bisect_left(A, b)\n    c_id = bisect_right(C, b)\n    ans += a_id * (len(C) - c_id)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6524": {"id": 6524, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nX = []\nj = 0\nfor i in range(n):\n    while j < n and B[i] >= C[j]:\n        j += 1\n    X.append(n-j)\nS = [0]\nfor i in range(n):\n    S.append(S[-1]+X[i])\nj = 0\nans = 0\nfor i in range(n):\n    while j < n and A[i] >= B[j]:\n        j += 1\n    ans += S[n]-S[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6525": {"id": 6525, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nX = []\nj = 0\nfor i in range(n):\n    while j < n and B[i] >= C[j]:\n        j += 1\n    X.append(n-j)\nS = [0]\nfor i in range(n):\n    S.append(S[-1]+X[i])\nj = 0\nans = 0\nfor i in range(n):\n    while j < n and A[i] >= B[j]:\n        j += 1\n    ans += S[n]-S[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6526": {"id": 6526, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    from bisect import bisect\n    ans = []\n    ans2 = []\n    for a in A:\n        b = bisect(B, a)\n        ans.append(N-b)\n    for b in B:\n        c = bisect(C, b)\n        ans2.append(N-c)\n    from itertools import accumulate\n    ans2 = list(accumulate([0] + ans2[::-1]))\n    answer = 0\n    for a in ans:\n        answer += ans2[a]\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6527": {"id": 6527, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    from bisect import bisect\n    ans = []\n    ans2 = []\n    for a in A:\n        b = bisect(B, a)\n        ans.append(N-b)\n    for b in B:\n        c = bisect(C, b)\n        ans2.append(N-c)\n    from itertools import accumulate\n    ans2 = list(accumulate([0] + ans2[::-1]))\n    answer = 0\n    for a in ans:\n        answer += ans2[a]\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6528": {"id": 6528, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6529": {"id": 6529, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6530": {"id": 6530, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6531": {"id": 6531, "code": "n = 2\na_list = [1, 5]\nb_list = [2, 4]\nc_list = [3, 6]\na_list.sort()\nb_list.sort()\nc_list.sort()\nn_b = []\ncurrent = 0\nfor i in range(n):\n    a = a_list[i]\n    while current <= n-1 and b_list[current] <= a:\n        current += 1\n    n_b.append(n-current)\nn_c = []\ncurrent = 0\nfor i in range(n):\n    b = b_list[i]\n    while current <= n-1 and c_list[current] <= b:\n        current += 1\n    n_c.append(n-current)\ncum_nc = [0]*n\ncum_nc[0] = n_c[n-1]\nfor i in range(1, n):\n    cum_nc[i] = cum_nc[i-1] + n_c[n-1-i]\nans = 0\nfor i in n_b:\n    if i > 0:\n        ans += cum_nc[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6532": {"id": 6532, "code": "n = 3\na_list = [1, 1, 1]\nb_list = [2, 2, 2]\nc_list = [3, 3, 3]\na_list.sort()\nb_list.sort()\nc_list.sort()\nn_b = []\ncurrent = 0\nfor i in range(n):\n    a = a_list[i]\n    while current <= n-1 and b_list[current] <= a:\n        current += 1\n    n_b.append(n-current)\nn_c = []\ncurrent = 0\nfor i in range(n):\n    b = b_list[i]\n    while current <= n-1 and c_list[current] <= b:\n        current += 1\n    n_c.append(n-current)\ncum_nc = [0]*n\ncum_nc[0] = n_c[n-1]\nfor i in range(1, n):\n    cum_nc[i] = cum_nc[i-1] + n_c[n-1-i]\nans = 0\nfor i in n_b:\n    if i > 0:\n        ans += cum_nc[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6533": {"id": 6533, "code": "import bisect\nn = 2\na_list = [1, 5]\nb_list = [2, 4]\nc_list = [3, 6]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6534": {"id": 6534, "code": "import bisect\nn = 3\na_list = [1, 1, 1]\nb_list = [2, 2, 2]\nc_list = [3, 3, 3]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6535": {"id": 6535, "code": "import bisect\nn = 6\na_list = [3, 14, 159, 2, 6, 53]\nb_list = [58, 9, 79, 323, 84, 6]\nc_list = [2643, 383, 2, 79, 50, 288]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6536": {"id": 6536, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6537": {"id": 6537, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6538": {"id": 6538, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2, 50, 79, 288, 383, 2643]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6539": {"id": 6539, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6540": {"id": 6540, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6541": {"id": 6541, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6542": {"id": 6542, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6543": {"id": 6543, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6544": {"id": 6544, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6545": {"id": 6545, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6546": {"id": 6546, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6547": {"id": 6547, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6548": {"id": 6548, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nfrom bisect import bisect_left\nfrom itertools import accumulate\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncheck = [0] * n\nans = 0\nfor i in range(n):\n    index = bisect_left(c, b[i])\n    if index != n:\n        if c[index] == b[i]:\n            index = bisect_left(c, b[i] + 1)\n    check[i] = n - index\ncumsum = [0] + list(accumulate(check[::-1]))\nfor aa in a:\n    index = bisect_left(b, aa)\n    if index != n:\n        if b[index] == aa:\n            index = bisect_left(b, aa + 1)\n    ans += cumsum[n - index]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6549": {"id": 6549, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nfrom bisect import bisect_left\nfrom itertools import accumulate\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncheck = [0] * n\nans = 0\nfor i in range(n):\n    index = bisect_left(c, b[i])\n    if index != n:\n        if c[index] == b[i]:\n            index = bisect_left(c, b[i] + 1)\n    check[i] = n - index\ncumsum = [0] + list(accumulate(check[::-1]))\nfor aa in a:\n    index = bisect_left(b, aa)\n    if index != n:\n        if b[index] == aa:\n            index = bisect_left(b, aa + 1)\n    ans += cumsum[n - index]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6550": {"id": 6550, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\na.sort()\nb.sort()\nc.sort(reverse=True)\nc = [-x for x in c]\nans = 0\nfor x in b:\n    ans += bisect.bisect_left(a, x) * (bisect.bisect_left(c, -x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6551": {"id": 6551, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\na.sort()\nb.sort()\nc.sort(reverse=True)\nc = [-x for x in c]\nans = 0\nfor x in b:\n    ans += bisect.bisect_left(a, x) * (bisect.bisect_left(c, -x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6552": {"id": 6552, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nimport bisect\na.sort()\nb.sort()\nc.sort(reverse=True)\nc = [-x for x in c]\nans = 0\nfor x in b:\n    ans += bisect.bisect_left(a, x) * (bisect.bisect_left(c, -x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6553": {"id": 6553, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6554": {"id": 6554, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6555": {"id": 6555, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6556": {"id": 6556, "code": "def main():\n    N = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6557": {"id": 6557, "code": "def main():\n    N = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6558": {"id": 6558, "code": "def main():\n    N = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6559": {"id": 6559, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6560": {"id": 6560, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6561": {"id": 6561, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 6\nAs = [2, 3, 6, 14, 53, 159]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6562": {"id": 6562, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6563": {"id": 6563, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6564": {"id": 6564, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6565": {"id": 6565, "code": "import bisect\nn = 2\na = [1, 5]\na = sorted(a)\nb = [2, 4]\nb = sorted(b)\nc = [3, 6]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6566": {"id": 6566, "code": "import bisect\nn = 3\na = [1, 1, 1]\na = sorted(a)\nb = [2, 2, 2]\nb = sorted(b)\nc = [3, 3, 3]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6567": {"id": 6567, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\na = sorted(a)\nb = [58, 9, 79, 323, 84, 6]\nb = sorted(b)\nc = [2643, 383, 2, 79, 50, 288]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6568": {"id": 6568, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBnum=[]\na=0\nfor i in range(n):\n    while a!=n and B[i]>A[a] :\n        a+=1\n    Bnum.append(a)\nCnum=[]\nb=0\ns=0\nfor i in range(n):\n    while b!=n and C[i]>B[b]:\n        s+=Bnum[b]\n        b+=1\n    Cnum.append(s)\nprint(sum(Cnum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6569": {"id": 6569, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBnum=[]\na=0\nfor i in range(n):\n    while a!=n and B[i]>A[a] :\n        a+=1\n    Bnum.append(a)\nCnum=[]\nb=0\ns=0\nfor i in range(n):\n    while b!=n and C[i]>B[b]:\n        s+=Bnum[b]\n        b+=1\n    Cnum.append(s)\nprint(sum(Cnum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6570": {"id": 6570, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6571": {"id": 6571, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6572": {"id": 6572, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6573": {"id": 6573, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6574": {"id": 6574, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6575": {"id": 6575, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6576": {"id": 6576, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6577": {"id": 6577, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6578": {"id": 6578, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6579": {"id": 6579, "code": "def check(arr, mid, maxV):\n    if arr[mid] < maxV:\n        return True\n    else:\n        return False\ndef binSearch(arr, maxV):\n    ok = -1\n    ng = len(arr)\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if check(arr, mid, maxV):\n            ok = mid\n        else:\n            ng = mid\n    return ok\ndef resolve():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    BoverA = [0 for _ in range(N)]\n    sumA = 0\n    for i in range(N):\n        a = binSearch(A, B[i])\n        sumA += (a + 1)\n        BoverA[i] = sumA\n    sumA = 0\n    for i in range(N):\n        b = binSearch(B, C[i])\n        if b >= 0:\n            sumA += 1 * 1 * BoverA[b]\n    print(sumA)\nresolve()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6580": {"id": 6580, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6581": {"id": 6581, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6582": {"id": 6582, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6583": {"id": 6583, "code": "from bisect import bisect_left, bisect_right\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6584": {"id": 6584, "code": "from bisect import bisect_left, bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6585": {"id": 6585, "code": "from bisect import bisect_left, bisect_right\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6586": {"id": 6586, "code": "from bisect import bisect_right\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nb.sort()\nc.sort()\nans = 0\nbcb_cum = [0] * (n+1)\nfor i in range(n):\n    bcb_cum[i+1] = bcb_cum[i] + n - bisect_right(c, b[i])\nfor x in a:\n    l = bisect_right(b, x)\n    ans += bcb_cum[n] - bcb_cum[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6587": {"id": 6587, "code": "from bisect import bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nans = 0\nbcb_cum = [0] * (n+1)\nfor i in range(n):\n    bcb_cum[i+1] = bcb_cum[i] + n - bisect_right(c, b[i])\nfor x in a:\n    l = bisect_right(b, x)\n    ans += bcb_cum[n] - bcb_cum[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6588": {"id": 6588, "code": "from bisect import bisect_right\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nb.sort()\nc.sort()\nans = 0\nbcb_cum = [0] * (n+1)\nfor i in range(n):\n    bcb_cum[i+1] = bcb_cum[i] + n - bisect_right(c, b[i])\nfor x in a:\n    l = bisect_right(b, x)\n    ans += bcb_cum[n] - bcb_cum[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6589": {"id": 6589, "code": "import sys\nimport bisect\ninput = sys.stdin.buffer.readline\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA_B = [0] * n\nB_C = [0] * n\nans = 0\nfor idx, a in enumerate(A):\n    A_B[idx] = bisect.bisect_right(B, a)\nfor idx, b in enumerate(B):\n    B_C[idx] = n - bisect.bisect_right(C, b)\ncul_sum = [0] * (n + 1)\nfor i in range(1, n + 1):\n    cul_sum[i] = cul_sum[i - 1] + B_C[i - 1]\nfor idx in A_B:\n    ans += cul_sum[n] - cul_sum[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6590": {"id": 6590, "code": "import sys\nimport bisect\ninput = sys.stdin.buffer.readline\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA_B = [0] * n\nB_C = [0] * n\nans = 0\nfor idx, a in enumerate(A):\n    A_B[idx] = bisect.bisect_right(B, a)\nfor idx, b in enumerate(B):\n    B_C[idx] = n - bisect.bisect_right(C, b)\ncul_sum = [0] * (n + 1)\nfor i in range(1, n + 1):\n    cul_sum[i] = cul_sum[i - 1] + B_C[i - 1]\nfor idx in A_B:\n    ans += cul_sum[n] - cul_sum[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6591": {"id": 6591, "code": "from bisect import bisect_right,bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6592": {"id": 6592, "code": "from bisect import bisect_right,bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6593": {"id": 6593, "code": "from bisect import bisect_right,bisect_left\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6594": {"id": 6594, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsorted_a = sorted(a)\nsorted_c = sorted(c)\nans = 0\nfor each_b in b:\n    ai = bisect.bisect_left(sorted_a, each_b)\n    ci = bisect.bisect_right(sorted_c, each_b)\n    ans += ai * (len(c)-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6595": {"id": 6595, "code": "import bisect\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nsorted_a = sorted(a)\nsorted_c = sorted(c)\nans = 0\nfor each_b in b:\n    ai = bisect.bisect_left(sorted_a, each_b)\n    ci = bisect.bisect_right(sorted_c, each_b)\n    ans += ai * (len(c)-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6596": {"id": 6596, "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nsorted_a = sorted(a)\nsorted_c = sorted(c)\nans = 0\nfor each_b in b:\n    ai = bisect.bisect_left(sorted_a, each_b)\n    ci = bisect.bisect_right(sorted_c, each_b)\n    ans += ai * (len(c)-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6597": {"id": 6597, "code": "import sys\ninput = sys.stdin.readline\nimport bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort();B.sort();C.sort()\nBok = []\nfor b in B:\n  temp = bisect.bisect_left(A,b) \n  Bok.append(temp) \nSB = [0]\nfor i in range(N):\n  temp = SB[-1]+Bok[i]\n  SB.append(temp)\nans = 0\nfor c in C:\n  temp = bisect.bisect_left(B,c) \n  ans += SB[temp]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6598": {"id": 6598, "code": "import sys\ninput = sys.stdin.readline\nimport bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort();B.sort();C.sort()\nBok = []\nfor b in B:\n  temp = bisect.bisect_left(A,b) \n  Bok.append(temp) \nSB = [0]\nfor i in range(N):\n  temp = SB[-1]+Bok[i]\n  SB.append(temp)\nans = 0\nfor c in C:\n  temp = bisect.bisect_left(B,c) \n  ans += SB[temp]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6599": {"id": 6599, "code": "from itertools import accumulate\nimport bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nb.sort()\nc.sort()\nai = []\nbi = []\nfor i in range(n):\n    ai.append(n - bisect.bisect_right(b, a[i]))\n    bi.append(n - bisect.bisect_right(c, b[i]))\nans = 0\nc = [0]+list(accumulate(bi[::-1]))\nfor j in ai:\n    ans += c[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6600": {"id": 6600, "code": "from itertools import accumulate\nimport bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nai = []\nbi = []\nfor i in range(n):\n    ai.append(n - bisect.bisect_right(b, a[i]))\n    bi.append(n - bisect.bisect_right(c, b[i]))\nans = 0\nc = [0]+list(accumulate(bi[::-1]))\nfor j in ai:\n    ans += c[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6601": {"id": 6601, "code": "from itertools import accumulate\nimport bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nb.sort()\nc.sort()\nai = []\nbi = []\nfor i in range(n):\n    ai.append(n - bisect.bisect_right(b, a[i]))\n    bi.append(n - bisect.bisect_right(c, b[i]))\nans = 0\nc = [0]+list(accumulate(bi[::-1]))\nfor j in ai:\n    ans += c[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6602": {"id": 6602, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6603": {"id": 6603, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6604": {"id": 6604, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6605": {"id": 6605, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6606": {"id": 6606, "code": "from bisect import bisect_left,bisect_right\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6607": {"id": 6607, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6608": {"id": 6608, "code": "import sys\ninput = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6609": {"id": 6609, "code": "import sys\ninput = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6610": {"id": 6610, "code": "import sys\ninput = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6611": {"id": 6611, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6612": {"id": 6612, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6613": {"id": 6613, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6614": {"id": 6614, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6615": {"id": 6615, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6616": {"id": 6616, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6617": {"id": 6617, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\na.reverse()\nb.sort()\nb.reverse()\nc.sort()\nc.reverse()\nc.append(0)\ni=0\nl=[]\nfor j in b:\n  while c[i]>j:\n    i+=1\n  l.append(i)\nb.append(0)\ns=0\ncnt=0\ni=0\nfor j in a:\n  while b[i]>j:\n    s+=l[i]\n    i+=1\n  cnt+=s\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6618": {"id": 6618, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\na.reverse()\nb.sort()\nb.reverse()\nc.sort()\nc.reverse()\nc.append(0)\ni=0\nl=[]\nfor j in b:\n  while c[i]>j:\n    i+=1\n  l.append(i)\nb.append(0)\ns=0\ncnt=0\ni=0\nfor j in a:\n  while b[i]>j:\n    s+=l[i]\n    i+=1\n  cnt+=s\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6619": {"id": 6619, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6620": {"id": 6620, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6621": {"id": 6621, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6622": {"id": 6622, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ni,j,k=0,0,0\nm1=[]\nwhile k<n and i<n:\n  if b[i]>a[k]:\n    j+=1\n    k+=1\n  else:\n    m1.append(j)\n    i+=1\nfor t in range(len(m1),len(b)):\n  m1.append(j)\ni,j,k=0,0,0\nm2=[]\nwhile k<n and i<n:\n  if c[i]>b[k]:\n    j+=m1[k]\n    k+=1\n  else:\n    m2.append(j)\n    i+=1\nfor t in range(len(m2),len(c)):\n  m2.append(j)\nprint(sum(m2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6623": {"id": 6623, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ni,j,k=0,0,0\nm1=[]\nwhile k<n and i<n:\n  if b[i]>a[k]:\n    j+=1\n    k+=1\n  else:\n    m1.append(j)\n    i+=1\nfor t in range(len(m1),len(b)):\n  m1.append(j)\ni,j,k=0,0,0\nm2=[]\nwhile k<n and i<n:\n  if c[i]>b[k]:\n    j+=m1[k]\n    k+=1\n  else:\n    m2.append(j)\n    i+=1\nfor t in range(len(m2),len(c)):\n  m2.append(j)\nprint(sum(m2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6624": {"id": 6624, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6625": {"id": 6625, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6626": {"id": 6626, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6627": {"id": 6627, "code": "n = 2\nA = [1, 5]\nA=sorted(A)\nB = [2, 4]\nB=sorted(B)\nC = [3, 6]\nC=sorted(C)\ndef ais_ok(i,b):\n    if i<-1: \n        return True\n    if n<=i: \n        return False\n    return A[i]<b \ndef cis_ok(i,b):\n    if i<-1: \n        return False\n    if n<=i: \n        return True\n    return b<C[i]\nans=0\nfor i in range(n):\n    b=B[i]\n    ok_a,ng_a=-1,n\n    ok_c,ng_c=n,-1\n    while (ng_a-ok_a)>1:\n        mid=(ok_a+ng_a)//2\n        if ais_ok(mid,b):\n            ok_a=mid\n        else:\n            ng_a=mid\n    while (ok_c-ng_c)>1:\n        mid=(ok_c+ng_c)//2\n        if cis_ok(mid,b):\n            ok_c=mid\n        else:\n            ng_c=mid\n    ans+=(ok_a+1)*(n-(ng_c+1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6628": {"id": 6628, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6629": {"id": 6629, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6630": {"id": 6630, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6631": {"id": 6631, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncount = 0\nA.sort()\nC.sort()\nfor i in B:\n    t = bisect.bisect_left(A,i)\n    s = N - bisect.bisect_right(C,i)\n    count += t*s\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6632": {"id": 6632, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nA.sort()\nC.sort()\nfor i in B:\n    t = bisect.bisect_left(A,i)\n    s = N - bisect.bisect_right(C,i)\n    count += t*s\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6633": {"id": 6633, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\ncount = 0\nA.sort()\nC.sort()\nfor i in B:\n    t = bisect.bisect_left(A,i)\n    s = N - bisect.bisect_right(C,i)\n    count += t*s\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6634": {"id": 6634, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6635": {"id": 6635, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6636": {"id": 6636, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6637": {"id": 6637, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6638": {"id": 6638, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6639": {"id": 6639, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6640": {"id": 6640, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor b in B:\n    index_a=bisect_left(A,b)\n    index_c=bisect_right(C,b)\n    ans +=index_a*(n-index_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6641": {"id": 6641, "code": "from bisect import bisect_left,bisect_right\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor b in B:\n    index_a=bisect_left(A,b)\n    index_c=bisect_right(C,b)\n    ans +=index_a*(n-index_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6642": {"id": 6642, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor b in B:\n    index_a=bisect_left(A,b)\n    index_c=bisect_right(C,b)\n    ans +=index_a*(n-index_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6643": {"id": 6643, "code": "import bisect\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6644": {"id": 6644, "code": "import bisect\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6645": {"id": 6645, "code": "import bisect\ndef main():\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2, 50, 79, 288, 383, 2643]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6646": {"id": 6646, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6647": {"id": 6647, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6648": {"id": 6648, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6649": {"id": 6649, "code": "N = 2\nA = [[1, 'A'], [5, 'A']]\nB = [[2, 'B'], [4, 'B']]\nC = [[3, 'C'], [6, 'C']]\nparts = A+B+C\nparts.sort(reverse = True,key = lambda x:x[0])\nA_count = 0  \nB_count = 0  \nC_count = 0\nfor s,t in parts:\n    if t==\"C\":      \n        C_count += 1\n    elif t==\"B\":\n        B_count += C_count             \n    elif t==\"A\":\n        A_count += B_count\nprint(A_count)  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6650": {"id": 6650, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6651": {"id": 6651, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6652": {"id": 6652, "code": "n = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6653": {"id": 6653, "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6654": {"id": 6654, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6655": {"id": 6655, "code": "import bisect\nn = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6656": {"id": 6656, "code": "from bisect import bisect,bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6657": {"id": 6657, "code": "from bisect import bisect,bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6658": {"id": 6658, "code": "from bisect import bisect,bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}}