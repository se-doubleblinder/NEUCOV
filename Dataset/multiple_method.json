{"5764": {"id": 5764, "code": "def main():\n    N = 5\n    print(-(-N // 2))\nmain()", "coverage": [">", ">", ">", ">"]}, "7928": {"id": 7928, "code": "import sys\ndef resolve():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    res = 0\n    covered = 0\n    while True:\n        if covered >= N:\n            break\n        if res == 0:\n            covered = K\n        else:\n            covered += K - 1\n        res += 1\n    print(res)\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3031": {"id": 3031, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"35753\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5780": {"id": 5780, "code": "def main():\n    n = 2\n    if n % 2 == 1:\n        print(n // 2 + 1)\n    else:\n        print(n // 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "12992": {"id": 12992, "code": "def resolve():\n    N = 5\n    print(\"YES\" if N in [7, 5, 3] else \"NO\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "16408": {"id": 16408, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 5\n    a = [6, 9, 4, 2, 11]\n    a.sort()\n    a_max=a[-1]\n    b_max=-1\n    for i in range(n-1):\n        if b_max<min(a[i],a_max-a[i]):\n            b_max=a[i]\n    print(a_max,b_max)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6026": {"id": 6026, "code": "def duplex_printing(all_pages):\n    all_papers = (all_pages + 1) // 2\n    return all_papers\nN = 2\nresult = duplex_printing(N)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11182": {"id": 11182, "code": "def main():\n    s = \"level\"\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs = s[::-1]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n    if s1 == rs1 and s2 == rs2 and s == rs:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13869": {"id": 13869, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14537": {"id": 14537, "code": "import math\nN = 2;P = 0\nA = [1, 3]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\ndef comb_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nx = y = 0\nif count_0 == 0:\n    x = 1\nelse:\n    if P == 1 and count_1 == 0:\n        x = 0\n    else:\n        for i in range(count_0 + 1):\n            x += comb_count(count_0, i)\nif count_1 == 0:\n    y = 1\nelse:\n    if P == 0:\n        for i in range(0, count_1 + 1, 2):\n            y += comb_count(count_1, i)\n    else:\n        for i in range(1, count_1 + 1, 2):\n            y += comb_count(count_1, i)\nprint(x * y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "16372": {"id": 16372, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    n = 2\n    a = [100, 0]\n    a.sort()\n    if len(a) == 2:\n        a.sort(reverse=True)\n        print(*a)\n        return\n    amax = a.pop()\n    mid = amax//2\n    mididx = bisect.bisect_left(a, mid)\n    am1 = a[mididx]; am2 = a[mididx-1]\n    if abs(am1-mid) <= abs(am2-mid):\n        am = am1\n    else:\n        am = am2\n    print(amax, am)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13": {"id": 13, "code": "def main():\n    S = ['x', 'y', 'z']\n    K = 4\n    k = K\n    for i,c in enumerate(S):\n        distance = (ord('z') + 1 - ord(c))%26\n        if distance <= k:\n            k -= distance\n            S[i] = 'a'\n    S[-1] = chr((ord(S[-1]) - ord('a') + k) % 26 + ord('a'))\n    print(''.join(S))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11022": {"id": 11022, "code": "def is_palindrome(s):\n    res = s == s[::-1]\n    return res\nS = \"atcoder\"\nN = len(S)\nans = ['No', 'Yes'][is_palindrome(S) & is_palindrome(S[:((N-1)//2)]) & is_palindrome(S[((N+1)//2):])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14831": {"id": 14831, "code": "n = 3;p = 0\na = [1, 1, 1]\nk=0\ng=0\nfor i in range(n):\n    if a[i]%2==0:\n        g+=1\n    else:\n        k+=1\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nnumg=0\nnumk=0\nif p==0:\n    for i in range(k//2+1):\n        numk+=cmb(k,i*2)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)\nelse:\n    for i in range((k+1)//2):\n        numk+=cmb(k,i*2+1)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17514": {"id": 17514, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"1905\"\n    if 1 <= int(S[:2]) <= 12:\n        is_MMYY = True\n    else:\n        is_MMYY = False\n    if 1 <= int(S[2:]) <= 12:\n        is_YYMM = True\n    else:\n        is_YYMM = False\n    if is_MMYY and is_YYMM:\n        ans = \"AMBIGUOUS\"\n    elif is_MMYY:\n        ans = \"MMYY\"\n    elif is_YYMM:\n        ans = \"YYMM\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "3452": {"id": 3452, "code": "def main():\n a = 20;b = 15\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10896": {"id": 10896, "code": "S = \"level\"\nN=len(S)\nM=(N-1)//2\ndef iskaibun(T):\n    K=len(T)\n    for i in range(K):\n        if T[i]==T[-i-1]:\n            pass\n        else:\n            return False\n    return True\nif iskaibun(S) and iskaibun(S[:M]) and iskaibun(S[M+1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "15220": {"id": 15220, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 64146;y = 123;z = 456\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14707": {"id": 14707, "code": "def f(n, p, a):\n    odd = sum(i % 2 for i in a)\n    if odd == 0:\n        if p == 0:\n            return 2**n\n        elif p == 1:\n            return 0\n    else:\n        return 2**(n-1)\nn = 1;p = 1\na = [50]\nprint(f(n, p, a))", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "13184": {"id": 13184, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"happy,newyear,enjoy\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9007": {"id": 9007, "code": "def main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    if abs(a-b)>k or abs(a-c)>k or abs(a-d)>k or abs(a-e)>k or abs(b-c)>k or abs(b-d)>k or abs(b-e)>k or abs(c-d)>k or abs(c-e)>k or abs(d-e)>k:\n        print(\":(\")\n    else:\n        print(\"Yay!\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10858": {"id": 10858, "code": "def main():\n    s = \"akasaka\"\n    n = len(s)\n    for i in range(n//2):\n        if s[i] != s[n-1-i]:\n            print(\"No\")\n            return\n    s1 = s[:(n-1)//2]\n    s2 = s[(n+3)//2-1:]\n    n1 = len(s1)\n    for i in range(n//4):\n        if s1[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n        if s2[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "17515": {"id": 17515, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"0112\"\n    if 1 <= int(S[:2]) <= 12:\n        is_MMYY = True\n    else:\n        is_MMYY = False\n    if 1 <= int(S[2:]) <= 12:\n        is_YYMM = True\n    else:\n        is_YYMM = False\n    if is_MMYY and is_YYMM:\n        ans = \"AMBIGUOUS\"\n    elif is_MMYY:\n        ans = \"MMYY\"\n    elif is_YYMM:\n        ans = \"YYMM\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "6582": {"id": 6582, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3870": {"id": 3870, "code": "def resolve():\n    x = 12;y = 3;z = 1\n    x=x-z\n    print(x//(y+z))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "14979": {"id": 14979, "code": "import collections, math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nfor i in range(N):\n    A[i] = A[i] % 2\nc = collections.Counter(A)\nzero = c[0]\none = c[1]\nans = 0\nif P == 0:\n    for i in range(0, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nelse:\n    for i in range(1, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11990": {"id": 11990, "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if d2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10019": {"id": 10019, "code": "def main():\n    n = 8\n    s = \"))))((((\"\n    l, r, c = 0, 0, 0\n    for a in s:\n        if a == '(':\n            c += 1\n        elif c:\n            c -= 1\n        else:\n            l += 1\n    r = c\n    print(\"(\"*l + s + \")\"*r)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "18897": {"id": 18897, "code": "def resolve():\n  N = 12\n  if N%2:\n    print(0)\n    return True\n  multiplier = 10\n  result = 0\n  while multiplier <= N:\n    result += N // multiplier\n    multiplier *= 5\n  print(result)\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13910": {"id": 13910, "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10458": {"id": 10458, "code": "def divisors(n):\n    i = 1\n    table = set()\n    while i * i <= n:\n        if not n % i:\n            table.add(i)\n            table.add(n//i)\n        i += 1\n    return table\nA = 8;B = 12;K = 2\nres = divisors(A) & divisors(B)\nres = list(res)\nres.sort()\nprint(res[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8321": {"id": 8321, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10583": {"id": 10583, "code": "A = 1;B = 1;K = 1\ndef ans120(A:int, B:int, K:int):\n    l=sorted([A,B])\n    ans_list=[]\n    for i in range(1,l[1]+1):\n        if A%i==0 and B%i==0:\n            ans_list.append(i)\n    return ans_list[-K]\nprint(ans120(A,B,K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12742": {"id": 12742, "code": "def solve():\n    x = 5\n    if x == 7 or x == 5 or x == 3:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "376": {"id": 376, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    s = \"codefestival\"\n    k = 100\n    r = \"\"\n    for se in s:\n        if se == 'a':\n            r += 'a'\n        else:\n            if 123 - ord(se) <= k:\n                r += 'a'\n                k -= (123 - ord(se))\n            else:\n                r += se\n    if k:\n        k = k % 26\n        lastc = chr(k + ord(r[-1]))\n        r = r[:-1] + lastc\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12310": {"id": 12310, "code": "S = \"atcoder\"\nsize=len(S)\ndef palin(S,size):\n    for i  in range (size//2):\n        if S[i]!=S[-1-i]:\n            return False\n    return True\nif palin(S,size) == True:\n    L=S[:size//2]\n    R=S[size//2+2:]\n    if palin(L,size//2) & palin(L,size//2):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4075": {"id": 4075, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    t1 = 60*H1 + M1\n    t2 = 60*H2 + M2\n    d = 0\n    if t1 <= t2:\n        d = t2 - t1\n    else:\n        d = 60*24 - t1 + t2\n    print(max(0, d - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14127": {"id": 14127, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10891": {"id": 10891, "code": "def is_palindrome(s):\n    return s == s[::-1]\ndef main():\n    s = \"-atcoder\"\n    n = len(s) - 1\n    if (\n        is_palindrome(s[1:])\n        and is_palindrome(s[1 : (n - 1) // 2 + 1])\n        and is_palindrome(s[(n + 3) // 2 : n + 1])\n    ):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "17383": {"id": 17383, "code": "def m(s):\n  return True if 1 <= int(s) <= 12 else False\ns = \"0112\"\nf = int(s[:2])\nl = int(s[2:])\nif m(f) and m(l):\n  print(\"AMBIGUOUS\")\nelif m(f):\n  print(\"MMYY\")\nelif m(l):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9467": {"id": 9467, "code": "import sys\ndef LS2(): return list(\"2017/01/31\".rstrip())  \nS = LS2()\nS[3] = '8'\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">"]}, "9969": {"id": 9969, "code": "N = 6\nS = ')))())'\nN = int(\"6\")\nS = \")))())\"\ndef calculate(n, str):\n    finalStr = ''\n    while True:\n        point = 0\n        remainStr = ''\n        for i in range(len(str)):\n            if i > 0:\n                if (str[i-1] == '(') and (str[i] == ')'):\n                    point += 1\n                    continue\n            if i < (n - 1):\n                if (str[i] == '(') and (str[i+1] == ')'):\n                    point += 1\n                    continue\n            remainStr += str[i]\n        str = remainStr\n        n = len(str)\n        if point == 0:\n            finalStr = remainStr\n            return finalStr\n            break\nres = calculate(N, S)\nfor i in range(len(res)):\n    if res[i] == '(':\n        S = S + ')'\n    if res[i] == ')':\n        S = '(' + S\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14932": {"id": 14932, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    num1 = 0\n    num0 = 0\n    for i in range(N):\n        tmp = A[i]%2\n        if tmp == 0:\n            num0 += 1\n        else:\n            num1 += 1\n    ans2 = 0\n    for i in range(num0+1):\n        ans2 += comb(num0,i)\n    if P == 1:\n        syo = num1//2\n        amari = num1%2\n        tmp = syo + amari\n        i = 1\n        ans = 0\n        for j in range(tmp):\n            ans += comb(num1,i)\n            i += 2\n        ans = ans*ans2\n        return ans\n    else:\n        syo = num1//2\n        tmp = syo+1\n        i = 0\n        ans = 0\n        for j in range(tmp):\n            if i == 0:\n                ans += 1\n                i += 2\n            else:\n                ans += comb(num1,i)\n                i += 2\n        ans = ans*ans2\n        return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "16493": {"id": 16493, "code": "import bisect\nN = 5\nARR = [6, 9, 4, 2, 11]\nN = 2\nARR = [100, 0]\nN = 5\nARR = [6, 9, 4, 2, 11]\ndef calculate(n, arr):\n    arr = sorted(arr)\n    mid = arr[n - 1] / 2\n    a1 = bisect.bisect_left(arr, mid)\n    s1 = abs(arr[a1 - 1] - (arr[n - 1] / 2))\n    s2 = abs(arr[a1] - (arr[n - 1] / 2))\n    if s1 > s2:\n        return arr[n - 1],arr[a1]\n    else:\n        return arr[n-1],arr[a1-1]\nn, a = calculate(N, ARR)\nprint(n, a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16974": {"id": 16974, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    a = \"H\";b = \"H\"\n    if a == \"H\":\n        print(\"H\" if b == \"H\" else \"D\")\n    else:\n        print(\"D\" if b == \"H\" else \"H\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11132": {"id": 11132, "code": "S = \"atcoder\"\nN = len(S)\ndef isp(s):\n  n = len(s)\n  for i in range(n // 2):\n    if s[i] != s[n - 1 - i]:\n      return False\n  return True\nif isp(S) and isp(S[0:(N - 1) // 2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "10300": {"id": 10300, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 8\n    S = \"))))((((\"\n    L = 0\n    R = 0\n    for s in S:\n        if s == \"(\":\n            R += 1\n        else:\n            if R > 0:\n                R -= 1\n            else:\n                L += 1\n    ans = \"\".join([\"(\" * L, S, \")\" * R])\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12348": {"id": 12348, "code": "def is_kaibun(string):\n    for i in range((len(string)//2)+1):\n        if string[i] != string[len(string)-i-1]:\n            return False\n    else:\n        return True\nS = \"akasaka\"\nif is_kaibun(S) and is_kaibun(S[0:(len(S)-1)//2]) and is_kaibun(S[((len(S)+3)//2)-1:len(S)]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "18721": {"id": 18721, "code": "def solve():\n  H = 3\n  W = 7\n  N = 10\n  ans = -(-N//max(H,W))\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1204": {"id": 1204, "code": "import sys\nimport math\nimport itertools\ndef input():\n    return \"750\".rstrip()\ndef main():\n    N = 750\n    d,m = divmod(N-1,111)\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "240": {"id": 240, "code": "import sys\nfrom string import ascii_lowercase as AL\ninput = sys.stdin.readline\ndef main():\n    S = \"a\"\n    K = 25\n    N = len(S)\n    T = [s for s in S]\n    for i in range(N):\n        if T[i] == \"a\":\n            continue\n        idx = AL.index(T[i])\n        if 26 - idx <= K:\n            K -= (26 - idx)\n            T[i] = \"a\"\n    _, r = divmod(K, 26)\n    T[-1] = AL[AL.index(T[-1]) + r]\n    ans = \"\".join(T)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15035": {"id": 15035, "code": "from collections import Counter\nfrom functools import reduce\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(lambda x, y: x * y, range(n, n - r, -1), 1)\n    denom = reduce(lambda x, y: x * y, range(1, r + 1), 1)\n    return numer // denom\nN = 1;P = 1\nA = Counter(map(lambda x: int(x) % 2, \"50\".split()))\ne = A.get(0, 0)\no = A.get(1, 0)\nans = 2 ** e\nif P:\n    if o == 0:\n        print(0)\n    else:\n        ans *= sum(ncr(o, i) for i in range(1, o + 1) if i % 2)\n        print(ans)\nelse:\n    ans *= sum(ncr(o, i) for i in range(o + 1) if i % 2 == 0)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6231": {"id": 6231, "code": "def main():\n  n = 2\n  la = [1, 5]\n  lb = [2, 4]\n  lc = [3, 6]\n  la.sort(), lb.sort(), lc.sort()\n  i = 0\n  ab = []\n  for b in lb:\n    while i < n and la[i] < b:\n      i += 1\n    ab.append(i)\n  i = 0\n  bc = []\n  for c in lc:\n    while i < n and lb[i] < c:\n      i += 1\n    bc.append(i)\n  ans = 0\n  cs = [0]\n  for x in ab:\n    cs.append(cs[-1] + x)\n  for y in bc:\n    ans += cs[y]\n  print(ans)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12602": {"id": 12602, "code": "a = 100;b = 50;k = 4\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_y = set(make_divisors(a))\nb_y = set(make_divisors(b))\ny = list(a_y & b_y)\ny.sort(reverse=True)\nprint(y[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4841": {"id": 4841, "code": "def resolve():\n    S = \"smiles\"\n    cnt = len(S[1:-1])\n    print(\"{}{}{}\".format(S[0], cnt, S[-1]))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "7673": {"id": 7673, "code": "H = 10;N = 3\nA = [4, 5, 6]\ndef answer(H: int, N: int, A: list) -> str:\n    damage = 0                          \n    for i in range(0, N):               \n        damage += int(A[i])             \n        i += 1                          \n    if damage < H:\n        return 'No'\n    else:\n        return 'Yes'\nprint(answer(H, N, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2359": {"id": 2359, "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 2;M = 1\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "10086": {"id": 10086, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    S = \")))())\"\n    ans = \"\"\n    n_left = 0\n    n_right = 0\n    for s in S:\n        if s == \"(\":\n            n_left += 1\n        else:\n            if n_left > 0:\n                n_left -= 1\n            else:\n                n_right += 1\n    ans = \"\".join((\"(\" * n_right, S, \")\" * n_left))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8322": {"id": 8322, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15126": {"id": 15126, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\na = [1, 1]\nz=a.count(0)\no=a.count(1)\nonum=0\nif p:\n  i=1\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nelse:\n  i=0\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nprint((2**z)*onum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "10169": {"id": 10169, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    N = 3\n    S = \"())\"\n    right=0\n    left=0\n    for i in range(N):\n        if S[i]=='(':\n            right+=1\n        else:\n            if right:\n                right-=1\n            else:\n                left+=1\n    print(left*'('+S+right*')')\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "1231": {"id": 1231, "code": "import sys\ndef input(): return \"750\".strip()\ndef resolve():\n    def main():\n        n = 750\n        x=999-n\n        if str(n)[0]==str(n)[1]==str(n)[2]:\n            return n\n        for i in range(x+1):\n            n+=1\n            if str(n)[0]==str(n)[1]==str(n)[2]:\n                return n\n    print(main())\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "17909": {"id": 17909, "code": "def main():\n    s = \"1700\"\n    if (int(s[:2]) > 12 or int(s[:2]) == 0)and (int(s[2:4]) >= 1 and int(s[2:4]) <= 12) :\n        print(\"YYMM\")\n    elif (int(s[2:4]) > 12 or int(s[2:4]) == 0) and (int(s[:2]) >=1 and int(s[:2]) <=12) :\n        print(\"MMYY\")\n    elif (int(s[:2]) >= 1 and int(s[:2])) <= 12 and (int(s[2:4]) >=1 and int(s[2:4]) <= 12) :\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "10190": {"id": 10190, "code": "def cin():  return list(map(int,\"3\".split()))\nN = cin()[0]\nS = \"())\"\ntmp = S[::]\nfor i in range(100): tmp = tmp.replace(\"()\", \"\")\ncnt1 = 0\ncnt2 = 0\nfor i in range(len(tmp)):\n    if tmp[i] == '(': cnt1 += 1\n    else: cnt2 += 1\nans = S[::]\nans = \"(\" * cnt2 + S + ')' * cnt1;\nprint(ans);", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3497": {"id": 3497, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3531": {"id": 3531, "code": "def resolve():\n    A = 20;B = 30\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "16469": {"id": 16469, "code": "import bisect\nimport sys\ndef main(args):\n    n = 2\n    A = [100, 0]\n    A.sort()\n    ans = [max(A), 0]\n    ind = bisect.bisect_left(A ,ans[0]//2)\n    if A[ind] == ans[0]//2:\n        ans[1] = ans[0]//2\n    else:\n        r1 = min(A[ind],ans[0]-A[ind])\n        r2 = min(A[ind-1],ans[0]-A[ind-1])\n        if r1 > r2:\n            ans[1] = A[ind]\n        else:\n            ans[1] = A[ind-1]\n    print(*ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3858": {"id": 3858, "code": "def main():\n    X = 12;Y = 3;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10432": {"id": 10432, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 1;b = 1;k = 1\n    cnt = 0\n    for i in range(min(a,b), 0, -1):\n        if a%i==0 and b%i==0:\n            cnt += 1\n        if cnt == k:\n            print(i)\n            return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11095": {"id": 11095, "code": "s = \"akasaka\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[(n+3)//2-1:]\ndef check(s):\n  i=0\n  j=len(s)-1\n  while j>i:\n    if s[j]!=s[i]:\n      return False\n    j-=1\n    i+=1\n  return True\nif check(s) and check(s1) and check(s2):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "8069": {"id": 8069, "code": "import sys\ndef main():\n    N = 4;K = 3\n    a = [2, 3, 1, 4]\n    answer = 0\n    for i in range(N):\n        if K + (i-1)*(K-1) >= N:\n            answer = i\n            break\n    print(answer)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1711": {"id": 1711, "code": "def main():\n    N = 100;A = 100;B = 100\n    max_v = min(A, B)\n    min_v = max(0, A+B-N)\n    print(\" \".join(map(str, [max_v, min_v])))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10895": {"id": 10895, "code": "S = \"akasaka\"\nN=len(S)\nM=(N-1)//2\ndef iskaibun(T):\n    K=len(T)\n    for i in range(K):\n        if T[i]==T[-i-1]:\n            pass\n        else:\n            return False\n    return True\nif iskaibun(S) and iskaibun(S[:M]) and iskaibun(S[M+1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "11179": {"id": 11179, "code": "def main():\n    S = ['l', 'e', 'v', 'e', 'l']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "19400": {"id": 19400, "code": "n = 3\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10405": {"id": 10405, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndef main():\n    a = 100;b = 50;k = 4\n    from math import gcd\n    y = make_divisors(gcd(a,b))\n    print(y[-k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12703": {"id": 12703, "code": "def ya(boo):\n  if boo:\n    print(\"Yes\")\n  else:\n    print(\"No\")\ndef yay(boo):\n  if boo:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nyay(\"6\" in \"753\")", "coverage": [">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "9351": {"id": 9351, "code": "def main():\n   s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\n   s[:4] = ['2','0','1','8']\n   print(''.join(s))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "14640": {"id": 14640, "code": "def ncr(n, r):\n    if n < r: return 0\n    r = min(r, n - r)\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + i + 1 for i in range(r)]\n    denominator = [i + 1 for i in range(r)]\n    for p in range(2, r + 1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p - 1, r, p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= numerator[k]\n    return int(result)\nn = 1;p = 1\na = [50]\ndic = {'odd': 0, 'even': 0}\nfor i in a:\n    if i % 2 == 0:\n        dic['even'] += 1\n    else:\n        dic['odd'] += 1\neven = 0\nodd = 0\nfor i in range(dic['even'] + 1):\n    even += ncr(dic['even'], i)\nif p == 0:\n    for i in range(0, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nelse:\n    for i in range(1, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nprint(odd * even)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "3747": {"id": 3747, "code": "def resolve():\n    x = 13;y = 3;z = 1\n    x -= z\n    count = 0\n    while True:\n        x = x-(y+z)\n        if x >= 0:\n            count += 1\n        else:\n            break\n    print(count)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "16153": {"id": 16153, "code": "def getval():\n    n = 2\n    a = [100, 0]\n    return n,a\ndef main(n,a):\n    a.sort()\n    c = a[n-1]\n    R = c/2\n    r = 0\n    for i in a:\n        if abs(R-i)<abs(R-r):\n            r = i \n    print(\"{x} {y}\".format(x=c,y=r))\nif __name__==\"__main__\":\n    n,a = getval()\n    main(n,a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "8024": {"id": 8024, "code": "def waru(a,b):\n  if a%b==0:\n    return a//b\n  else:\n    return (a//b)+1\nN = 4;K = 3\nL = [2, 3, 1, 4]\nmina=min(L)\nind=list()\nR=[0]*N\nfor i in range(N):\n  if L[i]==mina:\n    ind.append(i)\n    R[i]+=1\nfor i in range(1,N):\n  R[i]=R[i-1]+R[i]\ns=ind[0]\na=waru(s,K-1)\nb=(a*(K-1))-s\nsusumi=b+s+1\nwhile True:\n  if susumi>=N:\n    print(a)\n    break\n  if R[min(susumi+K,N-1)]-R[susumi]>0:\n    susumi+=K\n    a+=1\n  else:\n    susumi+=K-1\n    a+=1", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15012": {"id": 15012, "code": "import math\nn = 1;p = 1\nls = [50]\nlo = []\nle = []\ndef combinations_count(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor i in ls:\n    if i % 2 == 0:\n        le.append(i)\n    else:\n        lo.append(i)\nx = len(lo)\ny = len(le)\nif p == 0:\n    a = 1\n    if x != 0:\n        if x % 2 == 0:\n            r = x\n        else:\n            r = x - 1\n        a = 0\n        for j in range(0,r+1,2):\n            a += combinations_count(x, j)\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)\nelse:\n    if x != 0:\n        if x % 2 == 0:\n            r = x - 1\n        else:\n            r = x\n        a = 0\n        for j in range(1,r+1,2):\n            a += combinations_count(x, j)\n    else:\n        a = 0\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "16601": {"id": 16601, "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == 'H':\n        if b == 'H':\n            print('H')\n        else:\n            print('D')\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "15304": {"id": 15304, "code": "def main():\n    X = 12;Y = 3;Z = 1\n    print((X-Z)//(Y+Z))\nmain()", "coverage": [">", ">", ">", ">"]}, "15542": {"id": 15542, "code": "def ABC_78_B():\n    X = 12;Y = 3;Z = 1\n    sum=0\n    N=0\n    while sum<= X:\n        sum = Y*N+Z*(N+1)\n        N+=1  \n    print(N-2)\nif __name__ == '__main__':\n    ABC_78_B()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19194": {"id": 19194, "code": "import sys\ndef solve(N):\n    if N % 2:\n        return 0\n    ans, d = 0, 10\n    while True:\n        q = N // d\n        ans += q\n        if q == 0:\n            return ans\n        d *= 5\ndef main(args):\n    N = 12\n    ans = solve(N)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13306": {"id": 13306, "code": "import sys\ns = \"abcde,fghihgf,edcba\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13469": {"id": 13469, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "4896": {"id": 4896, "code": "def resolve():\n    n = \"xyz\"\n    i = len(n) -2\n    print(n[0] + str(i) + n[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "14645": {"id": 14645, "code": "def m():\n    N = 2;P = 0\n    A = [1, 3]\n    Even = [a for a in A if a % 2 == 0]\n    Odd = [a for a in A if a % 2 == 1]\n    if P == 1 and len(Odd) == 0:\n        return 0\n    if len(Odd) == 0:\n        return pow(2, len(Even))\n    else:\n        return pow(2, N-1)\nprint(m())", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "15316": {"id": 15316, "code": "import math\ndef main():\n  x = 64146;y = 123;z = 456\n  print(int((x-z)/(y+z)))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "10695": {"id": 10695, "code": "s = \"level\"\nn = len(s)\ndef palindrome(s):\n    ret = True\n    for i in range(len(s)//2):\n        if s[i] != s[-i-1]:\n            ret = False\n            break\n    return ret\ncheck_1 = palindrome(s)\ncheck_2 = palindrome(s[:(n)//2])\ncheck_3 = palindrome(s[(n+2)//2:])\nif check_1 and check_2 and check_3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7871": {"id": 7871, "code": "import math\ndef main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    index_one = A.index(1)\n    min_cnt = N\n    for left_index in range(index_one - (K - 1), index_one + 1):\n        right_index = left_index + (K - 1)\n        if left_index < 0 or right_index > N - 1:\n            continue\n        cnt = 1 + math.ceil(left_index / (K - 1)) + math.ceil((N - 1 - right_index) / (K - 1))\n        min_cnt = min([min_cnt, cnt])\n    print(min_cnt)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "410": {"id": 410, "code": "def main():\n    s = ['x', 'y', 'z']\n    k = 4\n    i=0\n    while k>=0 and i<len(s)-1:\n        if s[i]!='a' and k>=123-ord(s[i]):\n            k-=123-ord(s[i])\n            s[i]=\"a\"\n        i+=1\n    if i==len(s)-1:\n        s[-1]=chr(97+(k-(123-ord(s[i])))%26)\n    print(\"\".join(s))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15208": {"id": 15208, "code": "X = 12;Y = 3;Z = 1\ndef is_ok(key):\n    if key * Y + (key + 1) * Z <= X:\n        return True\n    else:\n        return False\ndef binary_search():\n    ok = 0\n    ng = 3000001\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(binary_search())", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13851": {"id": 13851, "code": "def nyu():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12053": {"id": 12053, "code": "def mainFunc():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    ans = '1' if m1 != m2 else '0'\n    print(ans)\nmainFunc()", "coverage": [">", ">", ">", ">", ">", ">"]}, "4895": {"id": 4895, "code": "def resolve():\n    n = \"smiles\"\n    i = len(n) -2\n    print(n[0] + str(i) + n[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "17492": {"id": 17492, "code": "import sys\ndef LI2(): return list(map(int,\"1700\".rstrip()))  \nS = LI2()\na = 10*S[0]+S[1]\nb = 10*S[2]+S[3]\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif not 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", "!", "!"]}, "15136": {"id": 15136, "code": "from math import factorial as fa\ndef comb(n, r):\n    return fa(n)//(fa(n-r)*fa(r))\nn = 1;p = 1\nA = [0]\neven = A.count(0)\nodd = A.count(1)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i)\nprint(ans*pow(2,even))", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1707": {"id": 1707, "code": "import sys\ndef main():\n    raw = ['10', '7', '5']\n    n = int(raw[0])\n    a = int(raw[1])\n    b = int(raw[2])\n    def get_max():\n        return min(a, b)\n    def get_min():\n        return max(a + b - n, 0)\n    print(\"{} {}\".format(get_max(), get_min()))\nif __name__ == \"__main__\":\n    argv = sys.argv[1:]\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5470": {"id": 5470, "code": "def A():\n    n = 5\n    print(-(-n//2))\nA()", "coverage": [">", ">", ">", ">"]}, "4774": {"id": 4774, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nimport itertools\nINF = float('inf')\nfrom heapq import heapify, heappop, heappush\ndef main():\n    S = \"internationalization\"\n    print(S[0] + str(len(S)-2) +S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16415": {"id": 16415, "code": "def main():\n  n = 2\n  a = [100, 0]\n  a = sorted(a)\n  a_i = a[-1]\n  a_j = 0\n  dist = a_i\n  for i in range(len(a)-1):\n    if abs(a_i/2-a[i]) < dist:\n      a_j = a[i]\n      dist = abs(a_i/2-a[i])\n  print(a_i, a_j)\nif __name__ == \"__main__\":\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11978": {"id": 11978, "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m1 != m2:\n        print('1')\n    else:\n        print('0')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "15027": {"id": 15027, "code": "import collections\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nH = [i%2 for i in A]\nB = collections.Counter(H)[1]\nans = 0\nfor i in range(1,B//2+1):\n    ans += combinations_count(B, 2*i)\nC = (ans+1) * (2**(len(A)-B))\nprint(C if P == 0 else 2**N - C)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6558": {"id": 6558, "code": "def main():\n    N = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11667": {"id": 11667, "code": "def cantwaitforholiday(s):\n    days = {\"SUN\": 7, \"MON\": 6, \"TUE\": 5, \"WED\": 4, \"THU\": 3, \"FRI\": 2, \"SAT\": 1}\n    return days[s]\ndef main():\n    s = \"SUN\"\n    print(cantwaitforholiday(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2928": {"id": 2928, "code": "def main():\n    s = \"1234567876\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6089": {"id": 6089, "code": "def main():\n    n = 2\n    print((n+1)//2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2951": {"id": 2951, "code": "import sys\ndef input():\n    return \"1111111111\".rstrip()\ndef main():\n    S = \"1111111111\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12996": {"id": 12996, "code": "def main():\n  n = 5\n  ans = 0\n  count = 0\n  lis = []\n  if n == 7 or n == 5 or n == 3:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13708": {"id": 13708, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    h = H2 - H1\n    m = M2 - M1\n    print(max(0, h * 60 + m - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8361": {"id": 8361, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 4\n  U = [1, 1, 1, 1]\n  L = [1, 1, 1, 1]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14817": {"id": 14817, "code": "from functools import lru_cache\n@lru_cache(maxsize=None)\ndef kaijou(n):\n    if n <= 1:\n        return 1\n    return kaijou(n-1)*n\nn = 2;p = 0\neven = 0\nodd = 0\nans = 0\nfor i in map(int,\"1 3\".split()):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    eveng = 0\n    for j in range(0,odd+1,2):\n        if j > odd:\n            break\n        eveng += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*eveng)\nelse:\n    oddg = 0\n    for j in range(1,odd+1,2):\n        if j > odd:\n            break\n        oddg += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*oddg)\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14463": {"id": 14463, "code": "def solve():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16055": {"id": 16055, "code": "def main():\n    a = 12;b = 4\n    ans = a - 2*b\n    ans = 0 if ans < 0 else ans \n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2243": {"id": 2243, "code": "def resolve():\n    N = 10;A = 7;B = 5\n    print(min(A, B), max(0, A+B-N))\nresolve()", "coverage": [">", ">", ">", ">"]}, "10802": {"id": 10802, "code": "def kaibun(moji):\n    n = len(moji)\n    for i in range(0,int(n/2)):\n        if s[i]!=s[n-1-i]:\n            return False\n    return True\ns = \"akasaka\"\nn = len(s)\nmoji1 = int((n - 1) / 2)\nmoji2 = int((n + 3) / 2)\nif kaibun(s) and kaibun(s[:moji1]) and kaibun(s[moji2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6990": {"id": 6990, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ndef battle(a,n):\n  ans = 0\n  for i in range(n):\n    ans += a[i]\n  return ans\nif H <= battle(A,N):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14802": {"id": 14802, "code": "import sys\nimport math\nN = 2;P = 0\nA = map(int, \"1 3\".strip().split())\ndef nCr(n, r):\n    return math.factorial(n) // math.factorial(n - r) // math.factorial(r)\nevens = 0\nodds = 0\nfor a_i in A:\n    if a_i % 2 == 0:\n        evens += 1\n    else:\n        odds += 1\nif P == 0:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(0, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nelse:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(1, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "5383": {"id": 5383, "code": "import sys\nfrom math import ceil\ndef main():\n    input = sys.stdin.buffer.readline\n    n = 5\n    print(ceil(n / 2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7710": {"id": 7710, "code": "def resolve():\n    import math\n    N = 3;K = 3\n    A = [1, 2, 3]\n    print(math.ceil((N-1)/(K-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5904": {"id": 5904, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 100\n    return (N//2) + N % 2\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15836": {"id": 15836, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 100000;Y = 1;Z = 1\n    ans = (X - Z) // (Y + Z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17788": {"id": 17788, "code": "def main():\n    S = \"1700\"\n    v1 = int(S[:2])\n    v2 = int(S[2:])\n    if 1 <= v1 <= 12 and 1 <= v2 <= 12:\n        print(\"AMBIGUOUS\")\n    elif 1 <= v1 <= 12 and (v2 >= 13 or v2 == 0):\n        print(\"MMYY\")\n    elif (v1 >= 13 or v1 == 0) and 1 <= v2 <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "3716": {"id": 3716, "code": "def main():\n    A = 20;B = 30\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12473": {"id": 12473, "code": "def isPalindrome(st):\n    l = len(st)\n    c = l//2\n    if l%2 == 1:\n        return st[:c] == st[c+1:][::-1]\n    else:\n        return st[:c] == st[c:][::-1]\nS = \"level\"\nN = len(S)\nif isPalindrome(S) and isPalindrome(S[:(N-1)//2]) and isPalindrome(S[(N+3)//2 - 1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "7186": {"id": 7186, "code": "def answer(h: int, n: int, a: []) -> str:\n    return 'Yes' if h <= sum(a) else 'No'\ndef main():\n    h = 20;n = 3\n    a = map(int, \"4 5 6\".split())\n    print(answer(h, n, a))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8518": {"id": 8518, "code": "def main():\n    n = 5\n    a1lis = [3, 2, 2, 4, 1]\n    a2lis = [1, 2, 2, 2, 1]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12010": {"id": 12010, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18144": {"id": 18144, "code": "def main():\n    S = \"0112\"\n    listS = [int(S[:2]), int(S[2:])]\n    if 1 <= listS[0] <= 12 and 1 <= listS[1] <= 12:\n        ans = 'AMBIGUOUS'\n    elif 1 <= listS[0] <= 12:\n        ans = 'MMYY'\n    elif 1 <= listS[1] <= 12:\n        ans = 'YYMM'\n    else:\n        ans = 'NA'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "15028": {"id": 15028, "code": "def fact(n):\n  a = 1\n  for i in range(2, n+1):\n    a *= i\n  return a\ndef comb(n, r):\n  return fact(n) // fact(r) // fact(n-r)\nn = 2;p = 0\na = [1, 3]\nzero = 0\none = 0\nfor i in a:\n  if i % 2 == 0:\n    zero += 1\n  else:\n    one += 1\nif p == 0:\n  ans = 2 ** zero\n  c = 0\n  for i in range(0, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)\nelse:\n  ans = 2 ** zero\n  c = 0\n  for i in range(1, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10171": {"id": 10171, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    N = 8\n    S = \"))))((((\"\n    right=0\n    left=0\n    for i in range(N):\n        if S[i]=='(':\n            right+=1\n        else:\n            if right:\n                right-=1\n            else:\n                left+=1\n    print(left*'('+S+right*')')\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "10926": {"id": 10926, "code": "def palin(x):\n    if x == x[::-1]: return True\n    return False\na = \"akasaka\"\nn = len(a)\nif palin(a) and palin(a[:int((n-1)/2)]) and palin(a[int((n+3)/2)-1:]):\n    print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", "!", ">", ">", ">", ">", "!"]}, "1840": {"id": 1840, "code": "import sys\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nint1 = lambda x: int(x) - 1\ndef main():\n    n = 10;a = 3;b = 5\n    mx=min(a,b)\n    mn=max(a+b-n,0)\n    print(mx,mn)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7121": {"id": 7121, "code": "H = 210;N = 5\nspecial_move = ['31', '41', '59', '26', '53']\ndef answer(H: int, N: int, special_move: list) -> str:\n    damage = 0\n    for i in range(0, N):\n        damage += int(special_move[i])\n    if damage >= H:\n        return 'Yes'\n    else:\n        return 'No'\nprint(answer(H, N, special_move))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11090": {"id": 11090, "code": "s = \"level\"\ndef is_palinedrome(st):\n    for i in range(len(st)//2):\n        if st[i] != st[-(i+1)]:\n            return False\n    return True\ns_pali = is_palinedrome(s)\nsub_pali_left = is_palinedrome(s[:len(s)//2])\nsub_pali_right = is_palinedrome(s[len(s)//2+1:])\nif s_pali and sub_pali_left and sub_pali_right:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1914": {"id": 1914, "code": "import sys\ninput = sys.stdin.readline\ndef mi(): return map(int, \"100 100 100\".split())\nN, A, B = mi()\nans = [0,0]\nans[0] = min(A,B)\nans[1] = max(A+B-N,0)\nprint(ans[0], ans[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17790": {"id": 17790, "code": "def solve():\n    s = \"0112\"\n    front = int(s[:2])\n    back = int(s[2:])\n    if 1 <= front <= 12 and 1 <= back <= 12:\n        print('AMBIGUOUS')\n    elif 1 <= front <= 12:\n        print('MMYY')\n    elif 1 <= back <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "2361": {"id": 2361, "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 1;M = 1\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">"]}, "10061": {"id": 10061, "code": "N = 6\nS = \")))())\"\nans1=0\nmaxans=0\ndef split(word): \n    return [char for char in word]  \ndef convert(s): \n    new = \"\" \n    for x in s: \n        new += x  \n    return new \nfor i in range(N):\n  if S[i]=='(':\n    ans1-=1\n  else:\n    ans1+=1\n    if ans1>maxans:\n      maxans=ans1\nans2=0\nminans=0\nfor i in range(N):\n  if S[N-1-i]==')':\n    ans2-=1\n  else:\n    ans2+=1\n    if ans2>minans:\n      minans=ans2\nr=split(S)\nfor i in range(minans):\n  r.append(')')\nr.reverse()\nfor i in range(maxans):\n  r.append('(')\nr.reverse()\nprint(convert(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3935": {"id": 3935, "code": "def resolve():\n    X = 12;Y = 3;Z = 1\n    ans = 0\n    while ans*Y+(ans+1)*Z <= X:\n        ans += 1\n    print(ans-1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9035": {"id": 9035, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadline_s = sys.stdin.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    if abs(a - e) <= k:\n        ans = 'Yay!'\n    else:\n        ans = ':('\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14638": {"id": 14638, "code": "import random as rng\nimport itertools as it\nimport collections as col\nimport heapq as hq\nimport sys\nimport copy as cp\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\ndef dump_impl(*objects):\n    print(*objects, file=sys.stderr)\ndef dump_dummy(*objects):\n    pass\ndump = dump_impl if \"DEBUG\" in sys.argv else dump_dummy\ndef odd(n): return n & 1\ndef even(n): return not odd(n)\ndef comb(n, m):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    for i in range(1, m+1):\n        r //= i\n    for i in range(1, n-m+1):\n        r //= i\n    return r\nN = 3;P = 0\nA = [1, 1, 1]\ncnt0 = len([a for a in A if a == 0])\ncnt1 = len([a for a in A if a == 1])\nans = 0\nif odd(P):\n    for i in range(cnt1 + 1):\n        if odd(i):\n            ans += comb(cnt1, i)\nelse:\n    for i in range(cnt1 + 1):\n        if even(i):\n            ans += comb(cnt1, i)\nans *= pow(2, cnt0)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13351": {"id": 13351, "code": "def resolve():\n  s = \"abcde,fghihgf,edcba\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "1972": {"id": 1972, "code": "import sys\ndef input():\n    return \"100 100 100\"[:-1]\ndef main():\n    N = 100;A = 100;B = 10\n    MaxAns = min(A, B)\n    MinAns = 0\n    if N >= A + B:\n        pass\n    else:\n        MinAns = -(N - A - B)\n    print(MaxAns, MinAns)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11180": {"id": 11180, "code": "def main():\n    S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "8347": {"id": 8347, "code": "def main():\n    n = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8608": {"id": 8608, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 7\n    a1 = chain(tuple([0]), tuple(map(int, \"3 3 4 5 4 5 3\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"5 3 4 4 2 3 2\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17062": {"id": 17062, "code": "def another(s):\n  if s == 'D':\n    return 'H'\n  else:\n    return 'D'\na = \"D\";b = \"H\"\nif a == 'H':\n  print(b)\nelse:\n  print(another(b))", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "10667": {"id": 10667, "code": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\na = 1;b = 1;k = 1\nr = gcd(a,b)\ne = []\nfor i in range(1,r+1):\n    if r%i == 0:\n        e.append(i)\nprint(e[len(e)-k])", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15976": {"id": 15976, "code": "import sys\ninput = sys.stdin.buffer.readline\nsys.setrecursionlimit(10**6)\nINF = float(\"inf\")\ndef main():\n    A = 20;B = 30\n    print(max(0, A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10678": {"id": 10678, "code": "def resolve():\n    A = 8;B = 12;K = 2\n    cnt = 0\n    i = max(A, B)\n    while True:\n        if A%i==0 and B%i==0:\n            cnt += 1\n            if cnt == K:\n                break\n        i -= 1\n    print(i)\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6494": {"id": 6494, "code": "def resolve():\n    import bisect\n    n = 6\n    a = [2, 3, 6, 14, 53, 159]\n    b = [6, 9, 58, 79, 84, 323]\n    c = [2, 50, 79, 288, 383, 2643]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16610": {"id": 16610, "code": "def main():\n    a = \"D\";b = \"D\"\n    ans = ''\n    if a == 'H':\n        ans = b\n    else:\n        ans = 'H' if b == 'D' else 'D'\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11422": {"id": 11422, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    s = \"SAT\"\n    ans = 0\n    if s == 'SUN':\n        ans = 7\n    elif s == 'MON':\n        ans = 6\n    elif s == 'TUE':\n        ans = 5\n    elif s == 'WED':\n        ans = 4\n    elif s == 'THU':\n        ans = 3\n    elif s == 'FRI':\n        ans = 2\n    elif s == 'SAT':\n        ans = 1\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "630": {"id": 630, "code": "def resolve():\n    k = 2\n    x = 7 % k\n    for i in range(1, k + 1):\n        if x == 0:\n            print(i)\n            return\n        x = (x * 10 + 7) % k\n    print(-1)\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "196": {"id": 196, "code": "from string import ascii_lowercase\ns = \"a\"\nk = 25\ndef main(s, k):\n    alp = ascii_lowercase\n    num = {char: i for i, char in enumerate(alp)}\n    ns = [num[char] for char in s]\n    for i in range(len(ns)):\n        v = ns[i]\n        if v != 0 and 26 - v <= k:\n            ns[i] = 0\n            k -= 26 - v\n    ns[-1] = (ns[-1] + k) % 26\n    return ''.join(alp[n] for n in ns)\nprint(main(s, k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6329": {"id": 6329, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    Bdic = [0]*N\n    from bisect import bisect\n    from itertools import accumulate\n    for i, b in enumerate(B):\n        idx = bisect(C, b)\n        Bdic[i] = N - idx\n    Bacc = list(accumulate([b for b in Bdic + [0]][::-1]))[::-1]\n    ans = 0\n    for i, a in enumerate(A):\n        idx = bisect(B, a)\n        ans += (Bacc[idx])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14124": {"id": 14124, "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "11157": {"id": 11157, "code": "s = \"level\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[n+3//2:]\ndef ispalindrome(str):\n    if str==str[::-1]:\n        s1=s[:(n-1)//2]\n        if s1==s1[::-1]:\n            s2=s[n+3//2:]\n            if s2==s2[::-1]:\n                return 'Yes'\n            return 'No'\n        return 'No'\n    else:\n        return 'No'\nprint(ispalindrome(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "2871": {"id": 2871, "code": "def solve():\n    N = \"1111111111\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14514": {"id": 14514, "code": "def comb(n,k):\n    res = 1\n    for i in range(1,k+1):\n        res *= (n+1-i)\n        res //= i\n    return res\nn = 2;p = 0\na = [1, 3]\na = [ai % 2 for ai in a]\nodd, even = a.count(1), a.count(0)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i) * pow(2, even)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2008": {"id": 2008, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"100 100 100\".strip()\ndef resolve():\n    n = 100;a = 100;b = 100\n    l=min(a,b)\n    if n>a+b:\n        r=0\n    else:\n        r=a+b-n\n    print(l,r)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "18790": {"id": 18790, "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    ans = -(-N//max(H, W))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14613": {"id": 14613, "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\nremainders = [a%2 for a in A]\nodd = remainders.count(1)\neven = remainders.count(0)\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nans = 0\nfor n in range(N+1):\n  for p in range(P,n+1,2):\n    if odd >= p and even >= n-p:\n      ans += combinations_count(odd,p) * combinations_count(even,n-p)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10859": {"id": 10859, "code": "def main():\n    s = \"level\"\n    n = len(s)\n    for i in range(n//2):\n        if s[i] != s[n-1-i]:\n            print(\"No\")\n            return\n    s1 = s[:(n-1)//2]\n    s2 = s[(n+3)//2-1:]\n    n1 = len(s1)\n    for i in range(n//4):\n        if s1[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n        if s2[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "10589": {"id": 10589, "code": "A = 8;B = 12;K = 2\ndef divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nprint(sorted(list(set(divisor(A)) & set(divisor(B))), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1628": {"id": 1628, "code": "import sys\ndef r(n, a, b):\n    both_max = min(a, b)\n    if 0 < a + b - n:\n        both_min = a + b - n\n    else:\n        both_min = 0\n    print(both_max, both_min)\ndef main():\n    input = sys.stdin.readline\n    n = 10;a = 3;b = 5\n    r(n, a, b)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11406": {"id": 11406, "code": "def main():\n    S = \"SAT\"\n    lst = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\n    ans = 6 - lst.index(S)\n    if ans == 0:\n        ans = 7\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "11806": {"id": 11806, "code": "def main():\n    today = ['11', '16']\n    tomo = ['11', '17']\n    if today[0] == tomo[0]:\n        print(0)\n    else:\n        print(1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14792": {"id": 14792, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndef comb(n, k):\n  ret = 1\n  for i in range(1, k+1):\n    ret = ret * (n+1-i) // i\n  return ret\nEven = 0\nOdd = 0\nfor a in A:\n  if a % 2 == 0:\n    Even += 1\n  else:\n    Odd += 1\nans = 0\nwhile P <= Odd:\n  ans += comb(Odd, P)\n  P += 2\nprint(ans * 2 ** Even)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "12423": {"id": 12423, "code": "s = \"atcoder\"\nn = len(s)\ndef func():\n    if n == 3 and s[0] == s[2]:\n        return\"Yes\"\n    else:\n        a = 0\n        for i in range(n//2):\n            if s[i] == s[n - 1 - i]:\n                a += 1\n                if a == n//2:\n                    b = 0\n                    for j in range((n-1)//4):\n                        if s[j] == s[(n-1)//2 - 1 - j]:\n                            b += 1\n                            if b == (n-1)//4:\n                                c = 0\n                                for k in range((n - (n+3)//2 + 1)//2):\n                                    if s[(n+3)//2 - 1 + k] == s[n - 1 - k]:\n                                        c += 1\n                                        if c == (n - (n+3)//2 + 1)//2:\n                                            return \"Yes\"\n                        else:\n                            return \"No\"\n            else:\n                return \"No\"\nprint(func())", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "12541": {"id": 12541, "code": "from math import gcd\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 8;b = 12;k = 2\nx = gcd(a, b)\nl = make_divisors(x)\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17714": {"id": 17714, "code": "YYMM = False\nMMYY = False\nf = \"1700\"\nh1 = f[0] + f[1]\nh2 = f[2] + f[3]\nif 1 <= int(h2) <= 12:\n  YYMM = True\nif 1 <= int(h1) <= 12:\n  MMYY = True\ndef ret(c1,c2):\n  if c1 and c2:\n    return \"AMBIGUOUS\"\n  elif c1:\n    return \"YYMM\"\n  elif c2:\n    return \"MMYY\"\n  else:\n    return \"NA\"\nprint(ret(YYMM,MMYY))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "16421": {"id": 16421, "code": "def main():\n    n = 2\n    a = [0, 100]\n    t = a[-1]\n    s = t/2\n    z = a[0]\n    for i in range(1,n-1):\n        if abs(a[i]-s)<abs(z-s):\n            z = a[i]\n    print(t,z)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16230": {"id": 16230, "code": "def binary_search(A, target):\n  left = 0 \n  right = len(A)\n  while(3 <= right - left):\n    index = (left + right) // 2\n    if(A[index] < target):\n      left = index\n    else:\n      right = index + 1\n  return left\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\ntarget = A[N - 1] / 2\nif(target <= A[0]): ai = A[0]\nelif(A[N - 2] <= target): ai = A[N - 2]\nelse:\n  index = binary_search(A[:N - 1], target)\n  ai = A[index] if(abs(A[index] - target) < abs(A[index + 1] - target)) else A[index + 1]\nprint(A[N - 1], ai)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9034": {"id": 9034, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadline_s = sys.stdin.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    if abs(a - e) <= k:\n        ans = 'Yay!'\n    else:\n        ans = ':('\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14738": {"id": 14738, "code": "import math\nfrom itertools import combinations_with_replacement\nn = 2;p = 0\nA = [1, 3]\nodd = []\neven = []\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor a in A:\n    if a % 2 == 0:\n        even.append(a)\n    else:\n        odd.append(a)\neven_count = []\nfor i in range(len(even)+1):\n    even_count.append(combinations_count(len(even), i))\nodd_odd_count = []\nodd_even_count = []\nfor i in range(len(odd)+1):\n    cnt = combinations_count(len(odd), i)\n    if i % 2 == 1:\n        odd_odd_count.append(cnt)\n    else:\n        odd_even_count.append(cnt)\nans = 0\nif p == 0:\n    for i in even_count:\n        for j in odd_even_count:\n            ans += i*j\nelse:\n    for i in even_count:\n        for j in odd_odd_count:\n            ans += i*j\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10810": {"id": 10810, "code": "def is_p(s):\n    return s == s[::-1]\ns = \"atcoder\"\nl = (len(s) - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "10547": {"id": 10547, "code": "def make_divisors(n: int):\n    lower_divs = []\n    upper_divs = []\n    i = 1\n    while i**2 <= n:\n        if n % i == 0:\n            lower_divs.append(i)\n            if i != n // i:\n                upper_divs.append(n//i)\n        i += 1\n    return lower_divs+upper_divs[::-1]\ndef main():\n    A = 1;B = 1;K = 1\n    div_A = set(make_divisors(A))\n    div_B = set(make_divisors(B))\n    common = div_A.intersection(div_B)\n    return sorted(list(common))[-K]\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11143": {"id": 11143, "code": "def main():\n    S = \"level\"\n    L = len(S)\n    def check(s):\n        return s == s[::-1]\n    cond = check(S)\n    cond = cond and check(S[:L // 2])\n    cond = cond and check(S[(L + 1) // 2:])\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5949": {"id": 5949, "code": "def main():\n    N = 100\n    if N%2 == 1:\n      print(int((N+1)/2))\n    else:\n      print(int(N/2))\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "18263": {"id": 18263, "code": "def main(h: int, w: int, n: int):\n    m = max(h, w)\n    if n % m == 0:\n        print(n // m)\n    else:\n        print((n // m) + 1)\nif __name__ == \"__main__\":\n    h = 3\n    w = 7\n    n = 10\n    main(h, w, n)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "6824": {"id": 6824, "code": "def main():\n    H = 211;N = 5\n    A = [31, 41, 59, 26, 53]\n    s = sum(A)\n    if H > s:\n        print('No')\n    else:\n        print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12674": {"id": 12674, "code": "def YN(P):\n    if P:\n        print(\"YES\")\n    else:\n        print(\"NO\")\ndef yn(P):\n    if P:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nx = 5\nYN(x==3 or x==5 or x==7)", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">"]}, "13471": {"id": 13471, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "2816": {"id": 2816, "code": "def main():\n    s = \"35753\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "135": {"id": 135, "code": "import sys\ndef main():\n    input = sys.stdin.readline\n    s = \"codefestival\"\n    K = 100\n    def c(x): return ord(x) - ord('a')\n    def d(x): return chr(x + ord('a'))\n    ans = []\n    i = 0\n    while i < (len(s) - 1):\n        to_a = (26 - c(s[i])) % 26\n        if to_a <= K:\n            ans.append('a')\n            K -= to_a\n        else:\n            ans.append(s[i])\n        i += 1\n    if K > 0:\n        ans.append(d((c(s[-1]) + K) % 26))\n    else:\n        ans.append(s[i])\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14125": {"id": 14125, "code": "def main():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "574": {"id": 574, "code": "def ord_until_a(char):\n    if char == 'a':\n        return 0\n    return ord('a') + 26 - ord(char)\nS = \"a\"\nK = 25\nans = []\nfor s in S:\n    diff = ord_until_a(s)\n    if K >= diff:\n        ans.append('a')\n        K -= diff\n    else:\n        ans.append(s)\nif K > 0:\n    K %= 26\n    last = ord(ans[-1]) + K\n    if last > ord('z'):\n        last -= 26\n    ans[-1] = chr(last)\nprint(''.join(ans))", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "14718": {"id": 14718, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 1;p = 1\na = [50]\neven=0\nodd=0\nfor i in a:\n    if i%2 == 0:\n        even+=1\n    else:\n        odd+=1\nans = 0\nif p == 0:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    ans += 1<<even\n    i = 2\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)\nelse:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    i = 1\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9479": {"id": 9479, "code": "def ABC_85_A():\n    S = \"2017/01/31\"\n    S = list(S)\n    S[3] = '8'\n    S = ''.join(S)\n    print(S)\nif __name__ == '__main__':\n    ABC_85_A()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14635": {"id": 14635, "code": "from math import factorial\ndef comb(n, r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\nn = 3;p = 0\narr = [1, 1, 1]\nodd = 0\neven = 0\nfor a in arr:\n    if a % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nans = 2 ** even\ntmp = 0\nfor i in range(p, odd+1, 2):\n    tmp += comb(odd, i)\nans *= tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15776": {"id": 15776, "code": "import sys\nimport math\nimport bisect\ndef solve(x, y, z):\n    max_val = 0\n    for i in range(10 ** 18):\n        if y * i + z * (i + 1) <= x:\n            max_val = i\n        else:\n            break\n    return max_val\ndef main():\n    x = 12;y = 3;z = 1\n    print(solve(x, y, z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "10828": {"id": 10828, "code": "S = \"level\"\nN=len(S)\ndef rule1():\n  return S==S[::-1]\ndef rule2():\n  s = S[:(N-1)//2]\n  return s==s[::-1]\ndef rule3():\n  s = S[(N+3)//2-1:]\n  return s==s[::-1]  \nprint ('Yes' if rule1() and rule2() and rule3() else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14513": {"id": 14513, "code": "def main():\n    n = 3;p = 0\n    a = [1, 1, 1]\n    D = {0:0, 1:0}\n    for i in range(n):\n        D[a[i]%2]+=1\n    ans = 0\n    nCr = {}\n    def cmb(n, r):\n        if r == 0 or r == n: return 1\n        if r == 1: return n\n        if (n,r) in nCr: return nCr[(n,r)]\n        nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n        return nCr[(n,r)]\n    if p==0:\n        for i in range(D[1]//2+1):\n            ans += cmb(D[1],2*i)\n    else:\n        for i in range(D[1]//2):\n            ans += cmb(D[1],2*i+1)\n    print(ans * pow(2,D[0]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6453": {"id": 6453, "code": "import sys\ninput=sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\ndef ab_check(list_count,i):\n    ok=-1\n    ng=n\n    B=b[i]\n    while ng-ok>1:\n        mid=(ok+ng)//2\n        if list_count[mid]<B:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bc_check(list_count,i):\n    ok=n\n    ng=-1\n    B=b[i]\n    while ok-ng>1:\n        mid=(ok+ng)//2\n        if list_count[mid]>B:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\nfor i in range(n):\n    ans+=ab_check(a,i)*bc_check(c,i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10537": {"id": 10537, "code": "import math\nA = 1;B = 1;K = 1\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndivisors = make_divisors(math.gcd(A, B))\ndivisors.sort(reverse=True)\nprint(divisors[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14406": {"id": 14406, "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "656": {"id": 656, "code": "def main():\n    K = 2\n    cnt = 1\n    a = 7%K\n    s = {a}\n    for i in range(K):\n        if a%K == 0:\n            print(cnt)\n            return\n        a = a*10 + 7\n        a = a % K\n        if a in s:\n            print(-1)\n            return\n        s.add(a)\n        cnt += 1\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14829": {"id": 14829, "code": "n = 2;p = 0\na = [1, 3]\nk=0\ng=0\nfor i in range(n):\n    if a[i]%2==0:\n        g+=1\n    else:\n        k+=1\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nnumg=0\nnumk=0\nif p==0:\n    for i in range(k//2+1):\n        numk+=cmb(k,i*2)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)\nelse:\n    for i in range((k+1)//2):\n        numk+=cmb(k,i*2+1)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4806": {"id": 4806, "code": "import sys\ndef input(): return \"xyz\".strip()\ndef resolve():\n    s = \"xyz\"\n    print(s[0]+str(len(s)-2)+s[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14319": {"id": 14319, "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15576": {"id": 15576, "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 13;y = 3;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19376": {"id": 19376, "code": "def main():\n    n = 10\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3693": {"id": 3693, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 12;b = 4\nprint(curtain(a,b))", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "2927": {"id": 2927, "code": "def main():\n    s = \"1111111111\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17309": {"id": 17309, "code": "def main():\n    a = \"D\";b = \"D\"\n    liar = False\n    if  a == \"H\" and b == \"H\" :\n        liar = False\n    elif a == \"H\" and b == \"D\" :\n        liar = True\n    elif a == \"D\" and b == \"H\" :\n        liar = True\n    elif a == \"D\" and b == \"D\" :\n        liar = False\n    if liar:\n        print(\"D\")\n    else:\n        print(\"H\")\nmain()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "11498": {"id": 11498, "code": "def resolve():\n    S = \"SAT\"\n    week = [ \"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\n    print(7-week.index(S))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "1337": {"id": 1337, "code": "def main():\n    s = 112\n    for n in range(111, 1000, 111):\n        if s <= n:\n            print(n)\n            return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "939": {"id": 939, "code": "k = 101\ndef test_case(k):\n    ans,cnt = 7,1\n    if k % 2 == 0 or k % 5 == 0:\n        return -1\n    if k == 1 or k == 7:\n        return 1\n    while (1):\n        ans = (ans * 10 + 7) % k\n        cnt += 1\n        if ans == 0:\n            return cnt\nprint(test_case(k))", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "228": {"id": 228, "code": "def str_rotate(S,k): \n    if k >= 26:\n        k = k%26\n    if ord(S) + k > 123:\n        S = chr(ord(S)+k-97)\n    else:\n        S = chr(ord(S)+k)\n    return S\ns = ['a']\nk = 25\nfor i in range(len(s)):\n    if k == 0:\n        break\n    if s[i] == \"a\":\n        pass\n    elif 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = \"a\"\n    else:\n        pass\ns[-1] = str_rotate(s[-1],k)\nprint(\"\".join(s))", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "14539": {"id": 14539, "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\ndef comb_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nx = y = 0\nif count_0 == 0:\n    x = 1\nelse:\n    if P == 1 and count_1 == 0:\n        x = 0\n    else:\n        for i in range(count_0 + 1):\n            x += comb_count(count_0, i)\nif count_1 == 0:\n    y = 1\nelse:\n    if P == 0:\n        for i in range(0, count_1 + 1, 2):\n            y += comb_count(count_1, i)\n    else:\n        for i in range(1, count_1 + 1, 2):\n            y += comb_count(count_1, i)\nprint(x * y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "16449": {"id": 16449, "code": "import bisect\ndef main():\n    N = 5\n    A = [2, 4, 6, 9, 11]\n    r = A[-1]//2\n    B = A[:-1]\n    x = bisect.bisect_left(B, r)\n    if x == 0:\n        return A[-1], B[x]\n    elif x == N-1:\n        return A[-1], B[x-1]\n    else:\n        if abs(B[x]-r) <= abs(B[x-1]-r): return A[-1], B[x]\n        else: return A[-1], B[x-1]\nif __name__ == '__main__':\n    print(*main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", "!", ">", ">"]}, "6431": {"id": 6431, "code": "from bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    B_count = [0] * N\n    for i in range(N):\n        index = bisect_right(C,B[i])\n        if index < N:\n            B_count[i] = N - index\n    D = [0] + list(accumulate(B_count))\n    ans = 0\n    for a in A:\n        index = bisect_right(B,a)\n        ans += D[N] - D[index]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14301": {"id": 14301, "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9847": {"id": 9847, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    N = 6\n    S = \")))())\"\n    res = S[:]\n    pls_left = 0\n    pls_right = 0\n    for s in S:\n        if s == '(':\n            pls_right += 1\n        else:\n            if pls_right == 0:\n                pls_left += 1\n            else:\n                pls_right -= 1\n    res = '(' * pls_left + S + ')' * pls_right\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2394": {"id": 2394, "code": "def main():\n    N = 2;M = 1\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "8021": {"id": 8021, "code": "def main():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    print((N + K - 3) // ~-K)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "16531": {"id": 16531, "code": "def main():\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    aj = A.pop()\n    A.sort(key=lambda x: abs(aj / 2 - x))\n    print(aj, A[0]) \nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13470": {"id": 13470, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "6556": {"id": 6556, "code": "def main():\n    N = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16816": {"id": 16816, "code": "def main():\n  string = ['D', 'H']\n  if string[0]=='H':\n    print(string[1])\n  else:\n    if string[1]=='H':\n      print('D')\n    else:\n      print('H')\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "17091": {"id": 17091, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    a = \"H\";b = \"H\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "12594": {"id": 12594, "code": "def solve(a,b,k):\n    l = []\n    for i in range(min(a,b)):\n        if a % (i+1) == 0 and b % (i+1) == 0:\n            l.append(i+1)\n    return(l[-k])\ndef main():\n    A = 1;B = 1;K = 1\n    print(solve(A,B,K))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10401": {"id": 10401, "code": "def check(a,b):\n  d=[]\n  for i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n      d.append(i)\n  return d[::-1]\na = 8;b = 12;k = 2\nprint(check(a,b)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11098": {"id": 11098, "code": "s = \"akasaka\"\ndef kaibun(w):\n    for i in range(len(w)):\n        if w[i]!=w[len(w)-1-i]:\n            return False\n    return True\nn=len(s)\nprint(\"Yes\") if all([kaibun(s) , kaibun(s[:(n-1)//2]) , kaibun(s[(n+3)//2-1:])]) else print(\"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "8932": {"id": 8932, "code": "def solve():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "18997": {"id": 18997, "code": "def resolve():\n    N = \"12\"\n    res = 0\n    if int(str(N)[-1]) % 2 == 0:\n        i = 0\n        N=int(N)\n        while int(N) >= 2*5**i:\n            i += 1\n            res += N//(2*5**i)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9110": {"id": 9110, "code": "def main():\n    print(\"2017/01/07\".replace('2017','2018'))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "16286": {"id": 16286, "code": "import math\nn = 2\na = [100, 0]\na.sort()\ndef comb(n, r):\n    return math.factorial(n) // math.factorial(n - r)\nmaxi = 0\ni = -1\nkey = a[i] // 2\nfor j in range(n):\n    if a[j] > key:\n        break\nif abs(a[j-1] - key) >= abs(a[j] - key) and j < n-1:\n    ans = [a[i], a[j]]\nelse:\n    ans = [a[i], a[j-1]]\nprint(\"{} {}\". format(ans[0], ans[1]))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11764": {"id": 11764, "code": "import heapq\nfrom sys import stdin\ninput = stdin.readline\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\ndef main():\n    if m1 ==12:\n        if m2 == 1 and d2 ==1 :\n            print(1)\n        else:\n            print(0)\n    else:\n        if m2 ==m1+1 and d2 ==1:\n            print(1)\n        else:\n            print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "4099": {"id": 4099, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    if M2 >= M1:\n        diff = (H2-H1)*60 + M2-M1\n    else:\n        diff = (H2-H1)*60 + 60-M1+M2 -60\n    if diff <= 0:\n        print(0)\n    else:\n        print(diff - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "4455": {"id": 4455, "code": "def resolve():\n    s = \"xyz\"\n    print(\"{}{}{}\".format(s[0],len(s)-2,s[-1]))\nresolve()", "coverage": [">", ">", ">", ">"]}, "2115": {"id": 2115, "code": "def solve():\n    N = 100;A = 100;B = 100\n    max_both = B if A > B else A\n    min_both = (A + B) - N if (A + B) > N else 0\n    print(max_both, min_both)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1377": {"id": 1377, "code": "import sys\nimport math\nsys.setrecursionlimit(500000)\nINF = float('inf')\ndef main():\n    n = 111\n    for i in range(n, 1000):\n        flag = True\n        for j, c in enumerate(str(i)):\n            if j == 0:\n                continue\n            else:\n                if c != str(i)[0]:\n                    flag = False\n                    break\n        if flag:\n            return i\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "12276": {"id": 12276, "code": "string = \"atcoder\"\npalindrome=False\npalin1=False\ndef palin(string):\n    palindrome=False\n    if string==string[::-1]:\n        palindrome=True\n    return palindrome\npalindrome=palin(string)\nif palin(string[int((len(string)-1)/2)])==True and palindrome==True:\n    palin1=True\nif palin(string[int((len(string)+3)/2)-1:len(string)])==True and palin1==True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1467": {"id": 1467, "code": "def main():\n    n = \"750\"\n    if n[0] == '0':\n        print('111')\n    elif n[0] < n[1] or n[0] < n[2]:\n        print((int(n[0]) + 1) * 111)\n    else:\n        print(int(n[0]) * 111)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "13365": {"id": 13365, "code": "def resolve():\n    a = \"haiku\";b = \"atcoder\";c = \"tasks\"\n    print(a,b,c)\nresolve()", "coverage": [">", ">", ">", ">"]}, "8816": {"id": 8816, "code": "def main():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5918": {"id": 5918, "code": "def solve(n):\n    return (n+1)//2\nn = 2\nprint(solve(n))", "coverage": [">", ">", ">", ">"]}, "19167": {"id": 19167, "code": "def main():\n    n = 12\n    if n%2==1:\n        print(0)\n    else:\n        ans = 0\n        waru = 10\n        while n>=waru:\n            ans += n//waru\n            waru = waru*5\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4236": {"id": 4236, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    x = 60 * h1 + m1\n    y = 60 * h2 + m2 - k\n    print(max(0, y - x))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18204": {"id": 18204, "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    print((N-1)//max(H,W) + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10238": {"id": 10238, "code": "def main():\n    n = 3\n    s = \"())\"\n    l, r = 0, 0\n    for i in s:\n        if i == \")\":\n            if l:\n                l -= 1\n            else:\n                r += 1\n        else:\n            l += 1\n    print(r * \"(\" + s + \")\" * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "3533": {"id": 3533, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19220": {"id": 19220, "code": "import sys\nread = sys.stdin.read\ndef main():\n    n = 12\n    if n <= 9 or n % 2 == 1:\n        print(0)\n        sys.exit()\n    n5 = 5\n    r = 0\n    while n >= n5 * 2:\n        r += n // (n5 * 2)\n        n5 *= 5\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13118": {"id": 13118, "code": "def main():\n    x = 5\n    if x in [3, 5, 7]:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12858": {"id": 12858, "code": "def resolve():\n    x = \"5\"\n    if x in '753':\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "138": {"id": 138, "code": "import sys\nsys.setrecursionlimit(10**7)\nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\na = {c:i for i, c in enumerate(alphabets)}\ns = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nn = len(s)\nk = 100\ndef f(k, i):\n    if i == n - 1:\n        k_ = k % 26\n        c = s[i]\n        shifted = (k_ + a[c]) % 26\n        return alphabets[shifted]\n    c = s[i]\n    diff = 26 - a[c]\n    if c != \"a\" and diff <= k:\n        return \"a\" + f(k-diff, i+1)\n    else:\n        return c + f(k, i+1)\nprint(f(k, 0))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "3048": {"id": 3048, "code": "def resolve():\n    S = \"1111111111\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10343": {"id": 10343, "code": "def solve():\n    A = 8;B = 12;K = 2\n    common_div = []\n    for i in range(1, min(A, B)+1):\n        if(A % i == 0 and B % i == 0):\n            common_div.append(i)\n    common_div.sort(reverse=True)\n    print(common_div[K-1])\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1751": {"id": 1751, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    n = 10;a = 3;b = 5\n    print(min(a,b), max(0, a+b-n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18913": {"id": 18913, "code": "import sys\nsysread = sys.stdin.buffer.readline\nread = sys.stdin.buffer.read\nfrom heapq import heappop, heappush\nsys.setrecursionlimit(10**7)\ndef run():\n    N = 5\n    if N % 2:\n        print(0)\n    else:\n        ans = 0\n        div = 10\n        while True:\n            val = N // div\n            ans += val\n            if not val:break\n            div *= 5\n        print(ans)\nif __name__ == \"__main__\":\n    run()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "12919": {"id": 12919, "code": "X = 6\ndef age(X):\n if X==3 or X==5 or X==7:\n   return 'YES'\n else:\n   return 'NO'\nprint(age(X))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "19093": {"id": 19093, "code": "from sys import stdin\nfrom sys import exit\ndef main():\n    readline=stdin.readline\n    n = 12\n    if n%2==1:\n        print(0)\n        exit()\n    n//=2\n    ans=0\n    x=5\n    while n//x>=1:\n        ans+=n//x\n        x*=5\n    print(ans)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5207": {"id": 5207, "code": "def resolve():\n    s = \"smiles\"\n    print('{}{}{}'.format(s[0],len(s)-2,s[-1]))\nresolve()", "coverage": [">", ">", ">", ">"]}, "11327": {"id": 11327, "code": "def main():\n    S = \"SUN\"\n    week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    print(7-week.index(S))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "2316": {"id": 2316, "code": "import sys\ndef input(): return \"100 100 100\".rstrip()\ndef main():\n    n = 100;a = 100;b = 100\n    print(min(a,b),max(0,a+b-n))\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "346": {"id": 346, "code": "class common_function():\n    def __init__(self):\n        self.sletter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n        self.bletter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\ndef main():\n    common = common_function()\n    s = ['a']\n    K = 25\n    t = [0]\n    for i in range(len(common.sletter)-1, 0, -1):\n        t.append(i)\n    u = []\n    for i in range(len(s)):\n        u.append(t[common.sletter.index(s[i])])\n    ans = ''\n    for i in range(len(s)-1):\n        if u[i] <= K:\n            ans += 'a'\n            K -= u[i]\n        else:\n            ans += s[i]\n    K = K%26\n    if u[len(s)-1] <= K:\n        K -= u[len(s)-1]\n        ans += common.sletter[K]\n    else:\n        ans += common.sletter[common.sletter.index(s[len(s)-1])+K]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10724": {"id": 10724, "code": "S = \"akasaka\"\nN = len(S)\ndef is_palindrome(s):\n    return s == ''.join(list(reversed(s)))\nans = 'Yes' if is_palindrome(S) and is_palindrome(S[:(N-1)//2]) and is_palindrome(S[(N+1)//2:]) else 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18331": {"id": 18331, "code": "def resolve():\n    a = 2\n    b = 100\n    c = 200\n    d = max(a, b)\n    print(((c-1)//d)+1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8565": {"id": 8565, "code": "def resolve():\n    n = 7\n    a_1 = [3, 3, 4, 5, 4, 5, 3]\n    a_2 = [5, 3, 4, 4, 2, 3, 2]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16629": {"id": 16629, "code": "def actual(a, b):\n    if a == b:\n        return 'H'\n    return 'D'\na = \"H\";b = \"H\"\nprint(actual(a, b))", "coverage": [">", ">", ">", "!", ">", ">"]}, "5906": {"id": 5906, "code": "def main():\n  num = 2\n  if num%2==0:\n    print(int(num/2))\n  else:\n    print(int(num/2)+1)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15137": {"id": 15137, "code": "from math import factorial as fa\ndef comb(n, r):\n    return fa(n)//(fa(n-r)*fa(r))\nn = 3;p = 0\nA = [1, 1, 1]\neven = A.count(0)\nodd = A.count(1)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i)\nprint(ans*pow(2,even))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18779": {"id": 18779, "code": "def resolve():\n    import math\n    H = 14\n    W = 12\n    N = 112\n    print(math.ceil(N/max(H, W)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12446": {"id": 12446, "code": "from sys  import stdin,stdout\nimport bisect\nimport math\ndef st():\n    return list(stdin.readline().strip())\ndef inp():\n    return int(stdin.readline())\ndef li():\n    return list(map(int,stdin.readline().split()))\ndef mp():\n    return map(int,stdin.readline().split())\ndef pr(n):\n    stdout.write(str(n)+\"\\n\")\ndef soe(limit):\n    l=[1]*(limit+1)\n    prime=[]\n    for i in range(2,limit+1):\n        if l[i]:\n            for j in range(i*i,limit+1,i):\n                l[j]=0\n    for i in range(2,limit+1):\n        if l[i]:\n            prime.append(i)\n    return prime\ndef segsoe(low,high):\n    limit=int(high**0.5)+1\n    prime=soe(limit)\n    n=high-low+1\n    l=[0]*(n+1)\n    for i in range(len(prime)):\n        lowlimit=(low//prime[i])*prime[i]\n        if lowlimit<low:\n            lowlimit+=prime[i]\n        if lowlimit==prime[i]:\n            lowlimit+=prime[i]\n        for j in range(lowlimit,high+1,prime[i]):\n            l[j-low]=1\n    for i in range(low,high+1):\n        if not l[i-low]:\n            if i!=1:\n                print(i)\ndef power(a,n):\n    r=1\n    while n:\n        if n&1:\n            r=(r*a)\n        a*=a\n        n=n>>1\n    return r\ndef solve():\n    s = \"akasaka\"\n    n=len(s)\n    a=s[:(n-1)//2]\n    b=a[::-1]\n    c=s[(n+3)//2 -1 :]\n    d=c[::-1]\n    if s==s[::-1] and a==b and c==d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfor _ in range(1):\n    solve()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13332": {"id": 13332, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "11178": {"id": 11178, "code": "def main():\n    S = ['a', 'k', 'a', 's', 'a', 'k', 'a']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "17586": {"id": 17586, "code": "def YY(x):\n    if 1<=x and x<=12:\n        return True\n    else:\n        return False\nS = \"1905\"\nA=int(S[0:2])\nB=int(S[2:4])\nif YY(A) and YY(B):\n    print(\"AMBIGUOUS\")\nelif YY(A):\n    print(\"MMYY\")\nelif YY(B):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "15003": {"id": 15003, "code": "n = 1;p = 1\na = [50]\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\ng = 0\nk=0\nfor i in a:\n    if i%2:\n        k+=1\n    else:\n        g+=1\nif p == 0:\n    x = 2**g - 1\n    y = 0\n    for i in range(2,k+1,2):\n        y += cmb(k,i)\n    ans = y*x + x + y +1\n    print(ans)\nelse:\n    x = 2**g-1\n    y = 0\n    for i in range(1,k+1,2):\n        y += cmb(k,i)\n    print(y*x+y)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">"]}, "6785": {"id": 6785, "code": "mod = 1e9+7\ndef add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\ndef main():\n    H = 10;N = 3\n    s = 15\n    if s >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12942": {"id": 12942, "code": "import sys\ndef input(): return \"5\".strip()\ndef main():\n    X = 5\n    if X == 7 or X == 5 or X == 3:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15118": {"id": 15118, "code": "N = 1;P = 1\nA = [50]\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef calc(n):\n    ans = 0\n    for r in range(n-n%2, -1, -2):\n        ans += combinations_count(n, r)\n    return ans\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu +=1\nkisu = N - gusu\np0 = 2**gusu*calc(kisu)\nif P == 0:\n    print(p0)\nelse:\n    print(2**N-p0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18210": {"id": 18210, "code": "import math\ndef main():\n    h = 3\n    w = 7\n    n = 10\n    if w >= h:\n        ans = math.ceil(n/w)\n    else:\n        ans = math.ceil(n/h)\n    print(ans)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6278": {"id": 6278, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13797": {"id": 13797, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1297": {"id": 1297, "code": "def actual(n):\n    is_zorome = lambda num: len(set(str(num))) == 1\n    for i in range(100, 1000):\n        if i >= n and is_zorome(i):\n            return i\nn = 111\nprint(actual(n))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13724": {"id": 13724, "code": "def resolve():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    T = h2*60 + m2 - (h1*60 + m1)\n    print(T-k)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "5416": {"id": 5416, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    print(N//2+1) if N % 2 else print(N//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7918": {"id": 7918, "code": "import sys\nreadline = sys.stdin.readline\nimport math\ndef main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    print(math.ceil((N-1)/(K-1)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17047": {"id": 17047, "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == 'H':\n        if b == 'H':\n            ans = 'H'\n        else:\n            ans = 'D'\n    else:\n        if b == 'H':\n            ans = 'D'\n        else:\n            ans = 'H'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "10853": {"id": 10853, "code": "s = \"atcoder\"\nn = len(s)\ndef f(s):\n    return s == s[::-1]\nif f(s) and f(s[:(n-1)//2]) and f(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2760": {"id": 2760, "code": "def main():\n    N = {'9', '4', '1', '7'}\n    if set(['1', '9', '7', '4']) == N:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "5369": {"id": 5369, "code": "def solve():\n    n = 2\n    ans = (n + 1) //2\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "680": {"id": 680, "code": "from sys import stdin\ninput = stdin.readline\nimport math\ndef solve():\n    k = 2\n    if k % 2 == 0 or k % 5 == 0:\n        print(-1)\n        return\n    cnt = 1\n    cur = 7\n    while True:\n        r = cur % k\n        if r == 0:\n            print(cnt)\n            break\n        cur = r * 10 + 7\n        cnt += 1\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13531": {"id": 13531, "code": "s = \"abcde,fghihgf,edcba\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "10455": {"id": 10455, "code": "def gcd(a,b):\n    if b==0: return a\n    return gcd(b,a%b)\na = 1;b = 1;k = 1\ng=gcd(a,b)\ncnt=0\nfor i in range(g,0,-1):\n    if g%i==0: cnt+=1\n    if cnt==k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8268": {"id": 8268, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ndef solve(N,K,A):\n    ans = -(-(N-1)//(K-1))\n    return ans\nprint(solve(N,K,A))", "coverage": [">", ">", ">", ">", ">", ">"]}}